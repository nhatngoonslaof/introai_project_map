{"version":3,"sources":["../node_modules/underscore/modules/_setup.js","../node_modules/streamlit-component-lib/node_modules/react/index.js","../../src/event.mjs","../../src/event-target.mjs","../node_modules/flatbuffers/js/flatbuffers.mjs","../node_modules/text-encoding-utf-8/lib/encoding.lib.mjs","../util/utf8.ts","../io/interfaces.ts","../util/compat.ts","../util/buffer.ts","../io/adapters.ts","../vector.ts","../fb/Schema.ts","../fb/Message.ts","../enum.ts","../util/bit.ts","../visitor.ts","../visitor/typecomparator.ts","../type.ts","../data.ts","../util/pretty.ts","../builder/valid.ts","../builder/buffer.ts","../builder.ts","../builder/bool.ts","../builder/null.ts","../builder/date.ts","../builder/decimal.ts","../builder/dictionary.ts","../builder/fixedsizebinary.ts","../util/math.ts","../builder/float.ts","../util/bn.ts","../builder/int.ts","../builder/time.ts","../builder/timestamp.ts","../builder/interval.ts","../builder/binary.ts","../builder/utf8.ts","../builder/run.ts","../vector/row.ts","../util/vector.ts","../vector/chunked.ts","../column.ts","../util/args.ts","../schema.ts","../builder/list.ts","../builder/fixedsizelist.ts","../builder/map.ts","../builder/struct.ts","../builder/union.ts","../visitor/set.ts","../visitor/builderctor.ts","../fb/File.ts","../builder/index.ts","../ipc/metadata/file.ts","../io/stream.ts","../io/file.ts","../util/int.ts","../visitor/vectorloader.ts","../visitor/typeassembler.ts","../ipc/metadata/json.ts","../ipc/metadata/message.ts","../ipc/message.ts","../visitor/vectorassembler.ts","../ipc/writer.ts","../util/recordbatch.ts","../vector/base.ts","../vector/binary.ts","../vector/bool.ts","../vector/date.ts","../vector/decimal.ts","../vector/dictionary.ts","../vector/fixedsizebinary.ts","../vector/fixedsizelist.ts","../vector/float.ts","../vector/interval.ts","../vector/int.ts","../vector/list.ts","../vector/map.ts","../vector/null.ts","../vector/struct.ts","../vector/timestamp.ts","../vector/time.ts","../vector/union.ts","../vector/utf8.ts","../util/fn.ts","../visitor/get.ts","../visitor/indexof.ts","../visitor/iterator.ts","../visitor/toarray.ts","../visitor/bytewidth.ts","../visitor/vectorctor.ts","../vector/index.ts","../table.ts","../recordbatch.ts","../ipc/reader.ts","../io/whatwg/builder.ts","../compute/predicate.ts","../compute/dataframe.ts","../Arrow.dom.ts","../io/whatwg/iterable.ts","../io/whatwg/reader.ts","../io/whatwg/writer.ts","../node_modules/streamlit-component-lib/dist/ArrowTable.js","../node_modules/streamlit-component-lib/dist/streamlit.js","../node_modules/streamlit-component-lib/dist/StreamlitReact.js","../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","../node_modules/underscore/modules/restArguments.js","../node_modules/underscore/modules/isObject.js","../node_modules/underscore/modules/isNull.js","../node_modules/underscore/modules/isUndefined.js","../node_modules/underscore/modules/isBoolean.js","../node_modules/underscore/modules/isElement.js","../node_modules/underscore/modules/_tagTester.js","../node_modules/underscore/modules/isString.js","../node_modules/underscore/modules/isNumber.js","../node_modules/underscore/modules/isDate.js","../node_modules/underscore/modules/isRegExp.js","../node_modules/underscore/modules/isError.js","../node_modules/underscore/modules/isSymbol.js","../node_modules/underscore/modules/isArrayBuffer.js","../node_modules/underscore/modules/isFunction.js","../node_modules/underscore/modules/_hasObjectTag.js","../node_modules/underscore/modules/_stringTagBug.js","../node_modules/underscore/modules/isDataView.js","../node_modules/underscore/modules/isArray.js","../node_modules/underscore/modules/_has.js","../node_modules/underscore/modules/isArguments.js","../node_modules/underscore/modules/isFinite.js","../node_modules/underscore/modules/isNaN.js","../node_modules/underscore/modules/constant.js","../node_modules/underscore/modules/_createSizePropertyCheck.js","../node_modules/underscore/modules/_shallowProperty.js","../node_modules/underscore/modules/_getByteLength.js","../node_modules/underscore/modules/_isBufferLike.js","../node_modules/underscore/modules/isTypedArray.js","../node_modules/underscore/modules/_getLength.js","../node_modules/underscore/modules/_collectNonEnumProps.js","../node_modules/underscore/modules/keys.js","../node_modules/underscore/modules/isEmpty.js","../node_modules/underscore/modules/isMatch.js","../node_modules/underscore/modules/underscore.js","../node_modules/underscore/modules/_toBufferView.js","../node_modules/underscore/modules/isEqual.js","../node_modules/underscore/modules/allKeys.js","../node_modules/underscore/modules/_methodFingerprint.js","../node_modules/underscore/modules/isMap.js","../node_modules/underscore/modules/isWeakMap.js","../node_modules/underscore/modules/isSet.js","../node_modules/underscore/modules/isWeakSet.js","../node_modules/underscore/modules/values.js","../node_modules/underscore/modules/pairs.js","../node_modules/underscore/modules/invert.js","../node_modules/underscore/modules/functions.js","../node_modules/underscore/modules/_createAssigner.js","../node_modules/underscore/modules/extend.js","../node_modules/underscore/modules/extendOwn.js","../node_modules/underscore/modules/defaults.js","../node_modules/underscore/modules/_baseCreate.js","../node_modules/underscore/modules/create.js","../node_modules/underscore/modules/clone.js","../node_modules/underscore/modules/tap.js","../node_modules/underscore/modules/toPath.js","../node_modules/underscore/modules/_toPath.js","../node_modules/underscore/modules/_deepGet.js","../node_modules/underscore/modules/get.js","../node_modules/underscore/modules/has.js","../node_modules/underscore/modules/identity.js","../node_modules/underscore/modules/matcher.js","../node_modules/underscore/modules/property.js","../node_modules/underscore/modules/_optimizeCb.js","../node_modules/underscore/modules/_baseIteratee.js","../node_modules/underscore/modules/iteratee.js","../node_modules/underscore/modules/_cb.js","../node_modules/underscore/modules/mapObject.js","../node_modules/underscore/modules/noop.js","../node_modules/underscore/modules/propertyOf.js","../node_modules/underscore/modules/times.js","../node_modules/underscore/modules/random.js","../node_modules/underscore/modules/now.js","../node_modules/underscore/modules/_createEscaper.js","../node_modules/underscore/modules/_escapeMap.js","../node_modules/underscore/modules/escape.js","../node_modules/underscore/modules/unescape.js","../node_modules/underscore/modules/_unescapeMap.js","../node_modules/underscore/modules/templateSettings.js","../node_modules/underscore/modules/template.js","../node_modules/underscore/modules/result.js","../node_modules/underscore/modules/uniqueId.js","../node_modules/underscore/modules/chain.js","../node_modules/underscore/modules/_executeBound.js","../node_modules/underscore/modules/partial.js","../node_modules/underscore/modules/bind.js","../node_modules/underscore/modules/_isArrayLike.js","../node_modules/underscore/modules/_flatten.js","../node_modules/underscore/modules/bindAll.js","../node_modules/underscore/modules/memoize.js","../node_modules/underscore/modules/delay.js","../node_modules/underscore/modules/defer.js","../node_modules/underscore/modules/throttle.js","../node_modules/underscore/modules/debounce.js","../node_modules/underscore/modules/wrap.js","../node_modules/underscore/modules/negate.js","../node_modules/underscore/modules/compose.js","../node_modules/underscore/modules/after.js","../node_modules/underscore/modules/before.js","../node_modules/underscore/modules/once.js","../node_modules/underscore/modules/findKey.js","../node_modules/underscore/modules/_createPredicateIndexFinder.js","../node_modules/underscore/modules/findIndex.js","../node_modules/underscore/modules/findLastIndex.js","../node_modules/underscore/modules/sortedIndex.js","../node_modules/underscore/modules/_createIndexFinder.js","../node_modules/underscore/modules/indexOf.js","../node_modules/underscore/modules/lastIndexOf.js","../node_modules/underscore/modules/find.js","../node_modules/underscore/modules/findWhere.js","../node_modules/underscore/modules/each.js","../node_modules/underscore/modules/map.js","../node_modules/underscore/modules/_createReduce.js","../node_modules/underscore/modules/reduce.js","../node_modules/underscore/modules/reduceRight.js","../node_modules/underscore/modules/filter.js","../node_modules/underscore/modules/reject.js","../node_modules/underscore/modules/every.js","../node_modules/underscore/modules/some.js","../node_modules/underscore/modules/contains.js","../node_modules/underscore/modules/invoke.js","../node_modules/underscore/modules/pluck.js","../node_modules/underscore/modules/where.js","../node_modules/underscore/modules/max.js","../node_modules/underscore/modules/min.js","../node_modules/underscore/modules/toArray.js","../node_modules/underscore/modules/sample.js","../node_modules/underscore/modules/shuffle.js","../node_modules/underscore/modules/sortBy.js","../node_modules/underscore/modules/_group.js","../node_modules/underscore/modules/groupBy.js","../node_modules/underscore/modules/indexBy.js","../node_modules/underscore/modules/countBy.js","../node_modules/underscore/modules/partition.js","../node_modules/underscore/modules/size.js","../node_modules/underscore/modules/_keyInObj.js","../node_modules/underscore/modules/pick.js","../node_modules/underscore/modules/omit.js","../node_modules/underscore/modules/initial.js","../node_modules/underscore/modules/first.js","../node_modules/underscore/modules/rest.js","../node_modules/underscore/modules/last.js","../node_modules/underscore/modules/compact.js","../node_modules/underscore/modules/flatten.js","../node_modules/underscore/modules/difference.js","../node_modules/underscore/modules/without.js","../node_modules/underscore/modules/uniq.js","../node_modules/underscore/modules/union.js","../node_modules/underscore/modules/intersection.js","../node_modules/underscore/modules/unzip.js","../node_modules/underscore/modules/zip.js","../node_modules/underscore/modules/object.js","../node_modules/underscore/modules/range.js","../node_modules/underscore/modules/chunk.js","../node_modules/underscore/modules/_chainResult.js","../node_modules/underscore/modules/mixin.js","../node_modules/underscore/modules/underscore-array-methods.js","../node_modules/underscore/modules/index-default.js","../node_modules/react-is/index.js","../node_modules/react-is/cjs/react-is.production.min.js","../node_modules/streamlit-component-lib/node_modules/react/cjs/react.production.min.js","../node_modules/object-assign/index.js","../node_modules/webpack/buildin/global.js"],"names":["VERSION","root","self","global","Function","ArrayProto","Array","prototype","ObjProto","Object","SymbolProto","Symbol","push","slice","toString","hasOwnProperty","supportsArrayBuffer","ArrayBuffer","supportsDataView","DataView","nativeIsArray","isArray","nativeKeys","keys","nativeCreate","create","nativeIsView","isView","_isNaN","isNaN","_isFinite","isFinite","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","MAX_ARRAY_INDEX","Math","pow","module","exports","require","privateData","WeakMap","wrappers","pd","event","retv","get","console","assert","setCancelFlag","data","passiveListener","cancelable","canceled","preventDefault","error","Event","eventTarget","set","this","eventPhase","currentTarget","stopped","immediateStopped","timeStamp","Date","now","defineProperty","value","enumerable","i","length","key","defineRedirectDescriptor","configurable","defineCallDescriptor","apply","arguments","getWrapper","proto","wrapper","BaseEvent","CustomEvent","call","constructor","writable","isFunc","getOwnPropertyDescriptor","defineWrapper","getPrototypeOf","isStopped","setPassiveListener","type","target","composedPath","NONE","CAPTURING_PHASE","AT_TARGET","BUBBLING_PHASE","stopPropagation","stopImmediatePropagation","bubbles","Boolean","defaultPrevented","composed","srcElement","cancelBubble","returnValue","initEvent","window","setPrototypeOf","listenersMap","ATTRIBUTE","isObject","x","getListeners","listeners","TypeError","defineEventAttribute","eventTargetPrototype","eventName","concat","node","listenerType","listener","next","prev","delete","newNode","passive","once","defineEventAttributeDescriptor","defineCustomEventTarget","eventNames","CustomEventTarget","EventTarget","types","Map","addEventListener","options","optionsIsObj","capture","undefined","removeEventListener","dispatchEvent","wrappedEvent","wrapEvent","err","handleEvent","setEventPhase","setCurrentTarget","flatbuffers","inRange","a","min","max","ToDictionary","o","Offset","Table","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","Encoding","UTF8_BYTES","UTF16_STRING","int32","Int32Array","float32","Float32Array","buffer","float64","Float64Array","isLittleEndian","Uint16Array","Uint8Array","Long","low","high","ZERO","toFloat64","equals","other","Builder","opt_initial_size","initial_size","bb","ByteBuffer","allocate","space","minalign","vtable","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","clear","capacity","forceDefaults","dataBuffer","asUint8Array","bytes","subarray","position","offset","prep","size","additional_bytes","align_size","old_buf_size","growByteBuffer","pad","byte_size","writeInt8","writeInt16","writeInt32","writeInt64","writeFloat32","writeFloat64","addInt8","addInt16","addInt32","addInt64","addFloat32","addFloat64","addFieldInt8","voffset","defaultValue","slot","addFieldInt16","addFieldInt32","addFieldInt64","addFieldFloat32","addFieldFloat64","addFieldOffset","addOffset","addFieldStruct","nested","obj","Error","notNested","new_buf_size","nbb","setPosition","startObject","numfields","endObject","vtableloc","trimmed_size","len","existing_vtable","vt1","outer_loop","vt2","readInt16","j","finish","root_table","opt_file_identifier","file_identifier","charCodeAt","requiredField","table","field","table_start","vtable_start","readInt32","startVector","elem_size","num_elems","alignment","endVector","createString","s","utf8","codePoint","createLong","bytes_","position_","readInt8","readUint8","readUint16","readUint32","readInt64","readUint64","readFloat32","readFloat64","writeUint8","writeUint16","writeUint32","writeUint64","getBufferIdentifier","result","String","fromCharCode","__offset","bb_pos","vtable_offset","__union","t","__string","opt_encoding","b","c","__indirect","__vector","__vector_len","__has_identifier","ident","Stream","tokens","endOfStream","read","shift","prepend","token","unshift","pop","finished","decoderError","fatal","opt_code_point","DEFAULT_ENCODING","TextDecoder","encoding","toLowerCase","_streaming","_BOMseen","_decoder","_fatal","_ignoreBOM","TextEncoder","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","handler","stream","bite","code_point","UTF8Encoder","count","temp","decode","input","byteOffset","byteLength","input_stream","code_points","indexOf","cp","codePointsToString","encode","opt_string","string","n","u","d","stringToCodePoints","_Buffer","Buffer","useNativeEncoders","decodeUtf8","decoder","toUint8Array","from","TextDecoderPolyfill","encodeUtf8","encoder","TextEncoderPolyfill","ITERATOR_DONE","freeze","done","ArrowJSON","_json","schema","batches","dictionaries","ReadableInterop","tee","_getDOMStream","pipe","_getNodeStream","pipeTo","pipeThrough","duplex","_DOMStream","toDOMStream","_nodeStream","toNodeStream","AsyncQueue","super","_values","resolvers","_closedPromise","Promise","r","_closedPromiseResolve","closed","cancel","reason","return","write","_ensureOpen","resolve","abort","_error","reject","close","asyncIterator","streamAdapters","throw","_","peek","BigIntCtor","BigIntAvailable","BigIntUnavailableError","BigIntUnavailable","asIntN","asUintN","BigInt","BigInt64ArrayCtor","BigInt64ArrayAvailable","BigInt64ArrayUnavailableError","BigInt64Array","BYTES_PER_ELEMENT","of","BigUint64ArrayCtor","BigUint64ArrayAvailable","BigUint64ArrayUnavailableError","BigUint64Array","isNumber","isBoolean","isFunction","isPromise","then","isIterable","iterator","isAsyncIterable","isArrowJSON","isIteratorResult","isFileHandle","isFetchResponse","isReadableDOMStream","isReadableNodeStream","SharedArrayBuf","SharedArrayBuffer","memcpy","source","targetByteOffset","sourceByteLength","targetByteLength","dst","src","joinUint8Arrays","chunks","sliced","xOffset","yOffset","xLen","yLen","y","collapseContiguousByteRanges","reduce","index","Infinity","toArrayBufferView","ArrayBufferViewCtor","toInt8Array","Int8Array","toInt16Array","Int16Array","toInt32Array","toBigInt64Array","toUint16Array","toUint32Array","Uint32Array","toBigUint64Array","toFloat32Array","toFloat64Array","toUint8ClampedArray","Uint8ClampedArray","pump","toArrayBufferViewIterator","ArrayCtor","wrap","buffers","it","toInt8ArrayIterator","toInt16ArrayIterator","toInt32ArrayIterator","toUint8ArrayIterator","toUint16ArrayIterator","toUint32ArrayIterator","toFloat32ArrayIterator","toFloat64ArrayIterator","toUint8ClampedArrayIterator","async","toArrayBufferViewAsyncIterator","emit","toInt8ArrayAsyncIterator","toInt16ArrayAsyncIterator","toInt32ArrayAsyncIterator","toUint8ArrayAsyncIterator","toUint16ArrayAsyncIterator","toUint32ArrayAsyncIterator","toFloat32ArrayAsyncIterator","toFloat64ArrayAsyncIterator","toUint8ClampedArrayAsyncIterator","rebaseValueOffsets","valueOffsets","compareArrayLike","fromIterable","cmd","threw","bufferLength","byteRange","e","fromAsyncIterable","fromDOMStream","AdaptiveByteReader","releaseLock","fromNodeStream","events","onEvent","race","map","cleanup","evt","fn","destroy","byobReader","defaultReader","supportsBYOB","reader","getBYOBReader","getDefaultReader","catch","readFromBYOBReader","mode","readInto","AbstractVector","org","arrow","apache","flatbuf","MetadataVersion","UnionMode","Precision","DateUnit","TimeUnit","IntervalUnit","Type","Endianness","Null","__init","getRootAsNull","startNull","builder","endNull","createNull","Struct_","getRootAsStruct_","startStruct_","endStruct_","createStruct_","List","getRootAsList","startList","endList","createList","LargeList","getRootAsLargeList","startLargeList","endLargeList","createLargeList","FixedSizeList","getRootAsFixedSizeList","listSize","startFixedSizeList","addListSize","endFixedSizeList","createFixedSizeList","getRootAsMap","keysSorted","startMap","addKeysSorted","endMap","createMap","Union","getRootAsUnion","Sparse","typeIds","typeIdsLength","typeIdsArray","startUnion","addMode","addTypeIds","typeIdsOffset","createTypeIdsVector","startTypeIdsVector","numElems","endUnion","createUnion","Int","getRootAsInt","bitWidth","isSigned","startInt","addBitWidth","addIsSigned","endInt","createInt","FloatingPoint","getRootAsFloatingPoint","precision","HALF","startFloatingPoint","addPrecision","endFloatingPoint","createFloatingPoint","Utf8","getRootAsUtf8","startUtf8","endUtf8","createUtf8","Binary","getRootAsBinary","startBinary","endBinary","createBinary","LargeUtf8","getRootAsLargeUtf8","startLargeUtf8","endLargeUtf8","createLargeUtf8","LargeBinary","getRootAsLargeBinary","startLargeBinary","endLargeBinary","createLargeBinary","FixedSizeBinary","getRootAsFixedSizeBinary","byteWidth","startFixedSizeBinary","addByteWidth","endFixedSizeBinary","createFixedSizeBinary","Bool","getRootAsBool","startBool","endBool","createBool","Decimal","getRootAsDecimal","scale","startDecimal","addScale","endDecimal","createDecimal","getRootAsDate","unit","MILLISECOND","startDate","addUnit","endDate","createDate","Time","getRootAsTime","startTime","endTime","createTime","Timestamp","getRootAsTimestamp","SECOND","timezone","optionalEncoding","startTimestamp","addTimezone","timezoneOffset","endTimestamp","createTimestamp","Interval","getRootAsInterval","YEAR_MONTH","startInterval","endInterval","createInterval","Duration","getRootAsDuration","startDuration","endDuration","createDuration","KeyValue","getRootAsKeyValue","startKeyValue","addKey","keyOffset","addValue","valueOffset","endKeyValue","createKeyValue","DictionaryEncoding","getRootAsDictionaryEncoding","id","indexType","isOrdered","startDictionaryEncoding","addId","addIndexType","indexTypeOffset","addIsOrdered","endDictionaryEncoding","createDictionaryEncoding","Field","getRootAsField","name","nullable","typeType","dictionary","children","childrenLength","customMetadata","customMetadataLength","startField","addName","nameOffset","addNullable","addTypeType","addType","typeOffset","addDictionary","dictionaryOffset","addChildren","childrenOffset","createChildrenVector","startChildrenVector","addCustomMetadata","customMetadataOffset","createCustomMetadataVector","startCustomMetadataVector","endField","createField","createBuffer","Schema","getRootAsSchema","endianness","Little","fields","fieldsLength","startSchema","addEndianness","addFields","fieldsOffset","createFieldsVector","startFieldsVector","endSchema","finishSchemaBuffer","createSchema","NS7624605610262437867","MessageHeader","FieldNode","nullCount","createFieldNode","null_count","RecordBatch","getRootAsRecordBatch","nodes","nodesLength","buffersLength","startRecordBatch","addLength","addNodes","nodesOffset","startNodesVector","addBuffers","buffersOffset","startBuffersVector","endRecordBatch","createRecordBatch","DictionaryBatch","getRootAsDictionaryBatch","isDelta","startDictionaryBatch","addData","dataOffset","addIsDelta","endDictionaryBatch","createDictionaryBatch","Message","getRootAsMessage","version","V1","headerType","header","bodyLength","startMessage","addVersion","addHeaderType","addHeader","headerOffset","addBodyLength","endMessage","finishMessageBuffer","createMessage","Schema_","BufferType","Message_","getBool","_data","_index","byte","bit","getBit","setBool","truncateBitmap","bitmap","alignedSize","packBools","iterateBits","values","xs","begin","context","byteIndex","remaining","popcnt_bit_range","lhs","rhs","sum","rhsInside","lhsInside","popcnt_array","arr","cnt","pos","view","popcnt_uint32","getUint32","getUint16","getUint8","uint32","Visitor","visitMany","_len","args","_key","visit","_len2","_key2","getVisitFn","visitor","throwIfNotFound","dtype","Data","Vector","inferDType","DataType","visitNull","visitBool","visitInt","Int8","visitInt8","Int16","visitInt16","Int32","visitInt32","Int64","visitInt64","Uint8","visitUint8","Uint16","visitUint16","Uint32","visitUint32","Uint64","visitUint64","Float","visitFloat","Float16","visitFloat16","Float32","visitFloat32","Float64","visitFloat64","visitUtf8","visitBinary","visitFixedSizeBinary","visitDate","DateDay","visitDateDay","DateMillisecond","visitDateMillisecond","visitTimestamp","TimestampSecond","visitTimestampSecond","TimestampMillisecond","visitTimestampMillisecond","TimestampMicrosecond","visitTimestampMicrosecond","TimestampNanosecond","visitTimestampNanosecond","visitTime","TimeSecond","visitTimeSecond","TimeMillisecond","visitTimeMillisecond","TimeMicrosecond","visitTimeMicrosecond","TimeNanosecond","visitTimeNanosecond","visitDecimal","visitList","Struct","visitStruct","visitUnion","DenseUnion","visitDenseUnion","SparseUnion","visitSparseUnion","Dictionary","visitDictionary","visitInterval","IntervalDayTime","visitIntervalDayTime","IntervalYearMonth","visitIntervalYearMonth","visitFixedSizeList","visitMap","_node","typeId","SINGLE","DOUBLE","MICROSECOND","NANOSECOND","DAY","DAY_TIME","Dense","TypeComparator","compareSchemas","instance","compareFields","others","every","f","compareField","compareConstructor","compareAny","compareInt","compareFloat","compareDate","compareTimestamp","compareTime","compareUnion","compareInterval","indices","isNull","isInt","isFloat","isBinary","isUtf8","isBool","isDecimal","isDate","isTime","isTimestamp","isInterval","isList","isStruct","isUnion","isFixedSizeBinary","isFixedSizeList","isMap","isDictionary","compareTo","comparer","toStringTag","ArrayType","Int_","Date_","Time_","Timestamp_","Interval_","child","valueType","valueField","join","Union_","typeIdToChildIndex","idx","Map_","keyType","getId","atomicDictionaryId","strideForType","childData","floor","_nullCount","stride","nullBitmap","clone","childStride","_sliceBuffers","_sliceChildren","_changeLengthAndBackfillNullBitmap","newLength","fill","VALIDITY","TYPE","OFFSET","DATA","new","valueOffsetsOrChildren","undf","valueToString","toPrimitive","JSON","stringify","createIsValidFunction","nullValues","fnBody","noNaNs","filter","valueToCase","roundLengthUpToNearest64Bytes","BPE","BufferBuilder","_resize","reservedLength","reservedByteLength","append","reserve","extra","reserved","flush","array","sliceOrExtendArray","DataBufferBuilder","last","BitmapBufferBuilder","numValid","numInvalid","val","cur","OffsetsBufferBuilder","WideBufferBuilder","ArrayType64","_ArrayType64","buffer64","_ref","nulls","_nulls","_isValid","throughNode","throughDOM","throughIterable","queueingStrategy","highWaterMark","sizeProperty","numChunks","toVector","throughAsyncIterable","numChildren","_offsets","_typeIds","isValid","setValid","setValue","_setValue","valid","addChild","getChildAt","offsets","forEach","FixedWidthBuilder","opts","VariableWidthBuilder","_pendingLength","pending","_pending","current","_flush","pendingLength","_flushPending","BoolBuilder","NullBuilder","DateBuilder","DateDayBuilder","DateMillisecondBuilder","DecimalBuilder","DictionaryBuilder","hashFn","_dictionaryOffset","_keysToIndices","valueToKey","keysToIndices","_dictionary","curr","FixedSizeBinaryBuilder","f64","u32","uint16ToFloat64","h","expo","sigf","sign","NaN","float64ToUint16","FloatBuilder","Float16Builder","Float32Builder","Float64Builder","isArrowBigNumSymbol","for","BigNum","SignedBigNum","UnsignedBigNum","_len3","_key3","DecimalBigNum","_len4","_key4","bignumToNumber","bn","hi","lo","signed","words","number","bignumToString","bignumToBigInt","decimalToString","digits","base64","base32","checks","reverse","toJSON","valueOf","assign","BN","num","unsigned","decimal","IntBuilder","Int8Builder","Int16Builder","Int32Builder","Int64Builder","toBigInt","values64","Uint8Builder","Uint16Builder","Uint32Builder","Uint64Builder","memo","TimeBuilder","TimeSecondBuilder","TimeMillisecondBuilder","TimeMicrosecondBuilder","TimeNanosecondBuilder","TimestampBuilder","TimestampSecondBuilder","TimestampMillisecondBuilder","TimestampMicrosecondBuilder","TimestampNanosecondBuilder","IntervalBuilder","IntervalDayTimeBuilder","IntervalYearMonthBuilder","BinaryBuilder","Utf8Builder","Run","bind","kParent","kRowIndex","kKeyToIdx","kIdxToVal","kCustomInspect","Row","parent","numKeys","entries","has","ktoi","itov","getValue","getIndex","ki","vi","k","v","kr","vr","callbackfn","thisArg","callback","m","toArray","inspect","str","defineProperties","MapRow","createRowProxy","getKey","StructRow","defineRowProxyProperties","findIndex","desc","row","getter","setter","Proxy","RowProxyHandler","isExtensible","deleteProperty","preventExtensions","ownKeys","receiver","Reflect","clampIndex","adjust","tmp","clampRange","end","big0","isNaNFast","createElementComparator","search","typeofSearch","valueOfSearch","comparators","createSubElementsComparator","creatMapComparator","createArrayLikeComparator","createVectorComparator","createObjectComparator","compareArray","compareObject","vec","compareVector","lKeyItr","rKeyItr","rValItr","rVal","lKey","rKey","Chunked","vectors","calculateOffsets","_type","_chunks","_chunkOffsets","_length","_numChildren","flatten","selectChunkArgs","VectorName","chunk","_indices","_sliceInternal","columns","_children","vector","mid","isValidInternal","getInternal","_ref2","element","indexOfInternal","arraySet","typedSet","_ref3","_ref4","_ref5","chunkIndex","fromIndex","start","found","slices","chunkOffsets","chunkLength","chunkOffset","to","Column","_field","SingleChunkColumn","rest","some","metadata","column","_chunk","selectArgs","Ctor","vals","_selectArgs","selectFieldArgs","_selectFieldArgs","_selectChunkArgs","selectVectorChildrenArgs","_selectVectorChildrenArgs","res","toKeysAndValues","ret","fieldIndex","valueIndex","generateDictionaryMap","select","columnNames","names","selectAt","columnIndices","curFields","mergeMaps","newFields","f2","newDictionaries","_len5","_key5","_len6","_key6","m1","m2","ListBuilder","_run","run","FixedSizeListBuilder","childIndex","MapBuilder","StructBuilder","UnionBuilder","_valueToChildTypeId","childTypeId","SparseUnionBuilder","DenseUnionBuilder","SetVisitor","setEpochMsToMillisecondsLong","epochMs","setVariableWidthBytes","setDateDay","setEpochMsToDays","setDateMillisecond","setNumeric","setFloat16","setNumericX2","long","setTimestampSecond","_ref9","setTimestampMillisecond","_ref10","setTimestampMicrosecond","_ref11","setEpochMsToMicrosecondsLong","setTimestampNanosecond","_ref12","setEpochMsToNanosecondsLong","setTimeSecond","_ref13","setTimeMillisecond","_ref14","setTimeMicrosecond","_ref15","setTimeNanosecond","_ref16","setDenseUnion","setSparseUnion","setIntervalDayTime","_ref18","setIntervalYearMonth","_ref19","setInt","setFloat","setUtf8","_ref8","setBinary","_ref7","setFixedSizeBinary","_ref6","setDate","setTimestamp","setTime","setDecimal","_ref17","setList","itr","setStruct","_setStructVectorValue","_setStructArrayValue","_setStructObjectValue","_setStructMapValue","setUnion","setDictionary","setIntervalValue","setFixedSizeList","setMap","newBuilder","getBuilderConstructor","defaultOptions","getChildOptions","T","setVisitor","Footer","getRootAsFooter","Block","dictionariesLength","recordBatches","recordBatchesLength","startFooter","addSchema","schemaOffset","addDictionaries","dictionariesOffset","startDictionariesVector","addRecordBatches","recordBatchesOffset","startRecordBatchesVector","endFooter","finishFooterBuffer","createFooter","metaDataLength","createBlock","_Block","File_","_Footer","Footer_","V4","dictionaryBatches","_recordBatches","_dictionaryBatches","buf","footer","OffHeapFooter","numRecordBatches","rb","FileBlock","numDictionaries","db","dictionaryBatchesOffset","block","getRecordBatch","getDictionaryBatch","_footer","fileBlock","AsyncByteQueue","ByteStream","ByteStreamSource","AsyncByteStream","AsyncByteStreamSource","body","RandomAccessFile","readAt","getInt32","seek","nBytes","AsyncRandomAccessFile","file","_handle","stat","bytesRead","intAsHex","kPowersOfTen","BaseInt64","_times","L","R","product","_plus","lessThan","greaterThan","hex","times","plus","out_buffer","fromString","fromNumber","out","posn","group","parseInt","substr","multiple","convertArray","multiply","left","right","add","negate","this_high","other_high","startsWith","Int128","L0","L1","L2","L3","R0","R1","R2","R3","sums","VectorLoader","nodesIndex","buffersIndex","nextFieldNode","readNullBitmap","readData","readOffsets","readTypeIds","readDictionary","nextBufferRange","JSONVectorLoader","sources","joined","binaryDataFromJSON","recordBatchFromJSON","fieldNodesFromJSON","buffersFromJSON","fieldChildrenFromJSON","fromJSON","fieldNodes","validity","BufferRegion","customMetadataFromJSON","_metadata","indexTypeFromJSON","typeFromJSON","_Field","_Schema","_Message","_KeyValue","_FieldNode","_Endianness","_RecordBatch","_DictionaryBatch","_version","_headerType","_createHeader","_bodyLength","msg","message","messageHeaderFromJSON","_message","decodeMessageHeader","isSchema","isRecordBatch","isDictionaryBatch","_nodes","_buffers","_id","_isDelta","decodeFieldChildren","decodeCustomMetadata","entry","decodeIndexType","decodeFieldType","typeAssembler","childOffsets","childrenVectorOffset","metadataOffset","dictType","dictMeta","fieldOffsets","fieldsVectorOffset","platformIsLittleEndian","Big","_schema","decodeSchemaFields","schemaFieldsFromJSON","recordBatch","nodesVectorOffset","b_","buffersVectorOffset","batch","decodeFieldNodes","bufferRegions","decodeBuffers","dictionaryBatch","setInt16","invalidMessageType","nullMessage","invalidMessageMetadata","expected","actual","invalidMessageBodyLength","MessageReader","readMetadataLength","readMetadata","readMessage","readMessageBody","readSchema","throwIfNull","PADDING","metadataLength","AsyncMessageReader","JSONMessageReader","_body","_batchIndex","_dictionaryIndex","flattenDataSources","MAGIC_STR","MAGIC","checkForMagicArrowString","magicLength","magicAndPadding","magicX2AndPadding","VectorAssembler","_byteLength","_bufferRegions","assemble","assembler","vectorChildren","assembleResult","RangeError","addBuffer","_nullV","assembleFlatVector","assembleFlatListVector","firstOffset","lastOffset","assembleListVector","assembleNestedVector","maxChildTypeId","childLengths","shiftedOffsets","unshiftedOffsets","childLength","RecordBatchWriter","_position","_started","_sink","_dictionaryBlocks","_recordBatchBlocks","_dictionaryDeltaOffsets","autoDestroy","writeLegacyIpcFormat","_autoDestroy","_writeLegacyIpcFormat","writableStrategy","readableStrategy","sync","writeAll","writeAllAsync","reset","sink","isWritableNodeStream","objectMode","_writeFooter","_writeSchema","payload","_InternalEmptyPlaceholderRecordBatch","_writeRecordBatch","_writeMessage","flatbufferSize","prefixSize","nPaddingBytes","_write","_writePadding","_writeMagic","_writeDictionaries","_writeBodyBuffers","_writeDictionaryBatch","padding","RecordBatchStreamWriter","writer","RecordBatchFileWriter","noopBuf","nullBufs","bitmapLength","distributeVectorsIntoRecordBatches","vecs","batchArgs","numBatches","batchLength","numColumns","Number","POSITIVE_INFINITY","distributeChildData","uniformlyDistributeChunksAcrossRecordBatches","BaseVector","_bindDataAccessors","isConcatSpreadable","BinaryVector","asUtf8","BoolVector","vectorFromValuesWithType","DateVector","DateDayVector","DateMillisecondVector","DecimalVector","DictionaryVector","reverseLookup","setKey","FixedSizeBinaryVector","FixedSizeListVector","FloatVector","ArrowType","vectorTypeToDataType","InputType","arrayTypeToDataType","convertTo16Bit","Float16Vector","Float32Vector","Float64Vector","typeCtor","dataCtor","ctor","IntervalVector","IntervalDayTimeVector","IntervalYearMonthVector","IntVector","is64bit","convert32To64Bit","Int8Vector","Int16Vector","Int32Vector","Int64Vector","_values64","Uint8Vector","Uint16Vector","Uint32Vector","Uint64Vector","ListVector","MapVector","asList","NullVector","StructVector","_row","bound","TimestampVector","TimestampSecondVector","TimestampMillisecondVector","TimestampMicrosecondVector","TimestampNanosecondVector","TimeVector","TimeSecondVector","TimeMillisecondVector","TimeMicrosecondVector","TimeNanosecondVector","UnionVector","DenseUnionVector","SparseUnionVector","Utf8Vector","asBinary","partial0","partial2","GetVisitor","epochMillisecondsLongToMs","epochMillisecondsToDate","getVariableWidthBytes","getDateDay","epochDaysToDate","epochDaysToMs","getDateMillisecond","epochMillisecondsLongToDate","getNumeric","getFloat16","getBigInts","getTimestampSecond","getTimestampMillisecond","getTimestampMicrosecond","epochMicrosecondsLongToMs","getTimestampNanosecond","epochNanosecondsLongToMs","getTimeSecond","getTimeMillisecond","getTimeMicrosecond","getTimeNanosecond","getDenseUnion","getSparseUnion","getIntervalDayTime","getIntervalYearMonth","_ref20","interval","int32s","getNull","_vector","getInt","getFloat","getUtf8","getBinary","getFixedSizeBinary","getDate","getTimestamp","getTime","getDecimal","getList","getStruct","getUnion","getDictionary","getInterval","getFixedSizeList","getMap","IndexOfVisitor","indexOfValue","searchElement","indexOfNull","compare","indexOfUnion","IteratorVisitor","vectorIterator","getFn","getVisitor","nullByte","nullBit","nullableIterator","ToArrayVisitor","arrayOfVector","iteratorVisitor","variableWidthColumnErrorMessage","____","visitFields","visitSchema","newDataType","getVectorConstructor","transform","indexOfVisitor","toArrayVisitor","getByteWidth","byteWidthVisitor","wrapNullableSet","VectorCtor","partialType0","empty","fromStruct","tableFromIterable","tableFromAsyncIterable","RecordBatchReader","isSync","open","opening","fromAsync","cols","selectColumnArgs","numCols","getColumn","getColumnAt","getColumnIndex","serialize","nameToIndex","columnName","_this","oldToNew","newIdx","_f","_fs","fs","vs","l","batchData","ensureSameLengthData","_dictionaries","DictionaryCollector","collect","impl","_impl","isFile","isAsync","isStream","readRecordBatch","RecordBatchStreamReader","RecordBatchJSONReaderImpl","fromArrowJSON","AsyncRecordBatchFileReader","AsyncRecordBatchFileReaderImpl","AsyncRecordBatchStreamReader","AsyncRecordBatchStreamReaderImpl","fromFileHandle","RecordBatchFileReader","RecordBatchFileReaderImpl","fromAsyncByteStream","RecordBatchStreamReaderImpl","fromByteStream","readAll","readAllSync","readAllAsync","RecordBatchReaderImpl","_recordBatchIndex","_loadRecordBatch","_loadVectors","_loadDictionaryBatch","_reader","shouldAutoDestroy","_readNextMessageAndValidate","_readFooter","_readDictionaryBatch","BuilderTransform","_numChunks","_finished","_bufferedSize","builderOptions","_controller","_builder","_getSize","chunkByteLength","readableHighWaterMark","writableHighWaterMark","ReadableStream","_maybeFlush","WritableStream","_writeValueAndReturnChunkSize","bufferedSize","controller","desiredSize","_enqueue","enqueue","Value","eq","Literal","Equals","le","LTeq","ge","GTeq","lt","Not","gt","ne","Col","colidx","Predicate","and","expr","And","or","Or","not","ComparisonPredicate","_bindLitLit","_bindLitCol","_bindColLit","_bindColCol","CombinationPredicate","accum","p","_batch","rtrn","left_func","right_func","col","lit","col_func","lastDictionary","lastKey","func","countBy","DataFrame","scan","scanReverse","predicate","FilteredDataFrame","batchIndex","numRows","count_by","countByteLength","ceil","log","counts","CountByResult","_predicate","isBound","bm","hwm","pull","asyncIterableAsReadableDOMStream","iterableAsReadableDOMStream","queue","readable","ComponentMessageType","ArrowTable","indexBuffer","columnsBuffer","styler","getCell","rowIndex","columnIndex","isBlankCell","headerRows","headerColumns","isIndexCell","isColumnsCell","classNames","content","dataColumnIndex","getContent","columnsTable","dataRowIndex","uuid","indexTable","displayValuesTable","dataTable","getColumnTypeId","nanosToDate","caption","displayValues","styles","rows","dataRows","dataColumns","nanos","__assign","Streamlit","API_VERSION","RENDER_EVENT","registeredMessageListener","setComponentReady","onMessageEvent","sendBackMsg","COMPONENT_READY","apiVersion","setFrameHeight","height","document","scrollHeight","lastFrameHeight","SET_FRAME_HEIGHT","setComponentValue","dataType","isBigIntArray","isTypedArray","SET_COMPONENT_VALUE","onRenderMessage","dataframeArgs","argsDataframeToObject","disabled","theme","_injectTheme","eventData","detail","argsDataframe","argsDataframeArrow","_a","toArrowTable","fromEntries","df","postMessage","isStreamlitMessage","style","createElement","head","appendChild","innerHTML","primaryColor","backgroundColor","secondaryBackgroundColor","textColor","font","__extends","extendStatics","__proto__","__","_super","StreamlitComponentBase","componentDidMount","componentDidUpdate","React","PureComponent","reactIs","REACT_STATICS","childContextTypes","contextType","contextTypes","defaultProps","displayName","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","KNOWN_STATICS","caller","callee","arity","MEMO_STATICS","TYPE_STATICS","getStatics","component","isMemo","ForwardRef","render","Memo","getOwnPropertyNames","getOwnPropertySymbols","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","targetStatics","sourceStatics","descriptor","restArguments","startIndex","isUndefined","isElement","nodeType","tagTester","tag","nodelist","childNodes","hasStringTagBug","hasObjectTag","isIE11","isDataView","getInt8","isArrayBuffer","isArguments","isSymbol","parseFloat","constant","createSizePropertyCheck","getSizeProperty","collection","shallowProperty","getByteLength","typedArrayPattern","isBufferLike","test","collectNonEnumProps","hash","contains","emulatedSet","nonEnumIdx","prop","isEmpty","getLength","isString","isMatch","object","attrs","_keys","_wrapped","toBufferView","bufferSource","tagDataView","aStack","bStack","deepEq","className","areArrays","aCtor","bCtor","isEqual","allKeys","ie11fingerprint","methods","weakMapMethods","forEachName","commonInit","mapTail","mapMethods","setMethods","pairs","invert","functions","sort","createAssigner","keysFunc","defaults","baseCreate","props","extendOwn","extend","tap","interceptor","toPath","path","deepGet","_has","identity","matcher","property","optimizeCb","argCount","accumulator","baseIteratee","iteratee","cb","mapObject","results","currentKey","noop","propertyOf","random","createEscaper","escaper","match","testRegexp","RegExp","replaceRegexp","replace","escapeMap","templateSettings","evaluate","interpolate","escape","noMatch","escapes","escapeRegExp","escapeChar","bareIdentifier","template","text","settings","oldSettings","argument","variable","fallback","idCounter","uniqueId","prefix","chain","_chain","executeBound","sourceFunc","boundFunc","callingContext","partial","boundArgs","placeholder","callArgs","depth","strict","output","isArrayLike","memoize","hasher","cache","address","wait","setTimeout","delay","throttle","timeout","previous","later","leading","throttled","_now","clearTimeout","trailing","debounce","immediate","passed","debounced","_args","compose","after","before","findKey","createPredicateIndexFinder","dir","sortedIndex","createIndexFinder","predicateFind","item","findLastIndex","find","findWhere","each","createReduce","initial","reducer","list","guard","contextPath","method","pluck","where","computed","lastComputed","reStrSymbol","sample","rand","shuffle","sortBy","criteria","behavior","partition","pass","keyInObj","pick","first","compact","_flatten","otherArrays","difference","uniq","isSorted","seen","arrays","intersection","argsLength","unzip","range","stop","step","chainResult","mixin","allExports","g","q","w","z","$$typeof","A","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","Fragment","Lazy","Portal","Profiler","StrictMode","Suspense","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isForwardRef","isFragment","isLazy","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","typeOf","B","C","encodeURIComponent","D","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","E","F","refs","updater","G","H","isReactComponent","setState","forceUpdate","I","isPureReactComponent","J","K","ref","__self","__source","M","_owner","O","P","Q","keyPrefix","S","U","V","W","aa","X","N","Y","Z","ba","ReactCurrentDispatcher","ReactCurrentBatchConfig","suspense","ReactCurrentOwner","IsSomeRendererActing","Children","only","Component","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","cloneElement","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","createFactory","createRef","forwardRef","isValidElement","lazy","_ctor","_status","_result","useCallback","useContext","useDebugValue","useEffect","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useState","propIsEnumerable","test1","test2","test3","split","letter","shouldUseNative","symbols","toObject"],"mappings":"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","file":"static/js/2.40c26bf7.chunk.js","sourcesContent":["// Current version.\nexport var VERSION = '1.13.6';\n\n// Establish the root object, `window` (`self`) in the browser, `global`\n// on the server, or `this` in some virtual machines. We use `self`\n// instead of `window` for `WebWorker` support.\nexport var root = (typeof self == 'object' && self.self === self && self) ||\n          (typeof global == 'object' && global.global === global && global) ||\n          Function('return this')() ||\n          {};\n\n// Save bytes in the minified (but not gzipped) version:\nexport var ArrayProto = Array.prototype, ObjProto = Object.prototype;\nexport var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\n\n// Create quick reference variables for speed access to core prototypes.\nexport var push = ArrayProto.push,\n    slice = ArrayProto.slice,\n    toString = ObjProto.toString,\n    hasOwnProperty = ObjProto.hasOwnProperty;\n\n// Modern feature detection.\nexport var supportsArrayBuffer = typeof ArrayBuffer !== 'undefined',\n    supportsDataView = typeof DataView !== 'undefined';\n\n// All **ECMAScript 5+** native function implementations that we hope to use\n// are declared here.\nexport var nativeIsArray = Array.isArray,\n    nativeKeys = Object.keys,\n    nativeCreate = Object.create,\n    nativeIsView = supportsArrayBuffer && ArrayBuffer.isView;\n\n// Create references to these builtin functions because we override them.\nexport var _isNaN = isNaN,\n    _isFinite = isFinite;\n\n// Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\nexport var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\nexport var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n  'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n// The largest integer that can be represented exactly.\nexport var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","/**\n * @typedef {object} PrivateData\n * @property {EventTarget} eventTarget The event target.\n * @property {{type:string}} event The original event object.\n * @property {number} eventPhase The current event phase.\n * @property {EventTarget|null} currentTarget The current event target.\n * @property {boolean} canceled The flag to prevent default.\n * @property {boolean} stopped The flag to stop propagation.\n * @property {boolean} immediateStopped The flag to stop propagation immediately.\n * @property {Function|null} passiveListener The listener if the current listener is passive. Otherwise this is null.\n * @property {number} timeStamp The unix time.\n * @private\n */\n\n/**\n * Private data for event wrappers.\n * @type {WeakMap<Event, PrivateData>}\n * @private\n */\nconst privateData = new WeakMap()\n\n/**\n * Cache for wrapper classes.\n * @type {WeakMap<Object, Function>}\n * @private\n */\nconst wrappers = new WeakMap()\n\n/**\n * Get private data.\n * @param {Event} event The event object to get private data.\n * @returns {PrivateData} The private data of the event.\n * @private\n */\nfunction pd(event) {\n    const retv = privateData.get(event)\n    console.assert(\n        retv != null,\n        \"'this' is expected an Event object, but got\",\n        event\n    )\n    return retv\n}\n\n/**\n * https://dom.spec.whatwg.org/#set-the-canceled-flag\n * @param data {PrivateData} private data.\n */\nfunction setCancelFlag(data) {\n    if (data.passiveListener != null) {\n        if (\n            typeof console !== \"undefined\" &&\n            typeof console.error === \"function\"\n        ) {\n            console.error(\n                \"Unable to preventDefault inside passive event listener invocation.\",\n                data.passiveListener\n            )\n        }\n        return\n    }\n    if (!data.event.cancelable) {\n        return\n    }\n\n    data.canceled = true\n    if (typeof data.event.preventDefault === \"function\") {\n        data.event.preventDefault()\n    }\n}\n\n/**\n * @see https://dom.spec.whatwg.org/#interface-event\n * @private\n */\n/**\n * The event wrapper.\n * @constructor\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Event|{type:string}} event The original event to wrap.\n */\nfunction Event(eventTarget, event) {\n    privateData.set(this, {\n        eventTarget,\n        event,\n        eventPhase: 2,\n        currentTarget: eventTarget,\n        canceled: false,\n        stopped: false,\n        immediateStopped: false,\n        passiveListener: null,\n        timeStamp: event.timeStamp || Date.now(),\n    })\n\n    // https://heycam.github.io/webidl/#Unforgeable\n    Object.defineProperty(this, \"isTrusted\", { value: false, enumerable: true })\n\n    // Define accessors\n    const keys = Object.keys(event)\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i]\n        if (!(key in this)) {\n            Object.defineProperty(this, key, defineRedirectDescriptor(key))\n        }\n    }\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEvent.prototype = {\n    /**\n     * The type of this event.\n     * @type {string}\n     */\n    get type() {\n        return pd(this).event.type\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get target() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get currentTarget() {\n        return pd(this).currentTarget\n    },\n\n    /**\n     * @returns {EventTarget[]} The composed path of this event.\n     */\n    composedPath() {\n        const currentTarget = pd(this).currentTarget\n        if (currentTarget == null) {\n            return []\n        }\n        return [currentTarget]\n    },\n\n    /**\n     * Constant of NONE.\n     * @type {number}\n     */\n    get NONE() {\n        return 0\n    },\n\n    /**\n     * Constant of CAPTURING_PHASE.\n     * @type {number}\n     */\n    get CAPTURING_PHASE() {\n        return 1\n    },\n\n    /**\n     * Constant of AT_TARGET.\n     * @type {number}\n     */\n    get AT_TARGET() {\n        return 2\n    },\n\n    /**\n     * Constant of BUBBLING_PHASE.\n     * @type {number}\n     */\n    get BUBBLING_PHASE() {\n        return 3\n    },\n\n    /**\n     * The target of this event.\n     * @type {number}\n     */\n    get eventPhase() {\n        return pd(this).eventPhase\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopPropagation() {\n        const data = pd(this)\n\n        data.stopped = true\n        if (typeof data.event.stopPropagation === \"function\") {\n            data.event.stopPropagation()\n        }\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopImmediatePropagation() {\n        const data = pd(this)\n\n        data.stopped = true\n        data.immediateStopped = true\n        if (typeof data.event.stopImmediatePropagation === \"function\") {\n            data.event.stopImmediatePropagation()\n        }\n    },\n\n    /**\n     * The flag to be bubbling.\n     * @type {boolean}\n     */\n    get bubbles() {\n        return Boolean(pd(this).event.bubbles)\n    },\n\n    /**\n     * The flag to be cancelable.\n     * @type {boolean}\n     */\n    get cancelable() {\n        return Boolean(pd(this).event.cancelable)\n    },\n\n    /**\n     * Cancel this event.\n     * @returns {void}\n     */\n    preventDefault() {\n        setCancelFlag(pd(this))\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     */\n    get defaultPrevented() {\n        return pd(this).canceled\n    },\n\n    /**\n     * The flag to be composed.\n     * @type {boolean}\n     */\n    get composed() {\n        return Boolean(pd(this).event.composed)\n    },\n\n    /**\n     * The unix time of this event.\n     * @type {number}\n     */\n    get timeStamp() {\n        return pd(this).timeStamp\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     * @deprecated\n     */\n    get srcElement() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The flag to stop event bubbling.\n     * @type {boolean}\n     * @deprecated\n     */\n    get cancelBubble() {\n        return pd(this).stopped\n    },\n    set cancelBubble(value) {\n        if (!value) {\n            return\n        }\n        const data = pd(this)\n\n        data.stopped = true\n        if (typeof data.event.cancelBubble === \"boolean\") {\n            data.event.cancelBubble = true\n        }\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     * @deprecated\n     */\n    get returnValue() {\n        return !pd(this).canceled\n    },\n    set returnValue(value) {\n        if (!value) {\n            setCancelFlag(pd(this))\n        }\n    },\n\n    /**\n     * Initialize this event object. But do nothing under event dispatching.\n     * @param {string} type The event type.\n     * @param {boolean} [bubbles=false] The flag to be possible to bubble up.\n     * @param {boolean} [cancelable=false] The flag to be possible to cancel.\n     * @deprecated\n     */\n    initEvent() {\n        // Do nothing.\n    },\n}\n\n// `constructor` is not enumerable.\nObject.defineProperty(Event.prototype, \"constructor\", {\n    value: Event,\n    configurable: true,\n    writable: true,\n})\n\n// Ensure `event instanceof window.Event` is `true`.\nif (typeof window !== \"undefined\" && typeof window.Event !== \"undefined\") {\n    Object.setPrototypeOf(Event.prototype, window.Event.prototype)\n\n    // Make association for wrappers.\n    wrappers.set(window.Event.prototype, Event)\n}\n\n/**\n * Get the property descriptor to redirect a given property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to redirect the property.\n * @private\n */\nfunction defineRedirectDescriptor(key) {\n    return {\n        get() {\n            return pd(this).event[key]\n        },\n        set(value) {\n            pd(this).event[key] = value\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Get the property descriptor to call a given method property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to call the method property.\n * @private\n */\nfunction defineCallDescriptor(key) {\n    return {\n        value() {\n            const event = pd(this).event\n            return event[key].apply(event, arguments)\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define new wrapper class.\n * @param {Function} BaseEvent The base wrapper class.\n * @param {Object} proto The prototype of the original event.\n * @returns {Function} The defined wrapper class.\n * @private\n */\nfunction defineWrapper(BaseEvent, proto) {\n    const keys = Object.keys(proto)\n    if (keys.length === 0) {\n        return BaseEvent\n    }\n\n    /** CustomEvent */\n    function CustomEvent(eventTarget, event) {\n        BaseEvent.call(this, eventTarget, event)\n    }\n\n    CustomEvent.prototype = Object.create(BaseEvent.prototype, {\n        constructor: { value: CustomEvent, configurable: true, writable: true },\n    })\n\n    // Define accessors.\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i]\n        if (!(key in BaseEvent.prototype)) {\n            const descriptor = Object.getOwnPropertyDescriptor(proto, key)\n            const isFunc = typeof descriptor.value === \"function\"\n            Object.defineProperty(\n                CustomEvent.prototype,\n                key,\n                isFunc\n                    ? defineCallDescriptor(key)\n                    : defineRedirectDescriptor(key)\n            )\n        }\n    }\n\n    return CustomEvent\n}\n\n/**\n * Get the wrapper class of a given prototype.\n * @param {Object} proto The prototype of the original event to get its wrapper.\n * @returns {Function} The wrapper class.\n * @private\n */\nfunction getWrapper(proto) {\n    if (proto == null || proto === Object.prototype) {\n        return Event\n    }\n\n    let wrapper = wrappers.get(proto)\n    if (wrapper == null) {\n        wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto)\n        wrappers.set(proto, wrapper)\n    }\n    return wrapper\n}\n\n/**\n * Wrap a given event to management a dispatching.\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Object} event The event to wrap.\n * @returns {Event} The wrapper instance.\n * @private\n */\nexport function wrapEvent(eventTarget, event) {\n    const Wrapper = getWrapper(Object.getPrototypeOf(event))\n    return new Wrapper(eventTarget, event)\n}\n\n/**\n * Get the immediateStopped flag of a given event.\n * @param {Event} event The event to get.\n * @returns {boolean} The flag to stop propagation immediately.\n * @private\n */\nexport function isStopped(event) {\n    return pd(event).immediateStopped\n}\n\n/**\n * Set the current event phase of a given event.\n * @param {Event} event The event to set current target.\n * @param {number} eventPhase New event phase.\n * @returns {void}\n * @private\n */\nexport function setEventPhase(event, eventPhase) {\n    pd(event).eventPhase = eventPhase\n}\n\n/**\n * Set the current target of a given event.\n * @param {Event} event The event to set current target.\n * @param {EventTarget|null} currentTarget New current target.\n * @returns {void}\n * @private\n */\nexport function setCurrentTarget(event, currentTarget) {\n    pd(event).currentTarget = currentTarget\n}\n\n/**\n * Set a passive listener of a given event.\n * @param {Event} event The event to set current target.\n * @param {Function|null} passiveListener New passive listener.\n * @returns {void}\n * @private\n */\nexport function setPassiveListener(event, passiveListener) {\n    pd(event).passiveListener = passiveListener\n}\n","import {\n    isStopped,\n    setCurrentTarget,\n    setEventPhase,\n    setPassiveListener,\n    wrapEvent,\n} from \"./event.mjs\"\n\n/**\n * @typedef {object} ListenerNode\n * @property {Function} listener\n * @property {1|2|3} listenerType\n * @property {boolean} passive\n * @property {boolean} once\n * @property {ListenerNode|null} next\n * @private\n */\n\n/**\n * @type {WeakMap<object, Map<string, ListenerNode>>}\n * @private\n */\nconst listenersMap = new WeakMap()\n\n// Listener types\nconst CAPTURE = 1\nconst BUBBLE = 2\nconst ATTRIBUTE = 3\n\n/**\n * Check whether a given value is an object or not.\n * @param {any} x The value to check.\n * @returns {boolean} `true` if the value is an object.\n */\nfunction isObject(x) {\n    return x !== null && typeof x === \"object\" //eslint-disable-line no-restricted-syntax\n}\n\n/**\n * Get listeners.\n * @param {EventTarget} eventTarget The event target to get.\n * @returns {Map<string, ListenerNode>} The listeners.\n * @private\n */\nfunction getListeners(eventTarget) {\n    const listeners = listenersMap.get(eventTarget)\n    if (listeners == null) {\n        throw new TypeError(\n            \"'this' is expected an EventTarget object, but got another value.\"\n        )\n    }\n    return listeners\n}\n\n/**\n * Get the property descriptor for the event attribute of a given event.\n * @param {string} eventName The event name to get property descriptor.\n * @returns {PropertyDescriptor} The property descriptor.\n * @private\n */\nfunction defineEventAttributeDescriptor(eventName) {\n    return {\n        get() {\n            const listeners = getListeners(this)\n            let node = listeners.get(eventName)\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    return node.listener\n                }\n                node = node.next\n            }\n            return null\n        },\n\n        set(listener) {\n            if (typeof listener !== \"function\" && !isObject(listener)) {\n                listener = null // eslint-disable-line no-param-reassign\n            }\n            const listeners = getListeners(this)\n\n            // Traverse to the tail while removing old value.\n            let prev = null\n            let node = listeners.get(eventName)\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    // Remove old value.\n                    if (prev !== null) {\n                        prev.next = node.next\n                    } else if (node.next !== null) {\n                        listeners.set(eventName, node.next)\n                    } else {\n                        listeners.delete(eventName)\n                    }\n                } else {\n                    prev = node\n                }\n\n                node = node.next\n            }\n\n            // Add new value.\n            if (listener !== null) {\n                const newNode = {\n                    listener,\n                    listenerType: ATTRIBUTE,\n                    passive: false,\n                    once: false,\n                    next: null,\n                }\n                if (prev === null) {\n                    listeners.set(eventName, newNode)\n                } else {\n                    prev.next = newNode\n                }\n            }\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define an event attribute (e.g. `eventTarget.onclick`).\n * @param {Object} eventTargetPrototype The event target prototype to define an event attrbite.\n * @param {string} eventName The event name to define.\n * @returns {void}\n */\nfunction defineEventAttribute(eventTargetPrototype, eventName) {\n    Object.defineProperty(\n        eventTargetPrototype,\n        `on${eventName}`,\n        defineEventAttributeDescriptor(eventName)\n    )\n}\n\n/**\n * Define a custom EventTarget with event attributes.\n * @param {string[]} eventNames Event names for event attributes.\n * @returns {EventTarget} The custom EventTarget.\n * @private\n */\nfunction defineCustomEventTarget(eventNames) {\n    /** CustomEventTarget */\n    function CustomEventTarget() {\n        EventTarget.call(this)\n    }\n\n    CustomEventTarget.prototype = Object.create(EventTarget.prototype, {\n        constructor: {\n            value: CustomEventTarget,\n            configurable: true,\n            writable: true,\n        },\n    })\n\n    for (let i = 0; i < eventNames.length; ++i) {\n        defineEventAttribute(CustomEventTarget.prototype, eventNames[i])\n    }\n\n    return CustomEventTarget\n}\n\n/**\n * EventTarget.\n *\n * - This is constructor if no arguments.\n * - This is a function which returns a CustomEventTarget constructor if there are arguments.\n *\n * For example:\n *\n *     class A extends EventTarget {}\n *     class B extends EventTarget(\"message\") {}\n *     class C extends EventTarget(\"message\", \"error\") {}\n *     class D extends EventTarget([\"message\", \"error\"]) {}\n */\nfunction EventTarget() {\n    /*eslint-disable consistent-return */\n    if (this instanceof EventTarget) {\n        listenersMap.set(this, new Map())\n        return\n    }\n    if (arguments.length === 1 && Array.isArray(arguments[0])) {\n        return defineCustomEventTarget(arguments[0])\n    }\n    if (arguments.length > 0) {\n        const types = new Array(arguments.length)\n        for (let i = 0; i < arguments.length; ++i) {\n            types[i] = arguments[i]\n        }\n        return defineCustomEventTarget(types)\n    }\n    throw new TypeError(\"Cannot call a class as a function\")\n    /*eslint-enable consistent-return */\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEventTarget.prototype = {\n    /**\n     * Add a given listener to this event target.\n     * @param {string} eventName The event name to add.\n     * @param {Function} listener The listener to add.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    addEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n        if (typeof listener !== \"function\" && !isObject(listener)) {\n            throw new TypeError(\"'listener' should be a function or an object.\")\n        }\n\n        const listeners = getListeners(this)\n        const optionsIsObj = isObject(options)\n        const capture = optionsIsObj\n            ? Boolean(options.capture)\n            : Boolean(options)\n        const listenerType = capture ? CAPTURE : BUBBLE\n        const newNode = {\n            listener,\n            listenerType,\n            passive: optionsIsObj && Boolean(options.passive),\n            once: optionsIsObj && Boolean(options.once),\n            next: null,\n        }\n\n        // Set it as the first node if the first node is null.\n        let node = listeners.get(eventName)\n        if (node === undefined) {\n            listeners.set(eventName, newNode)\n            return\n        }\n\n        // Traverse to the tail while checking duplication..\n        let prev = null\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                // Should ignore duplication.\n                return\n            }\n            prev = node\n            node = node.next\n        }\n\n        // Add it.\n        prev.next = newNode\n    },\n\n    /**\n     * Remove a given listener from this event target.\n     * @param {string} eventName The event name to remove.\n     * @param {Function} listener The listener to remove.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    removeEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n\n        const listeners = getListeners(this)\n        const capture = isObject(options)\n            ? Boolean(options.capture)\n            : Boolean(options)\n        const listenerType = capture ? CAPTURE : BUBBLE\n\n        let prev = null\n        let node = listeners.get(eventName)\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                if (prev !== null) {\n                    prev.next = node.next\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next)\n                } else {\n                    listeners.delete(eventName)\n                }\n                return\n            }\n\n            prev = node\n            node = node.next\n        }\n    },\n\n    /**\n     * Dispatch a given event.\n     * @param {Event|{type:string}} event The event to dispatch.\n     * @returns {boolean} `false` if canceled.\n     */\n    dispatchEvent(event) {\n        if (event == null || typeof event.type !== \"string\") {\n            throw new TypeError('\"event.type\" should be a string.')\n        }\n\n        // If listeners aren't registered, terminate.\n        const listeners = getListeners(this)\n        const eventName = event.type\n        let node = listeners.get(eventName)\n        if (node == null) {\n            return true\n        }\n\n        // Since we cannot rewrite several properties, so wrap object.\n        const wrappedEvent = wrapEvent(this, event)\n\n        // This doesn't process capturing phase and bubbling phase.\n        // This isn't participating in a tree.\n        let prev = null\n        while (node != null) {\n            // Remove this listener if it's once\n            if (node.once) {\n                if (prev !== null) {\n                    prev.next = node.next\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next)\n                } else {\n                    listeners.delete(eventName)\n                }\n            } else {\n                prev = node\n            }\n\n            // Call this listener\n            setPassiveListener(\n                wrappedEvent,\n                node.passive ? node.listener : null\n            )\n            if (typeof node.listener === \"function\") {\n                try {\n                    node.listener.call(this, wrappedEvent)\n                } catch (err) {\n                    if (\n                        typeof console !== \"undefined\" &&\n                        typeof console.error === \"function\"\n                    ) {\n                        console.error(err)\n                    }\n                }\n            } else if (\n                node.listenerType !== ATTRIBUTE &&\n                typeof node.listener.handleEvent === \"function\"\n            ) {\n                node.listener.handleEvent(wrappedEvent)\n            }\n\n            // Break if `event.stopImmediatePropagation` was called.\n            if (isStopped(wrappedEvent)) {\n                break\n            }\n\n            node = node.next\n        }\n        setPassiveListener(wrappedEvent, null)\n        setEventPhase(wrappedEvent, 0)\n        setCurrentTarget(wrappedEvent, null)\n\n        return !wrappedEvent.defaultPrevented\n    },\n}\n\n// `constructor` is not enumerable.\nObject.defineProperty(EventTarget.prototype, \"constructor\", {\n    value: EventTarget,\n    configurable: true,\n    writable: true,\n})\n\n// Ensure `eventTarget instanceof window.EventTarget` is `true`.\nif (\n    typeof window !== \"undefined\" &&\n    typeof window.EventTarget !== \"undefined\"\n) {\n    Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype)\n}\n\nexport { defineEventAttribute, EventTarget }\nexport default EventTarget\n","/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.Long.create = function(low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function() {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function(other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function(opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\n\nflatbuffers.Builder.prototype.clear = function() {\n  this.bb.clear();\n  this.space = this.bb.capacity();\n  this.minalign = 1;\n  this.vtable = null;\n  this.vtable_in_use = 0;\n  this.isNested = false;\n  this.object_start = 0;\n  this.vtables = [];\n  this.vector_num_elems = 0;\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function() {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function() {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function(byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function(value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function(value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function(value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function(value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function(obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function() {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function(voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function() {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function(bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function(offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function(numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function() {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\nouter_loop:\n  for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier) {\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' +\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT);\n  this.addOffset(root_table);\n  this.bb.setPosition(this.space);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function() {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function(s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\n          } else {\n            utf8.push(\n              ((codePoint >> 18) & 0x07) | 0xF0,\n              ((codePoint >> 12) & 0x3F) | 0x80);\n          }\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\n        }\n        utf8.push((codePoint & 0x3F) | 0x80);\n      }\n    }\n  }\n\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function(bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\n\nflatbuffers.ByteBuffer.prototype.clear = function() {\n  this.position_ = 0;\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function() {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function() {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function() {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\n  this.bytes_[offset] = /** @type {number} */(value);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n    this.bytes_[offset + 2] = value >> 16;\n    this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\n    this.writeUint32(offset, value.low);\n    this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n * schema does not include a file_identifier (likely points at padding or the\n * start of a the root vtable).\n * @returns {string}\n */\nflatbuffers.ByteBuffer.prototype.getBufferIdentifier = function() {\n  if (this.bytes_.length < this.position_ + flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error(\n        'FlatBuffers: ByteBuffer is too short to contain an identifier.');\n  }\n  var result = \"\";\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    result += String.fromCharCode(\n        this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i));\n  }\n  return result;\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\n  offset += this.readInt32(offset);\n\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n\n  offset += flatbuffers.SIZEOF_INT;\n\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint =\n          ((a & 0x1F) << 6) |\n          (b & 0x3F);\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint =\n            ((a & 0x0F) << 12) |\n            ((b & 0x3F) << 6) |\n            (c & 0x3F);\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint =\n            ((a & 0x07) << 18) |\n            ((b & 0x3F) << 12) |\n            ((c & 0x3F) << 6) |\n            (d & 0x3F);\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode(\n        (codePoint >> 10) + 0xD800,\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' +\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\nexport { flatbuffers };\n\n/// @endcond\n/// @}\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { toUint8Array } from './buffer';\nimport {\n    TextDecoder as TextDecoderPolyfill,\n    TextEncoder as TextEncoderPolyfill,\n} from 'text-encoding-utf-8';\n\n/** @ignore @suppress {missingRequire} */\nconst _Buffer = typeof Buffer === 'function' ? Buffer : null;\n/** @ignore */\nconst useNativeEncoders = typeof TextDecoder === 'function' && typeof TextEncoder === 'function';\n\n/** @ignore */\nexport const decodeUtf8 = ((TextDecoder) => {\n    if (useNativeEncoders || !_Buffer) {\n        const decoder = new TextDecoder('utf-8');\n        return (buffer?: ArrayBuffer | ArrayBufferView) => decoder.decode(buffer);\n    }\n    return (input: ArrayBufferLike | ArrayBufferView) => {\n        const { buffer, byteOffset, length } = toUint8Array(input);\n        return _Buffer.from(buffer, byteOffset, length).toString();\n    };\n})(typeof TextDecoder !== 'undefined' ? TextDecoder : TextDecoderPolyfill);\n\n/** @ignore */\nexport const encodeUtf8 = ((TextEncoder) => {\n    if (useNativeEncoders || !_Buffer) {\n        const encoder = new TextEncoder();\n        return (value?: string) => encoder.encode(value);\n    }\n    return (input = '') => toUint8Array(_Buffer.from(input, 'utf8'));\n})(typeof TextEncoder !== 'undefined' ? TextEncoder : TextEncoderPolyfill);\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './adapters';\n\n/** @ignore */\nexport const ITERATOR_DONE: any = Object.freeze({ done: true, value: void (0) });\n\n/** @ignore */\nexport type FileHandle = import('fs').promises.FileHandle;\n/** @ignore */\nexport type ArrowJSONLike = { schema: any; batches?: any[]; dictionaries?: any[]; };\n/** @ignore */\nexport type ReadableDOMStreamOptions = { type: 'bytes' | undefined, autoAllocateChunkSize?: number, highWaterMark?: number };\n\n/** @ignore */\nexport class ArrowJSON {\n    // @ts-ignore\n    constructor(private _json: ArrowJSONLike) {}\n    public get schema(): any { return this._json['schema']; }\n    public get batches(): any[] { return (this._json['batches'] || []) as any[]; }\n    public get dictionaries(): any[] { return (this._json['dictionaries'] || []) as any[]; }\n}\n\n/** @ignore */\nexport interface Readable<T> {\n\n    readonly closed: Promise<void>;\n    cancel(reason?: any): Promise<void>;\n\n    read(size?: number | null): Promise<T | null>;\n    peek(size?: number | null): Promise<T | null>;\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(size?: number | null): Promise<IteratorResult<T>>;\n}\n\n/** @ignore */\nexport interface Writable<T> {\n    readonly closed: Promise<void>;\n    close(): void;\n    write(chunk: T): void;\n    abort(reason?: any): void;\n}\n\n/** @ignore */\nexport interface ReadableWritable<TReadable, TWritable> extends Readable<TReadable>, Writable<TWritable> {\n    [Symbol.asyncIterator](): AsyncIterableIterator<TReadable>;\n    toDOMStream(options?: ReadableDOMStreamOptions): ReadableStream<TReadable>;\n    toNodeStream(options?: import('stream').ReadableOptions): import('stream').Readable;\n}\n\n/** @ignore */\nexport abstract class ReadableInterop<T> {\n\n    public abstract toDOMStream(options?: ReadableDOMStreamOptions): ReadableStream<T>;\n    public abstract toNodeStream(options?: import('stream').ReadableOptions): import('stream').Readable;\n\n    public tee(): [ReadableStream<T>, ReadableStream<T>] {\n        return this._getDOMStream().tee();\n    }\n    public pipe<R extends NodeJS.WritableStream>(writable: R, options?: { end?: boolean; }) {\n        return this._getNodeStream().pipe(writable, options);\n    }\n    public pipeTo(writable: WritableStream<T>, options?: PipeOptions) { return this._getDOMStream().pipeTo(writable, options); }\n    public pipeThrough<R extends ReadableStream<any>>(duplex: { writable: WritableStream<T>, readable: R }, options?: PipeOptions) {\n        return this._getDOMStream().pipeThrough(duplex, options);\n    }\n\n    protected _DOMStream?: ReadableStream<T>;\n    private _getDOMStream() {\n        return this._DOMStream || (this._DOMStream = this.toDOMStream());\n    }\n\n    protected _nodeStream?: import('stream').Readable;\n    private _getNodeStream() {\n        return this._nodeStream || (this._nodeStream = this.toNodeStream());\n    }\n}\n\n/** @ignore */\ntype Resolution<T> = { resolve: (value?: T | PromiseLike<T>) => void; reject: (reason?: any) => void; };\n\n/** @ignore */\nexport class AsyncQueue<TReadable = Uint8Array, TWritable = TReadable> extends ReadableInterop<TReadable>\n    implements AsyncIterableIterator<TReadable>, ReadableWritable<TReadable, TWritable> {\n\n    protected _values: TWritable[] = [];\n    protected _error?: { error: any; };\n    protected _closedPromise: Promise<void>;\n    protected _closedPromiseResolve?: (value?: any) => void;\n    protected resolvers: Resolution<IteratorResult<TReadable>>[] = [];\n\n    constructor() {\n        super();\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n\n    public get closed(): Promise<void> { return this._closedPromise; }\n    public async cancel(reason?: any) { await this.return(reason); }\n    public write(value: TWritable) {\n        if (this._ensureOpen()) {\n            this.resolvers.length <= 0\n                ? (this._values.push(value))\n                : (this.resolvers.shift()!.resolve({ done: false, value } as any));\n        }\n    }\n    public abort(value?: any) {\n        if (this._closedPromiseResolve) {\n            this.resolvers.length <= 0\n                ? (this._error = { error: value })\n                : (this.resolvers.shift()!.reject({ done: true, value }));\n        }\n    }\n    public close() {\n        if (this._closedPromiseResolve) {\n            const { resolvers } = this;\n            while (resolvers.length > 0) {\n                resolvers.shift()!.resolve(ITERATOR_DONE);\n            }\n            this._closedPromiseResolve();\n            this._closedPromiseResolve = undefined;\n        }\n    }\n\n    public [Symbol.asyncIterator]() { return this; }\n    public toDOMStream(options?: ReadableDOMStreamOptions) {\n        return streamAdapters.toDOMStream(\n            (this._closedPromiseResolve || this._error)\n                ? (this as AsyncIterable<TReadable>)\n                : (this._values as any) as Iterable<TReadable>,\n            options);\n    }\n    public toNodeStream(options?: import('stream').ReadableOptions) {\n        return streamAdapters.toNodeStream(\n            (this._closedPromiseResolve || this._error)\n                ? (this as AsyncIterable<TReadable>)\n                : (this._values as any) as Iterable<TReadable>,\n            options);\n    }\n    public async throw(_?: any) { await this.abort(_); return ITERATOR_DONE; }\n    public async return(_?: any) { await this.close(); return ITERATOR_DONE; }\n\n    public async read(size?: number | null): Promise<TReadable | null> { return (await this.next(size, 'read')).value; }\n    public async peek(size?: number | null): Promise<TReadable | null> { return (await this.next(size, 'peek')).value; }\n    public next(..._args: any[]): Promise<IteratorResult<TReadable>> {\n        if (this._values.length > 0) {\n            return Promise.resolve({ done: false, value: this._values.shift()! } as any);\n        } else if (this._error) {\n            return Promise.reject({ done: true, value: this._error.error });\n        } else if (!this._closedPromiseResolve) {\n            return Promise.resolve(ITERATOR_DONE);\n        } else {\n            return new Promise<IteratorResult<TReadable>>((resolve, reject) => {\n                this.resolvers.push({ resolve, reject });\n            });\n        }\n    }\n\n    protected _ensureOpen() {\n        if (this._closedPromiseResolve) {\n            return true;\n        }\n        throw new Error(`${this} is closed`);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { ReadableInterop, ArrowJSONLike } from '../io/interfaces';\n\n/** @ignore */\ntype FSReadStream = import('fs').ReadStream;\n/** @ignore */\ntype FileHandle = import('fs').promises.FileHandle;\n\n/** @ignore */\nexport interface Subscription {\n    unsubscribe: () => void;\n}\n\n/** @ignore */\nexport interface Observer<T> {\n    closed?: boolean;\n    next: (value: T) => void;\n    error: (err: any) => void;\n    complete: () => void;\n}\n\n/** @ignore */\nexport interface Observable<T> {\n    subscribe: (observer: Observer<T>) => Subscription;\n}\n\n/** @ignore */\nconst [BigIntCtor, BigIntAvailable] = (() => {\n    const BigIntUnavailableError = () => { throw new Error('BigInt is not available in this environment'); };\n    function BigIntUnavailable() { throw BigIntUnavailableError(); }\n    BigIntUnavailable.asIntN = () => { throw BigIntUnavailableError(); };\n    BigIntUnavailable.asUintN = () => { throw BigIntUnavailableError(); };\n    return typeof BigInt !== 'undefined' ? [BigInt, true] : [<any> BigIntUnavailable, false];\n})() as [BigIntConstructor, boolean];\n\n/** @ignore */\nconst [BigInt64ArrayCtor, BigInt64ArrayAvailable] = (() => {\n    const BigInt64ArrayUnavailableError = () => { throw new Error('BigInt64Array is not available in this environment'); };\n    class BigInt64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigInt64ArrayUnavailableError(); }\n        static from() { throw BigInt64ArrayUnavailableError(); }\n        constructor() { throw BigInt64ArrayUnavailableError(); }\n    }\n    return typeof BigInt64Array !== 'undefined' ? [BigInt64Array, true] : [<any> BigInt64ArrayUnavailable, false];\n})() as [BigInt64ArrayConstructor, boolean];\n\n/** @ignore */\nconst [BigUint64ArrayCtor, BigUint64ArrayAvailable] = (() => {\n    const BigUint64ArrayUnavailableError = () => { throw new Error('BigUint64Array is not available in this environment'); };\n    class BigUint64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigUint64ArrayUnavailableError(); }\n        static from() { throw BigUint64ArrayUnavailableError(); }\n        constructor() { throw BigUint64ArrayUnavailableError(); }\n    }\n    return typeof BigUint64Array !== 'undefined' ? [BigUint64Array, true] : [<any> BigUint64ArrayUnavailable, false];\n})() as [BigUint64ArrayConstructor, boolean];\n\nexport { BigIntCtor as BigInt, BigIntAvailable };\nexport { BigInt64ArrayCtor as BigInt64Array, BigInt64ArrayAvailable };\nexport { BigUint64ArrayCtor as BigUint64Array, BigUint64ArrayAvailable };\n\n/** @ignore */ const isNumber = (x: any) => typeof x === 'number';\n/** @ignore */ const isBoolean = (x: any) => typeof x === 'boolean';\n/** @ignore */ const isFunction = (x: any) => typeof x === 'function';\n/** @ignore */\nexport const isObject = (x: any): x is Object => x != null && Object(x) === x;\n\n/** @ignore */\nexport const isPromise = <T = any>(x: any): x is PromiseLike<T> => {\n    return isObject(x) && isFunction(x.then);\n};\n\n/** @ignore */\nexport const isObservable = <T = any>(x: any): x is Observable<T> => {\n    return isObject(x) && isFunction(x.subscribe);\n};\n\n/** @ignore */\nexport const isIterable = <T = any>(x: any): x is Iterable<T> => {\n    return isObject(x) && isFunction(x[Symbol.iterator]);\n};\n\n/** @ignore */\nexport const isAsyncIterable = <T = any>(x: any): x is AsyncIterable<T> => {\n    return isObject(x) && isFunction(x[Symbol.asyncIterator]);\n};\n\n/** @ignore */\nexport const isArrowJSON = (x: any): x is ArrowJSONLike  => {\n    return isObject(x) && isObject(x['schema']);\n};\n\n/** @ignore */\nexport const isArrayLike = <T = any>(x: any): x is ArrayLike<T> => {\n    return isObject(x) && isNumber(x['length']);\n};\n\n/** @ignore */\nexport const isIteratorResult = <T = any>(x: any): x is IteratorResult<T> => {\n    return isObject(x) && ('done' in x) && ('value' in x);\n};\n\n/** @ignore */\nexport const isUnderlyingSink = <T = any>(x: any): x is UnderlyingSink<T> => {\n    return isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['close']) &&\n        isFunction(x['start']) &&\n        isFunction(x['write']);\n};\n\n/** @ignore */\nexport const isFileHandle = (x: any): x is FileHandle => {\n    return isObject(x) && isFunction(x['stat']) && isNumber(x['fd']);\n};\n\n/** @ignore */\nexport const isFSReadStream = (x: any): x is FSReadStream => {\n    return isReadableNodeStream(x) && isNumber((<any> x)['bytesRead']);\n};\n\n/** @ignore */\nexport const isFetchResponse = (x: any): x is Response => {\n    return isObject(x) && isReadableDOMStream(x['body']);\n};\n\n/** @ignore */\nexport const isWritableDOMStream = <T = any>(x: any): x is WritableStream<T> => {\n    return isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['getWriter']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isReadableDOMStream = <T = any>(x: any): x is ReadableStream<T> => {\n    return isObject(x) &&\n        isFunction(x['cancel']) &&\n        isFunction(x['getReader']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isWritableNodeStream = (x: any): x is NodeJS.WritableStream => {\n    return isObject(x) &&\n        isFunction(x['end']) &&\n        isFunction(x['write']) &&\n        isBoolean(x['writable']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isReadableNodeStream = (x: any): x is NodeJS.ReadableStream => {\n    return isObject(x) &&\n        isFunction(x['read']) &&\n        isFunction(x['pipe']) &&\n        isBoolean(x['readable']) &&\n        !(x instanceof ReadableInterop);\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { flatbuffers } from 'flatbuffers';\nimport { encodeUtf8 } from '../util/utf8';\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport { TypedArray, TypedArrayConstructor } from '../interfaces';\nimport { BigIntArray, BigIntArrayConstructor } from '../interfaces';\nimport { isPromise, isIterable, isAsyncIterable, isIteratorResult, BigInt64Array, BigUint64Array } from './compat';\n\n/** @ignore */\nconst SharedArrayBuf = (typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : ArrayBuffer);\n\n/** @ignore */\nfunction collapseContiguousByteRanges(chunks: Uint8Array[]) {\n    let result = chunks[0] ? [chunks[0]] : [];\n    let xOffset: number, yOffset: number, xLen: number, yLen: number;\n    for (let x, y, i = 0, j = 0, n = chunks.length; ++i < n;) {\n        x = result[j];\n        y = chunks[i];\n        // continue if x and y don't share the same underlying ArrayBuffer, or if x isn't before y\n        if (!x || !y || x.buffer !== y.buffer || y.byteOffset < x.byteOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        ({ byteOffset: xOffset, byteLength: xLen } = x);\n        ({ byteOffset: yOffset, byteLength: yLen } = y);\n        // continue if the byte ranges of x and y aren't contiguous\n        if ((xOffset + xLen) < yOffset || (yOffset + yLen) < xOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        result[j] = new Uint8Array(x.buffer, xOffset, yOffset - xOffset + yLen);\n    }\n    return result;\n}\n\n/** @ignore */\nexport function memcpy<TTarget extends ArrayBufferView, TSource extends ArrayBufferView>(target: TTarget, source: TSource, targetByteOffset = 0, sourceByteLength = source.byteLength) {\n    const targetByteLength = target.byteLength;\n    const dst = new Uint8Array(target.buffer, target.byteOffset, targetByteLength);\n    const src = new Uint8Array(source.buffer, source.byteOffset, Math.min(sourceByteLength, targetByteLength));\n    dst.set(src, targetByteOffset);\n    return target;\n}\n\n/** @ignore */\nexport function joinUint8Arrays(chunks: Uint8Array[], size?: number | null): [Uint8Array, Uint8Array[], number] {\n    // collapse chunks that share the same underlying ArrayBuffer and whose byte ranges overlap,\n    // to avoid unnecessarily copying the bytes to do this buffer join. This is a common case during\n    // streaming, where we may be reading partial byte ranges out of the same underlying ArrayBuffer\n    let result = collapseContiguousByteRanges(chunks);\n    let byteLength = result.reduce((x, b) => x + b.byteLength, 0);\n    let source: Uint8Array, sliced: Uint8Array, buffer: Uint8Array | void;\n    let offset = 0, index = -1, length = Math.min(size || Infinity, byteLength);\n    for (let n = result.length; ++index < n;) {\n        source = result[index];\n        sliced = source.subarray(0, Math.min(source.length, length - offset));\n        if (length <= (offset + sliced.length)) {\n            if (sliced.length < source.length) {\n                result[index] = source.subarray(sliced.length);\n            } else if (sliced.length === source.length) { index++; }\n            buffer ? memcpy(buffer, sliced, offset) : (buffer = sliced);\n            break;\n        }\n        memcpy(buffer || (buffer = new Uint8Array(length)), sliced, offset);\n        offset += sliced.length;\n    }\n    return [buffer || new Uint8Array(0), result.slice(index), byteLength - (buffer ? buffer.byteLength : 0)];\n}\n\n/** @ignore */\nexport type ArrayBufferViewInput = ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined  |\n                    IteratorResult<ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined> |\n          ReadableStreamReadResult<ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined> ;\n\n/** @ignore */\nexport function toArrayBufferView<T extends TypedArray>(ArrayBufferViewCtor: TypedArrayConstructor<T>, input: ArrayBufferViewInput): T;\nexport function toArrayBufferView<T extends BigIntArray>(ArrayBufferViewCtor: BigIntArrayConstructor<T>, input: ArrayBufferViewInput): T;\nexport function toArrayBufferView(ArrayBufferViewCtor: any, input: ArrayBufferViewInput) {\n\n    let value: any = isIteratorResult(input) ? input.value : input;\n\n    if (value instanceof ArrayBufferViewCtor) {\n        if (ArrayBufferViewCtor === Uint8Array) {\n            // Node's `Buffer` class passes the `instanceof Uint8Array` check, but we need\n            // a real Uint8Array, since Buffer#slice isn't the same as Uint8Array#slice :/\n            return new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength);\n        }\n        return value;\n    }\n    if (!value) { return new ArrayBufferViewCtor(0); }\n    if (typeof value === 'string') { value = encodeUtf8(value); }\n    if (value instanceof ArrayBuffer) { return new ArrayBufferViewCtor(value); }\n    if (value instanceof SharedArrayBuf) { return new ArrayBufferViewCtor(value); }\n    if (value instanceof ByteBuffer) { return toArrayBufferView(ArrayBufferViewCtor, value.bytes()); }\n    return !ArrayBuffer.isView(value) ? ArrayBufferViewCtor.from(value) : value.byteLength <= 0 ? new ArrayBufferViewCtor(0)\n        : new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength / ArrayBufferViewCtor.BYTES_PER_ELEMENT);\n}\n\n/** @ignore */ export const toInt8Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int8Array, input);\n/** @ignore */ export const toInt16Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int16Array, input);\n/** @ignore */ export const toInt32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int32Array, input);\n/** @ignore */ export const toBigInt64Array = (input: ArrayBufferViewInput) => toArrayBufferView(BigInt64Array, input);\n/** @ignore */ export const toUint8Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint8Array, input);\n/** @ignore */ export const toUint16Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint16Array, input);\n/** @ignore */ export const toUint32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint32Array, input);\n/** @ignore */ export const toBigUint64Array = (input: ArrayBufferViewInput) => toArrayBufferView(BigUint64Array, input);\n/** @ignore */ export const toFloat32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Float32Array, input);\n/** @ignore */ export const toFloat64Array = (input: ArrayBufferViewInput) => toArrayBufferView(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArray = (input: ArrayBufferViewInput) => toArrayBufferView(Uint8ClampedArray, input);\n\n/** @ignore */\ntype ArrayBufferViewIteratorInput = Iterable<ArrayBufferViewInput> | ArrayBufferViewInput;\n\n/** @ignore */\nconst pump = <T extends Iterator<any> | AsyncIterator<any>>(iterator: T) => { iterator.next(); return iterator; };\n\n/** @ignore */\nexport function* toArrayBufferViewIterator<T extends TypedArray>(ArrayCtor: TypedArrayConstructor<T>, source: ArrayBufferViewIteratorInput) {\n\n    const wrap = function*<T>(x: T) { yield x; };\n    const buffers: Iterable<ArrayBufferViewInput> =\n                   (typeof source === 'string') ? wrap(source)\n                 : (ArrayBuffer.isView(source)) ? wrap(source)\n              : (source instanceof ArrayBuffer) ? wrap(source)\n           : (source instanceof SharedArrayBuf) ? wrap(source)\n    : !isIterable<ArrayBufferViewInput>(source) ? wrap(source) : source;\n\n    yield* pump((function* (it) {\n        let r: IteratorResult<any> = <any> null;\n        do {\n            r = it.next(yield toArrayBufferView(ArrayCtor, r));\n        } while (!r.done);\n    })(buffers[Symbol.iterator]()));\n}\n\n/** @ignore */ export const toInt8ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int8Array, input);\n/** @ignore */ export const toInt16ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int16Array, input);\n/** @ignore */ export const toInt32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int32Array, input);\n/** @ignore */ export const toUint8ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint8Array, input);\n/** @ignore */ export const toUint16ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint16Array, input);\n/** @ignore */ export const toUint32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint32Array, input);\n/** @ignore */ export const toFloat32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Float32Array, input);\n/** @ignore */ export const toFloat64ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint8ClampedArray, input);\n\n/** @ignore */\ntype ArrayBufferViewAsyncIteratorInput = AsyncIterable<ArrayBufferViewInput> | Iterable<ArrayBufferViewInput> | PromiseLike<ArrayBufferViewInput> | ArrayBufferViewInput;\n\n/** @ignore */\nexport async function* toArrayBufferViewAsyncIterator<T extends TypedArray>(ArrayCtor: TypedArrayConstructor<T>, source: ArrayBufferViewAsyncIteratorInput): AsyncIterableIterator<T> {\n\n    // if a Promise, unwrap the Promise and iterate the resolved value\n    if (isPromise<ArrayBufferViewInput>(source)) {\n        return yield* toArrayBufferViewAsyncIterator(ArrayCtor, await source);\n    }\n\n    const wrap = async function*<T>(x: T) { yield await x; };\n    const emit = async function* <T extends Iterable<any>>(source: T) {\n        yield* pump((function*(it: Iterator<any>) {\n            let r: IteratorResult<any> = <any> null;\n            do {\n                r = it.next(yield r && r.value);\n            } while (!r.done);\n        })(source[Symbol.iterator]()));\n    };\n\n    const buffers: AsyncIterable<ArrayBufferViewInput> =\n                        (typeof source === 'string') ? wrap(source) // if string, wrap in an AsyncIterableIterator\n                      : (ArrayBuffer.isView(source)) ? wrap(source) // if TypedArray, wrap in an AsyncIterableIterator\n                   : (source instanceof ArrayBuffer) ? wrap(source) // if ArrayBuffer, wrap in an AsyncIterableIterator\n                : (source instanceof SharedArrayBuf) ? wrap(source) // if SharedArrayBuffer, wrap in an AsyncIterableIterator\n          : isIterable<ArrayBufferViewInput>(source) ? emit(source) // If Iterable, wrap in an AsyncIterableIterator and compose the `next` values\n    : !isAsyncIterable<ArrayBufferViewInput>(source) ? wrap(source) // If not an AsyncIterable, treat as a sentinel and wrap in an AsyncIterableIterator\n                                                     : source; // otherwise if AsyncIterable, use it\n\n    yield* pump((async function* (it) {\n        let r: IteratorResult<any> = <any> null;\n        do {\n            r = await it.next(yield toArrayBufferView(ArrayCtor, r));\n        } while (!r.done);\n    })(buffers[Symbol.asyncIterator]()));\n}\n\n/** @ignore */ export const toInt8ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int8Array, input);\n/** @ignore */ export const toInt16ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int16Array, input);\n/** @ignore */ export const toInt32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int32Array, input);\n/** @ignore */ export const toUint8ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint8Array, input);\n/** @ignore */ export const toUint16ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint16Array, input);\n/** @ignore */ export const toUint32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint32Array, input);\n/** @ignore */ export const toFloat32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Float32Array, input);\n/** @ignore */ export const toFloat64ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint8ClampedArray, input);\n\n/** @ignore */\nexport function rebaseValueOffsets(offset: number, length: number, valueOffsets: Int32Array) {\n    // If we have a non-zero offset, create a new offsets array with the values\n    // shifted by the start offset, such that the new start offset is 0\n    if (offset !== 0) {\n        valueOffsets = valueOffsets.slice(0, length + 1);\n        for (let i = -1; ++i <= length;) {\n            valueOffsets[i] += offset;\n        }\n    }\n    return valueOffsets;\n}\n\n/** @ignore */\nexport function compareArrayLike<T extends ArrayLike<any>>(a: T, b: T) {\n    let i = 0, n = a.length;\n    if (n !== b.length) { return false; }\n    if (n > 0) {\n        do { if (a[i] !== b[i]) { return false; } } while (++i < n);\n    }\n    return true;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport {\n    toUint8Array,\n    joinUint8Arrays,\n    ArrayBufferViewInput,\n    toUint8ArrayIterator,\n    toUint8ArrayAsyncIterator\n} from '../util/buffer';\n\nimport { ReadableDOMStreamOptions } from './interfaces';\n\n/** @ignore */\nexport default {\n    fromIterable<T extends ArrayBufferViewInput>(source: Iterable<T> | T): IterableIterator<Uint8Array> {\n        return pump(fromIterable<T>(source));\n    },\n    fromAsyncIterable<T extends ArrayBufferViewInput>(source: AsyncIterable<T> | PromiseLike<T>): AsyncIterableIterator<Uint8Array> {\n        return pump(fromAsyncIterable<T>(source));\n    },\n    fromDOMStream<T extends ArrayBufferViewInput>(source: ReadableStream<T>): AsyncIterableIterator<Uint8Array> {\n        return pump(fromDOMStream<T>(source));\n    },\n    fromNodeStream(stream: NodeJS.ReadableStream): AsyncIterableIterator<Uint8Array> {\n        return pump(fromNodeStream(stream));\n    },\n    // @ts-ignore\n    toDOMStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: ReadableDOMStreamOptions): ReadableStream<T> {\n        throw new Error(`\"toDOMStream\" not available in this environment`);\n    },\n    // @ts-ignore\n    toNodeStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: import('stream').ReadableOptions): import('stream').Readable {\n        throw new Error(`\"toNodeStream\" not available in this environment`);\n    },\n};\n\n/** @ignore */\nconst pump = <T extends Iterator<any> | AsyncIterator<any>>(iterator: T) => { iterator.next(); return iterator; };\n\n/** @ignore */\nfunction* fromIterable<T extends ArrayBufferViewInput>(source: Iterable<T> | T): IterableIterator<Uint8Array> {\n\n    let done: boolean, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before creating the source Iterator\n    ({ cmd, size } = yield <any> null);\n\n    // initialize the iterator\n    let it = toUint8ArrayIterator(source)[Symbol.iterator]();\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength) ?\n                it.next(undefined) : it.next(size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(buffer);\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (typeof it.throw === 'function') && (it.throw(e));\n    } finally {\n        (threw === false) && (typeof it.return === 'function') && (it.return());\n    }\n}\n\n/** @ignore */\nasync function* fromAsyncIterable<T extends ArrayBufferViewInput>(source: AsyncIterable<T> | PromiseLike<T>): AsyncIterableIterator<Uint8Array> {\n\n    let done: boolean, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before creating the source AsyncIterator\n    ({ cmd, size } = yield <any> null);\n\n    // initialize the iterator\n    let it = toUint8ArrayAsyncIterator(source)[Symbol.asyncIterator]();\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength)\n                ? await it.next(undefined)\n                : await it.next(size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(buffer);\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (typeof it.throw === 'function') && (await it.throw(e));\n    } finally {\n        (threw === false) && (typeof it.return === 'function') && (await it.return());\n    }\n}\n\n// All this manual Uint8Array chunk management can be avoided if/when engines\n// add support for ArrayBuffer.transfer() or ArrayBuffer.prototype.realloc():\n// https://github.com/domenic/proposal-arraybuffer-transfer\n/** @ignore */\nasync function* fromDOMStream<T extends ArrayBufferViewInput>(source: ReadableStream<T>): AsyncIterableIterator<Uint8Array> {\n\n    let done = false, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before we establish the ReadableStream lock\n    ({ cmd, size } = yield <any> null);\n\n    // initialize the reader and lock the stream\n    let it = new AdaptiveByteReader(source);\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength)\n                ? await it['read'](undefined)\n                : await it['read'](size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(toUint8Array(buffer));\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (await it['cancel'](e));\n    } finally {\n        (threw === false) ? (await it['cancel']())\n            : source['locked'] && it.releaseLock();\n    }\n}\n\n/** @ignore */\nclass AdaptiveByteReader<T extends ArrayBufferViewInput> {\n\n    private supportsBYOB: boolean;\n    private byobReader: ReadableStreamBYOBReader | null = null;\n    private defaultReader: ReadableStreamDefaultReader<T> | null = null;\n    private reader: ReadableStreamBYOBReader | ReadableStreamDefaultReader<T> | null;\n\n    constructor(private source: ReadableStream<T>) {\n        try {\n            this.supportsBYOB = !!(this.reader = this.getBYOBReader());\n        } catch (e) {\n            this.supportsBYOB = !!!(this.reader = this.getDefaultReader());\n        }\n    }\n\n    get closed(): Promise<void> {\n        return this.reader ? this.reader['closed'].catch(() => {}) : Promise.resolve();\n    }\n\n    releaseLock(): void {\n        if (this.reader) {\n            this.reader.releaseLock();\n        }\n        this.reader = this.byobReader = this.defaultReader = null;\n    }\n\n    async cancel(reason?: any): Promise<void> {\n        const { reader, source } = this;\n        reader && (await reader['cancel'](reason).catch(() => {}));\n        source && (source['locked'] && this.releaseLock());\n    }\n\n    async read(size?: number): Promise<ReadableStreamReadResult<Uint8Array>> {\n        if (size === 0) {\n            return { done: this.reader == null, value: new Uint8Array(0) };\n        }\n        const result = !this.supportsBYOB || typeof size !== 'number'\n            ? await this.getDefaultReader().read()\n            : await this.readFromBYOBReader(size);\n        !result.done && (result.value = toUint8Array(result as ReadableStreamReadResult<Uint8Array>));\n        return result as ReadableStreamReadResult<Uint8Array>;\n    }\n\n    private getDefaultReader() {\n        if (this.byobReader) { this.releaseLock(); }\n        if (!this.defaultReader) {\n            this.defaultReader = this.source['getReader']();\n            // We have to catch and swallow errors here to avoid uncaught promise rejection exceptions\n            // that seem to be raised when we call `releaseLock()` on this reader. I'm still mystified\n            // about why these errors are raised, but I'm sure there's some important spec reason that\n            // I haven't considered. I hate to employ such an anti-pattern here, but it seems like the\n            // only solution in this case :/\n            this.defaultReader['closed'].catch(() => {});\n        }\n        return (this.reader = this.defaultReader);\n    }\n\n    private getBYOBReader() {\n        if (this.defaultReader) { this.releaseLock(); }\n        if (!this.byobReader) {\n            this.byobReader = this.source['getReader']({ mode: 'byob' });\n            // We have to catch and swallow errors here to avoid uncaught promise rejection exceptions\n            // that seem to be raised when we call `releaseLock()` on this reader. I'm still mystified\n            // about why these errors are raised, but I'm sure there's some important spec reason that\n            // I haven't considered. I hate to employ such an anti-pattern here, but it seems like the\n            // only solution in this case :/\n            this.byobReader['closed'].catch(() => {});\n        }\n        return (this.reader = this.byobReader);\n    }\n\n    // This strategy plucked from the example in the streams spec:\n    // https://streams.spec.whatwg.org/#example-manual-read-bytes\n    private async readFromBYOBReader(size: number) {\n        return await readInto(this.getBYOBReader(), new ArrayBuffer(size), 0, size);\n    }\n}\n\n/** @ignore */\nasync function readInto(reader: ReadableStreamBYOBReader, buffer: ArrayBufferLike, offset: number, size: number): Promise<ReadableStreamReadResult<Uint8Array>> {\n    if (offset >= size) {\n        return { done: false, value: new Uint8Array(buffer, 0, size) };\n    }\n    const { done, value } = await reader.read(new Uint8Array(buffer, offset, size - offset));\n    if (((offset += value.byteLength) < size) && !done) {\n        return await readInto(reader, value.buffer, offset, size);\n    }\n    return { done, value: new Uint8Array(value.buffer, 0, offset) };\n}\n\n/** @ignore */\ntype EventName = 'end' | 'error' | 'readable';\n/** @ignore */\ntype Event = [EventName, (_: any) => void, Promise<[EventName, Error | null]>];\n/** @ignore */\nconst onEvent = <T extends string>(stream: NodeJS.ReadableStream, event: T) => {\n    let handler = (_: any) => resolve([event, _]);\n    let resolve: (value?: [T, any] | PromiseLike<[T, any]>) => void;\n    return [event, handler, new Promise<[T, any]>(\n        (r) => (resolve = r) && stream['once'](event, handler)\n    )] as Event;\n};\n\n/** @ignore */\nasync function* fromNodeStream(stream: NodeJS.ReadableStream): AsyncIterableIterator<Uint8Array> {\n\n    let events: Event[] = [];\n    let event: EventName = 'error';\n    let done = false, err: Error | null = null;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array | Buffer | string;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before we\n    // add the listener for the source stream's 'readable' event.\n    ({ cmd, size } = yield <any> null);\n\n    // ignore stdin if it's a TTY\n    if ((stream as any)['isTTY']) { return yield new Uint8Array(0); }\n\n    try {\n        // initialize the stream event handlers\n        events[0] = onEvent(stream, 'end');\n        events[1] = onEvent(stream, 'error');\n\n        do {\n            events[2] = onEvent(stream, 'readable');\n\n            // wait on the first message event from the stream\n            [event, err] = await Promise.race(events.map((x) => x[2]));\n\n            // if the stream emitted an Error, rethrow it\n            if (event === 'error') { break; }\n            if (!(done = event === 'end')) {\n                // If the size is NaN, request to read everything in the stream's internal buffer\n                if (!isFinite(size - bufferLength)) {\n                    buffer = toUint8Array(stream['read'](undefined));\n                } else {\n                    buffer = toUint8Array(stream['read'](size - bufferLength));\n                    // If the byteLength is 0, then the requested amount is more than the stream has\n                    // in its internal buffer. In this case the stream needs a \"kick\" to tell it to\n                    // continue emitting readable events, so request to read everything the stream\n                    // has in its internal buffer right now.\n                    if (buffer.byteLength < (size - bufferLength)) {\n                        buffer = toUint8Array(stream['read'](undefined));\n                    }\n                }\n                // if chunk is not null or empty, push it onto the queue\n                if (buffer.byteLength > 0) {\n                    buffers.push(buffer);\n                    bufferLength += buffer.byteLength;\n                }\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } finally {\n        await cleanup(events, event === 'error' ? err : null);\n    }\n\n    function cleanup<T extends Error | null | void>(events: Event[], err?: T) {\n        buffer = buffers = <any> null;\n        return new Promise<T>(async (resolve, reject) => {\n            for (const [evt, fn] of events) {\n                stream['off'](evt, fn);\n            }\n            try {\n                // Some stream implementations don't call the destroy callback,\n                // because it's really a node-internal API. Just calling `destroy`\n                // here should be enough to conform to the ReadableStream contract\n                const destroy = (stream as any)['destroy'];\n                destroy && destroy.call(stream, err);\n                err = undefined;\n            } catch (e) { err = e || err; } finally {\n                err != null ? reject(err) : resolve();\n            }\n        });\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { DataType } from './type';\nimport { Chunked } from './vector/chunked';\n\n/** @ignore */\nexport interface Clonable<R extends AbstractVector> {\n    clone(...args: any[]): R;\n}\n\n/** @ignore */\nexport interface Sliceable<R extends AbstractVector> {\n    slice(begin?: number, end?: number): R;\n}\n\n/** @ignore */\nexport interface Applicative<T extends DataType, R extends Chunked> {\n    concat(...others: Vector<T>[]): R;\n    readonly [Symbol.isConcatSpreadable]: boolean;\n}\n\nexport interface AbstractVector<T extends DataType = any>\n    extends Clonable<Vector<T>>,\n            Sliceable<Vector<T>>,\n            Applicative<T, Chunked<T>> {\n\n    readonly TType: T['TType'];\n    readonly TArray: T['TArray'];\n    readonly TValue: T['TValue'];\n}\n\nexport abstract class AbstractVector<T extends DataType = any> implements Iterable<T['TValue'] | null> {\n\n    public abstract readonly data: Data<T>;\n    public abstract readonly type: T;\n    public abstract readonly typeId: T['TType'];\n    public abstract readonly length: number;\n    public abstract readonly stride: number;\n    public abstract readonly nullCount: number;\n    public abstract readonly byteLength: number;\n    public abstract readonly numChildren: number;\n\n    public abstract readonly ArrayType: T['ArrayType'];\n\n    public abstract isValid(index: number): boolean;\n    public abstract get(index: number): T['TValue'] | null;\n    public abstract set(index: number, value: T['TValue'] | null): void;\n    public abstract indexOf(value: T['TValue'] | null, fromIndex?: number): number;\n    public abstract [Symbol.iterator](): IterableIterator<T['TValue'] | null>;\n\n    public abstract toArray(): T['TArray'];\n    public abstract getChildAt<R extends DataType = any>(index: number): Vector<R> | null;\n}\n\nexport { AbstractVector as Vector };\n","/* tslint:disable:class-name */\n\n// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum MetadataVersion {\n        /**\n         * 0.1.0\n         */\n        V1 = 0,\n\n        /**\n         * 0.2.0\n         */\n        V2 = 1,\n\n        /**\n         * 0.3.0 -> 0.7.1\n         */\n        V3 = 2,\n\n        /**\n         * >= 0.8.0\n         */\n        V4 = 3\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum UnionMode {\n        Sparse = 0,\n        Dense = 1\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Precision {\n        HALF = 0,\n        SINGLE = 1,\n        DOUBLE = 2\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum DateUnit {\n        DAY = 0,\n        MILLISECOND = 1\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum TimeUnit {\n        SECOND = 0,\n        MILLISECOND = 1,\n        MICROSECOND = 2,\n        NANOSECOND = 3\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum IntervalUnit {\n        YEAR_MONTH = 0,\n        DAY_TIME = 1\n    }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Top-level Type value, enabling extensible type-specific metadata. We can\n * add new logical types to Type without breaking backwards compatibility\n *\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Type {\n        NONE = 0,\n        Null = 1,\n        Int = 2,\n        FloatingPoint = 3,\n        Binary = 4,\n        Utf8 = 5,\n        Bool = 6,\n        Decimal = 7,\n        Date = 8,\n        Time = 9,\n        Timestamp = 10,\n        Interval = 11,\n        List = 12,\n        Struct_ = 13,\n        Union = 14,\n        FixedSizeBinary = 15,\n        FixedSizeList = 16,\n        Map = 17,\n        Duration = 18,\n        LargeBinary = 19,\n        LargeUtf8 = 20,\n        LargeList = 21\n    }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Endianness of the platform producing the data\n *\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Endianness {\n        Little = 0,\n        Big = 1\n    }\n}\n\n/**\n * These are stored in the flatbuffer in the Type union below\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Null {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Null\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Null {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Null= obj\n         * @returns Null\n         */\n        static getRootAsNull(bb: flatbuffers.ByteBuffer, obj?: Null): Null {\n            return (obj || new Null).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startNull(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endNull(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createNull(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Null.startNull(builder);\n            return Null.endNull(builder);\n        }\n    }\n}\n/**\n * A Struct_ in the flatbuffer metadata is the same as an Arrow Struct\n * (according to the physical memory layout). We used Struct_ here as\n * Struct is a reserved word in Flatbuffers\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Struct_ {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Struct_\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Struct_ {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Struct_= obj\n         * @returns Struct_\n         */\n        static getRootAsStruct_(bb: flatbuffers.ByteBuffer, obj?: Struct_): Struct_ {\n            return (obj || new Struct_).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startStruct_(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endStruct_(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createStruct_(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Struct_.startStruct_(builder);\n            return Struct_.endStruct_(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class List {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns List\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): List {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param List= obj\n         * @returns List\n         */\n        static getRootAsList(bb: flatbuffers.ByteBuffer, obj?: List): List {\n            return (obj || new List).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startList(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            List.startList(builder);\n            return List.endList(builder);\n        }\n    }\n}\n/**\n * Same as List, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeList {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeList\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeList {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeList= obj\n         * @returns LargeList\n         */\n        static getRootAsLargeList(bb: flatbuffers.ByteBuffer, obj?: LargeList): LargeList {\n            return (obj || new LargeList).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeList(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeList.startLargeList(builder);\n            return LargeList.endLargeList(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FixedSizeList {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FixedSizeList\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FixedSizeList {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FixedSizeList= obj\n         * @returns FixedSizeList\n         */\n        static getRootAsFixedSizeList(bb: flatbuffers.ByteBuffer, obj?: FixedSizeList): FixedSizeList {\n            return (obj || new FixedSizeList).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Number of list items per value\n         *\n         * @returns number\n         */\n        listSize(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFixedSizeList(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number listSize\n         */\n        static addListSize(builder: flatbuffers.Builder, listSize: number) {\n            builder.addFieldInt32(0, listSize, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFixedSizeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFixedSizeList(builder: flatbuffers.Builder, listSize: number): flatbuffers.Offset {\n            FixedSizeList.startFixedSizeList(builder);\n            FixedSizeList.addListSize(builder, listSize);\n            return FixedSizeList.endFixedSizeList(builder);\n        }\n    }\n}\n/**\n * A Map is a logical nested type that is represented as\n *\n * List<entry: Struct<key: K, value: V>>\n *\n * In this layout, the keys and values are each respectively contiguous. We do\n * not constrain the key and value types, so the application is responsible\n * for ensuring that the keys are hashable and unique. Whether the keys are sorted\n * may be set in the metadata for this field\n *\n * In a Field with Map type, the Field has a child Struct field, which then\n * has two children: key type and the second the value type. The names of the\n * child fields may be respectively \"entry\", \"key\", and \"value\", but this is\n * not enforced\n *\n * Map\n *   - child[0] entry: Struct\n *     - child[0] key: K\n *     - child[1] value: V\n *\n * Neither the \"entry\" field nor the \"key\" field may be nullable.\n *\n * The metadata is structured so that Arrow systems without special handling\n * for Map can make Map an alias for List. The \"layout\" attribute for the Map\n * field must have the same contents as a List.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Map {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Map\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Map {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Map= obj\n         * @returns Map\n         */\n        static getRootAsMap(bb: flatbuffers.ByteBuffer, obj?: Map): Map {\n            return (obj || new Map).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Set to true if the keys within each value are sorted\n         *\n         * @returns boolean\n         */\n        keysSorted(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startMap(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean keysSorted\n         */\n        static addKeysSorted(builder: flatbuffers.Builder, keysSorted: boolean) {\n            builder.addFieldInt8(0, +keysSorted, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endMap(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createMap(builder: flatbuffers.Builder, keysSorted: boolean): flatbuffers.Offset {\n            Map.startMap(builder);\n            Map.addKeysSorted(builder, keysSorted);\n            return Map.endMap(builder);\n        }\n    }\n}\n/**\n * A union is a complex type with children in Field\n * By default ids in the type vector refer to the offsets in the children\n * optionally typeIds provides an indirection between the child offset and the type id\n * for each child typeIds[offset] is the id used in the type vector\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Union {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Union\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Union {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Union= obj\n         * @returns Union\n         */\n        static getRootAsUnion(bb: flatbuffers.ByteBuffer, obj?: Union): Union {\n            return (obj || new Union).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.UnionMode\n         */\n        mode(): org.apache.arrow.flatbuf.UnionMode {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.UnionMode.Sparse;\n        }\n\n        /**\n         * @param number index\n         * @returns number\n         */\n        typeIds(index: number): number | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n        }\n\n        /**\n         * @returns number\n         */\n        typeIdsLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @returns Int32Array\n         */\n        typeIdsArray(): Int32Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startUnion(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.UnionMode mode\n         */\n        static addMode(builder: flatbuffers.Builder, mode: org.apache.arrow.flatbuf.UnionMode) {\n            builder.addFieldInt16(0, mode, org.apache.arrow.flatbuf.UnionMode.Sparse);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset typeIdsOffset\n         */\n        static addTypeIds(builder: flatbuffers.Builder, typeIdsOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, typeIdsOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<number> data\n         * @returns flatbuffers.Offset\n         */\n        static createTypeIdsVector(builder: flatbuffers.Builder, data: number[] | Int32Array): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addInt32(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startTypeIdsVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endUnion(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createUnion(builder: flatbuffers.Builder, mode: org.apache.arrow.flatbuf.UnionMode, typeIdsOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Union.startUnion(builder);\n            Union.addMode(builder, mode);\n            Union.addTypeIds(builder, typeIdsOffset);\n            return Union.endUnion(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Int {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Int\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Int {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Int= obj\n         * @returns Int\n         */\n        static getRootAsInt(bb: flatbuffers.ByteBuffer, obj?: Int): Int {\n            return (obj || new Int).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns number\n         */\n        bitWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @returns boolean\n         */\n        isSigned(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startInt(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number bitWidth\n         */\n        static addBitWidth(builder: flatbuffers.Builder, bitWidth: number) {\n            builder.addFieldInt32(0, bitWidth, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isSigned\n         */\n        static addIsSigned(builder: flatbuffers.Builder, isSigned: boolean) {\n            builder.addFieldInt8(1, +isSigned, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endInt(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createInt(builder: flatbuffers.Builder, bitWidth: number, isSigned: boolean): flatbuffers.Offset {\n            Int.startInt(builder);\n            Int.addBitWidth(builder, bitWidth);\n            Int.addIsSigned(builder, isSigned);\n            return Int.endInt(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FloatingPoint {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FloatingPoint\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FloatingPoint {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FloatingPoint= obj\n         * @returns FloatingPoint\n         */\n        static getRootAsFloatingPoint(bb: flatbuffers.ByteBuffer, obj?: FloatingPoint): FloatingPoint {\n            return (obj || new FloatingPoint).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.Precision\n         */\n        precision(): org.apache.arrow.flatbuf.Precision {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Precision.HALF;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFloatingPoint(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Precision precision\n         */\n        static addPrecision(builder: flatbuffers.Builder, precision: org.apache.arrow.flatbuf.Precision) {\n            builder.addFieldInt16(0, precision, org.apache.arrow.flatbuf.Precision.HALF);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFloatingPoint(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFloatingPoint(builder: flatbuffers.Builder, precision: org.apache.arrow.flatbuf.Precision): flatbuffers.Offset {\n            FloatingPoint.startFloatingPoint(builder);\n            FloatingPoint.addPrecision(builder, precision);\n            return FloatingPoint.endFloatingPoint(builder);\n        }\n    }\n}\n/**\n * Unicode with UTF-8 encoding\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Utf8 {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Utf8\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Utf8 {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Utf8= obj\n         * @returns Utf8\n         */\n        static getRootAsUtf8(bb: flatbuffers.ByteBuffer, obj?: Utf8): Utf8 {\n            return (obj || new Utf8).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startUtf8(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Utf8.startUtf8(builder);\n            return Utf8.endUtf8(builder);\n        }\n    }\n}\n/**\n * Opaque binary data\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Binary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Binary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Binary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Binary= obj\n         * @returns Binary\n         */\n        static getRootAsBinary(bb: flatbuffers.ByteBuffer, obj?: Binary): Binary {\n            return (obj || new Binary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startBinary(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Binary.startBinary(builder);\n            return Binary.endBinary(builder);\n        }\n    }\n}\n/**\n * Same as Utf8, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeUtf8 {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeUtf8\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeUtf8 {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeUtf8= obj\n         * @returns LargeUtf8\n         */\n        static getRootAsLargeUtf8(bb: flatbuffers.ByteBuffer, obj?: LargeUtf8): LargeUtf8 {\n            return (obj || new LargeUtf8).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeUtf8(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeUtf8.startLargeUtf8(builder);\n            return LargeUtf8.endLargeUtf8(builder);\n        }\n    }\n}\n/**\n * Same as Binary, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeBinary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeBinary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeBinary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeBinary= obj\n         * @returns LargeBinary\n         */\n        static getRootAsLargeBinary(bb: flatbuffers.ByteBuffer, obj?: LargeBinary): LargeBinary {\n            return (obj || new LargeBinary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeBinary(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeBinary.startLargeBinary(builder);\n            return LargeBinary.endLargeBinary(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FixedSizeBinary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FixedSizeBinary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FixedSizeBinary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FixedSizeBinary= obj\n         * @returns FixedSizeBinary\n         */\n        static getRootAsFixedSizeBinary(bb: flatbuffers.ByteBuffer, obj?: FixedSizeBinary): FixedSizeBinary {\n            return (obj || new FixedSizeBinary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Number of bytes per value\n         *\n         * @returns number\n         */\n        byteWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFixedSizeBinary(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number byteWidth\n         */\n        static addByteWidth(builder: flatbuffers.Builder, byteWidth: number) {\n            builder.addFieldInt32(0, byteWidth, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFixedSizeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFixedSizeBinary(builder: flatbuffers.Builder, byteWidth: number): flatbuffers.Offset {\n            FixedSizeBinary.startFixedSizeBinary(builder);\n            FixedSizeBinary.addByteWidth(builder, byteWidth);\n            return FixedSizeBinary.endFixedSizeBinary(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Bool {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Bool\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Bool {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Bool= obj\n         * @returns Bool\n         */\n        static getRootAsBool(bb: flatbuffers.ByteBuffer, obj?: Bool): Bool {\n            return (obj || new Bool).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startBool(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endBool(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createBool(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Bool.startBool(builder);\n            return Bool.endBool(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Decimal {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Decimal\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Decimal {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Decimal= obj\n         * @returns Decimal\n         */\n        static getRootAsDecimal(bb: flatbuffers.ByteBuffer, obj?: Decimal): Decimal {\n            return (obj || new Decimal).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Total number of decimal digits\n         *\n         * @returns number\n         */\n        precision(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * Number of digits after the decimal point \".\"\n         *\n         * @returns number\n         */\n        scale(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDecimal(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number precision\n         */\n        static addPrecision(builder: flatbuffers.Builder, precision: number) {\n            builder.addFieldInt32(0, precision, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number scale\n         */\n        static addScale(builder: flatbuffers.Builder, scale: number) {\n            builder.addFieldInt32(1, scale, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDecimal(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDecimal(builder: flatbuffers.Builder, precision: number, scale: number): flatbuffers.Offset {\n            Decimal.startDecimal(builder);\n            Decimal.addPrecision(builder, precision);\n            Decimal.addScale(builder, scale);\n            return Decimal.endDecimal(builder);\n        }\n    }\n}\n/**\n * Date is either a 32-bit or 64-bit type representing elapsed time since UNIX\n * epoch (1970-01-01), stored in either of two units:\n *\n * * Milliseconds (64 bits) indicating UNIX time elapsed since the epoch (no\n *   leap seconds), where the values are evenly divisible by 86400000\n * * Days (32 bits) since the UNIX epoch\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Date {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Date\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Date {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Date= obj\n         * @returns Date\n         */\n        static getRootAsDate(bb: flatbuffers.ByteBuffer, obj?: Date): Date {\n            return (obj || new Date).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.DateUnit\n         */\n        unit(): org.apache.arrow.flatbuf.DateUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.DateUnit.MILLISECOND;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDate(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.DateUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.DateUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.DateUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDate(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDate(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.DateUnit): flatbuffers.Offset {\n            Date.startDate(builder);\n            Date.addUnit(builder, unit);\n            return Date.endDate(builder);\n        }\n    }\n}\n/**\n * Time type. The physical storage type depends on the unit\n * - SECOND and MILLISECOND: 32 bits\n * - MICROSECOND and NANOSECOND: 64 bits\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Time {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Time\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Time {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Time= obj\n         * @returns Time\n         */\n        static getRootAsTime(bb: flatbuffers.ByteBuffer, obj?: Time): Time {\n            return (obj || new Time).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\n        }\n\n        /**\n         * @returns number\n         */\n        bitWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 32;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startTime(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number bitWidth\n         */\n        static addBitWidth(builder: flatbuffers.Builder, bitWidth: number) {\n            builder.addFieldInt32(1, bitWidth, 32);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endTime(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createTime(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit, bitWidth: number): flatbuffers.Offset {\n            Time.startTime(builder);\n            Time.addUnit(builder, unit);\n            Time.addBitWidth(builder, bitWidth);\n            return Time.endTime(builder);\n        }\n    }\n}\n/**\n * Time elapsed from the Unix epoch, 00:00:00.000 on 1 January 1970, excluding\n * leap seconds, as a 64-bit integer. Note that UNIX time does not include\n * leap seconds.\n *\n * The Timestamp metadata supports both \"time zone naive\" and \"time zone\n * aware\" timestamps. Read about the timezone attribute for more detail\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Timestamp {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Timestamp\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Timestamp {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Timestamp= obj\n         * @returns Timestamp\n         */\n        static getRootAsTimestamp(bb: flatbuffers.ByteBuffer, obj?: Timestamp): Timestamp {\n            return (obj || new Timestamp).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.SECOND;\n        }\n\n        /**\n         * The time zone is a string indicating the name of a time zone, one of:\n         *\n         * * As used in the Olson time zone database (the \"tz database\" or\n         *   \"tzdata\"), such as \"America/New_York\"\n         * * An absolute time zone offset of the form +XX:XX or -XX:XX, such as +07:30\n         *\n         * Whether a timezone string is present indicates different semantics about\n         * the data:\n         *\n         * * If the time zone is null or equal to an empty string, the data is \"time\n         *   zone naive\" and shall be displayed *as is* to the user, not localized\n         *   to the locale of the user. This data can be though of as UTC but\n         *   without having \"UTC\" as the time zone, it is not considered to be\n         *   localized to any time zone\n         *\n         * * If the time zone is set to a valid value, values can be displayed as\n         *   \"localized\" to that time zone, even though the underlying 64-bit\n         *   integers are identical to the same data stored in UTC. Converting\n         *   between time zones is a metadata-only operation and does not change the\n         *   underlying values\n         *\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        timezone(): string | null;\n        timezone(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        timezone(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startTimestamp(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.SECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset timezoneOffset\n         */\n        static addTimezone(builder: flatbuffers.Builder, timezoneOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, timezoneOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endTimestamp(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createTimestamp(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit, timezoneOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Timestamp.startTimestamp(builder);\n            Timestamp.addUnit(builder, unit);\n            Timestamp.addTimezone(builder, timezoneOffset);\n            return Timestamp.endTimestamp(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Interval {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Interval\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Interval {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Interval= obj\n         * @returns Interval\n         */\n        static getRootAsInterval(bb: flatbuffers.ByteBuffer, obj?: Interval): Interval {\n            return (obj || new Interval).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.IntervalUnit\n         */\n        unit(): org.apache.arrow.flatbuf.IntervalUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startInterval(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.IntervalUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.IntervalUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endInterval(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createInterval(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.IntervalUnit): flatbuffers.Offset {\n            Interval.startInterval(builder);\n            Interval.addUnit(builder, unit);\n            return Interval.endInterval(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Duration {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Duration\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Duration {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Duration= obj\n         * @returns Duration\n         */\n        static getRootAsDuration(bb: flatbuffers.ByteBuffer, obj?: Duration): Duration {\n            return (obj || new Duration).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDuration(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDuration(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDuration(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit): flatbuffers.Offset {\n            Duration.startDuration(builder);\n            Duration.addUnit(builder, unit);\n            return Duration.endDuration(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * user defined key value pairs to add custom metadata to arrow\n * key namespacing is the responsibility of the user\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class KeyValue {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns KeyValue\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): KeyValue {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param KeyValue= obj\n         * @returns KeyValue\n         */\n        static getRootAsKeyValue(bb: flatbuffers.ByteBuffer, obj?: KeyValue): KeyValue {\n            return (obj || new KeyValue).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        key(): string | null;\n        key(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        key(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        value(): string | null;\n        value(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        value(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startKeyValue(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset keyOffset\n         */\n        static addKey(builder: flatbuffers.Builder, keyOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(0, keyOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset valueOffset\n         */\n        static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, valueOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endKeyValue(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createKeyValue(builder: flatbuffers.Builder, keyOffset: flatbuffers.Offset, valueOffset: flatbuffers.Offset): flatbuffers.Offset {\n            KeyValue.startKeyValue(builder);\n            KeyValue.addKey(builder, keyOffset);\n            KeyValue.addValue(builder, valueOffset);\n            return KeyValue.endKeyValue(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * Dictionary encoding metadata\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class DictionaryEncoding {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns DictionaryEncoding\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): DictionaryEncoding {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param DictionaryEncoding= obj\n         * @returns DictionaryEncoding\n         */\n        static getRootAsDictionaryEncoding(bb: flatbuffers.ByteBuffer, obj?: DictionaryEncoding): DictionaryEncoding {\n            return (obj || new DictionaryEncoding).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * The known dictionary id in the application where this data is used. In\n         * the file or streaming formats, the dictionary ids are found in the\n         * DictionaryBatch messages\n         *\n         * @returns flatbuffers.Long\n         */\n        id(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * The dictionary indices are constrained to be positive integers. If this\n         * field is null, the indices must be signed int32\n         *\n         * @param org.apache.arrow.flatbuf.Int= obj\n         * @returns org.apache.arrow.flatbuf.Int|null\n         */\n        indexType(obj?: org.apache.arrow.flatbuf.Int): org.apache.arrow.flatbuf.Int | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Int).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * By default, dictionaries are not ordered, or the order does not have\n         * semantic meaning. In some statistical, applications, dictionary-encoding\n         * is used to represent ordered categorical data, and we provide a way to\n         * preserve that metadata here\n         *\n         * @returns boolean\n         */\n        isOrdered(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDictionaryEncoding(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long id\n         */\n        static addId(builder: flatbuffers.Builder, id: flatbuffers.Long) {\n            builder.addFieldInt64(0, id, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset indexTypeOffset\n         */\n        static addIndexType(builder: flatbuffers.Builder, indexTypeOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, indexTypeOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isOrdered\n         */\n        static addIsOrdered(builder: flatbuffers.Builder, isOrdered: boolean) {\n            builder.addFieldInt8(2, +isOrdered, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDictionaryEncoding(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDictionaryEncoding(builder: flatbuffers.Builder, id: flatbuffers.Long, indexTypeOffset: flatbuffers.Offset, isOrdered: boolean): flatbuffers.Offset {\n            DictionaryEncoding.startDictionaryEncoding(builder);\n            DictionaryEncoding.addId(builder, id);\n            DictionaryEncoding.addIndexType(builder, indexTypeOffset);\n            DictionaryEncoding.addIsOrdered(builder, isOrdered);\n            return DictionaryEncoding.endDictionaryEncoding(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A field represents a named column in a record / row batch or child of a\n * nested type.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Field {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Field\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Field {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Field= obj\n         * @returns Field\n         */\n        static getRootAsField(bb: flatbuffers.ByteBuffer, obj?: Field): Field {\n            return (obj || new Field).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Name is not required, in i.e. a List\n         *\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        name(): string | null;\n        name(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        name(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * Whether or not this field can contain nulls. Should be true in general.\n         *\n         * @returns boolean\n         */\n        nullable(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.Type\n         */\n        typeType(): org.apache.arrow.flatbuf.Type {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Type.NONE;\n        }\n\n        /**\n         * This is the type of the decoded value if the field is dictionary encoded.\n         *\n         * @param flatbuffers.Table obj\n         * @returns ?flatbuffers.Table\n         */\n        type<T extends flatbuffers.Table>(obj: T): T | null {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n        }\n\n        /**\n         * Present only if the field is dictionary encoded.\n         *\n         * @param org.apache.arrow.flatbuf.DictionaryEncoding= obj\n         * @returns org.apache.arrow.flatbuf.DictionaryEncoding|null\n         */\n        dictionary(obj?: org.apache.arrow.flatbuf.DictionaryEncoding): org.apache.arrow.flatbuf.DictionaryEncoding | null {\n            let offset = this.bb!.__offset(this.bb_pos, 12);\n            return offset ? (obj || new org.apache.arrow.flatbuf.DictionaryEncoding).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * children apply only to nested data types like Struct, List and Union. For\n         * primitive types children will have length 0.\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Field= obj\n         * @returns org.apache.arrow.flatbuf.Field\n         */\n        children(index: number, obj?: org.apache.arrow.flatbuf.Field): org.apache.arrow.flatbuf.Field | null {\n            let offset = this.bb!.__offset(this.bb_pos, 14);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        childrenLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 14);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * User-defined metadata\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.KeyValue= obj\n         * @returns org.apache.arrow.flatbuf.KeyValue\n         */\n        customMetadata(index: number, obj?: org.apache.arrow.flatbuf.KeyValue): org.apache.arrow.flatbuf.KeyValue | null {\n            let offset = this.bb!.__offset(this.bb_pos, 16);\n            return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        customMetadataLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 16);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startField(builder: flatbuffers.Builder) {\n            builder.startObject(7);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset nameOffset\n         */\n        static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(0, nameOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean nullable\n         */\n        static addNullable(builder: flatbuffers.Builder, nullable: boolean) {\n            builder.addFieldInt8(1, +nullable, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Type typeType\n         */\n        static addTypeType(builder: flatbuffers.Builder, typeType: org.apache.arrow.flatbuf.Type) {\n            builder.addFieldInt8(2, typeType, org.apache.arrow.flatbuf.Type.NONE);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset typeOffset\n         */\n        static addType(builder: flatbuffers.Builder, typeOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(3, typeOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dictionaryOffset\n         */\n        static addDictionary(builder: flatbuffers.Builder, dictionaryOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(4, dictionaryOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset childrenOffset\n         */\n        static addChildren(builder: flatbuffers.Builder, childrenOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(5, childrenOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createChildrenVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startChildrenVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset customMetadataOffset\n         */\n        static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(6, customMetadataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endField(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createField(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, nullable: boolean, typeType: org.apache.arrow.flatbuf.Type, typeOffset: flatbuffers.Offset, dictionaryOffset: flatbuffers.Offset, childrenOffset: flatbuffers.Offset, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Field.startField(builder);\n            Field.addName(builder, nameOffset);\n            Field.addNullable(builder, nullable);\n            Field.addTypeType(builder, typeType);\n            Field.addType(builder, typeOffset);\n            Field.addDictionary(builder, dictionaryOffset);\n            Field.addChildren(builder, childrenOffset);\n            Field.addCustomMetadata(builder, customMetadataOffset);\n            return Field.endField(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A Buffer represents a single contiguous memory segment\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Buffer {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Buffer\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Buffer {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * The relative offset into the shared memory page where the bytes for this\n         * buffer starts\n         *\n         * @returns flatbuffers.Long\n         */\n        offset(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * The absolute length (in bytes) of the memory buffer. The memory is found\n         * from offset (inclusive) to offset + length (non-inclusive).\n         *\n         * @returns flatbuffers.Long\n         */\n        length(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long offset\n         * @param flatbuffers.Long length\n         * @returns flatbuffers.Offset\n         */\n        static createBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Long, length: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 16);\n            builder.writeInt64(length);\n            builder.writeInt64(offset);\n            return builder.offset();\n        }\n\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A Schema describes the columns in a row batch\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Schema {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Schema\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Schema {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Schema= obj\n         * @returns Schema\n         */\n        static getRootAsSchema(bb: flatbuffers.ByteBuffer, obj?: Schema): Schema {\n            return (obj || new Schema).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * endianness of the buffer\n         * it is Little Endian by default\n         * if endianness doesn't match the underlying system then the vectors need to be converted\n         *\n         * @returns org.apache.arrow.flatbuf.Endianness\n         */\n        endianness(): org.apache.arrow.flatbuf.Endianness {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Endianness.Little;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Field= obj\n         * @returns org.apache.arrow.flatbuf.Field\n         */\n        fields(index: number, obj?: org.apache.arrow.flatbuf.Field): org.apache.arrow.flatbuf.Field | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        fieldsLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.KeyValue= obj\n         * @returns org.apache.arrow.flatbuf.KeyValue\n         */\n        customMetadata(index: number, obj?: org.apache.arrow.flatbuf.KeyValue): org.apache.arrow.flatbuf.KeyValue | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        customMetadataLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startSchema(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Endianness endianness\n         */\n        static addEndianness(builder: flatbuffers.Builder, endianness: org.apache.arrow.flatbuf.Endianness) {\n            builder.addFieldInt16(0, endianness, org.apache.arrow.flatbuf.Endianness.Little);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset fieldsOffset\n         */\n        static addFields(builder: flatbuffers.Builder, fieldsOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, fieldsOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createFieldsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startFieldsVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset customMetadataOffset\n         */\n        static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, customMetadataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endSchema(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishSchemaBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createSchema(builder: flatbuffers.Builder, endianness: org.apache.arrow.flatbuf.Endianness, fieldsOffset: flatbuffers.Offset, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Schema.startSchema(builder);\n            Schema.addEndianness(builder, endianness);\n            Schema.addFields(builder, fieldsOffset);\n            Schema.addCustomMetadata(builder, customMetadataOffset);\n            return Schema.endSchema(builder);\n        }\n    }\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as NS7624605610262437867 from './Schema';\nexport namespace org.apache.arrow.flatbuf {\n    export import Schema = NS7624605610262437867.org.apache.arrow.flatbuf.Schema;\n}\n/**\n * ----------------------------------------------------------------------\n * The root Message type\n * This union enables us to easily send different message types without\n * redundant storage, and in the future we can easily add new message types.\n *\n * Arrow implementations do not need to implement all of the message types,\n * which may include experimental metadata types. For maximum compatibility,\n * it is best to send data using RecordBatch\n *\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum MessageHeader {\n        NONE = 0,\n        Schema = 1,\n        DictionaryBatch = 2,\n        RecordBatch = 3,\n        Tensor = 4,\n        SparseTensor = 5\n    }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Data structures for describing a table row batch (a collection of\n * equal-length Arrow arrays)\n * Metadata about a field at some level of a nested type tree (but not\n * its children).\n *\n * For example, a List<Int16> with values [[1, 2, 3], null, [4], [5, 6], null]\n * would have {length: 5, null_count: 2} for its List node, and {length: 6,\n * null_count: 0} for its Int16 node, as separate FieldNode structs\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FieldNode {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FieldNode\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FieldNode {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * The number of value slots in the Arrow array at this level of a nested\n         * tree\n         *\n         * @returns flatbuffers.Long\n         */\n        length(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * The number of observed nulls. Fields with null_count == 0 may choose not\n         * to write their physical validity bitmap out as a materialized buffer,\n         * instead setting the length of the bitmap buffer to 0.\n         *\n         * @returns flatbuffers.Long\n         */\n        nullCount(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long length\n         * @param flatbuffers.Long null_count\n         * @returns flatbuffers.Offset\n         */\n        static createFieldNode(builder: flatbuffers.Builder, length: flatbuffers.Long, null_count: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 16);\n            builder.writeInt64(null_count);\n            builder.writeInt64(length);\n            return builder.offset();\n        }\n\n    }\n}\n/**\n * A data header describing the shared memory layout of a \"record\" or \"row\"\n * batch. Some systems call this a \"row batch\" internally and others a \"record\n * batch\".\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class RecordBatch {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns RecordBatch\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): RecordBatch {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param RecordBatch= obj\n         * @returns RecordBatch\n         */\n        static getRootAsRecordBatch(bb: flatbuffers.ByteBuffer, obj?: RecordBatch): RecordBatch {\n            return (obj || new RecordBatch).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * number of records / rows. The arrays in the batch should all have this\n         * length\n         *\n         * @returns flatbuffers.Long\n         */\n        length(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * Nodes correspond to the pre-ordered flattened logical schema\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.FieldNode= obj\n         * @returns org.apache.arrow.flatbuf.FieldNode\n         */\n        nodes(index: number, obj?: org.apache.arrow.flatbuf.FieldNode): org.apache.arrow.flatbuf.FieldNode | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.FieldNode).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        nodesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * Buffers correspond to the pre-ordered flattened buffer tree\n         *\n         * The number of buffers appended to this list depends on the schema. For\n         * example, most primitive arrays will have 2 buffers, 1 for the validity\n         * bitmap and 1 for the values. For struct arrays, there will only be a\n         * single buffer for the validity (nulls) bitmap\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Buffer= obj\n         * @returns org.apache.arrow.flatbuf.Buffer\n         */\n        buffers(index: number, obj?: NS7624605610262437867.org.apache.arrow.flatbuf.Buffer): NS7624605610262437867.org.apache.arrow.flatbuf.Buffer | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Buffer).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        buffersLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startRecordBatch(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long length\n         */\n        static addLength(builder: flatbuffers.Builder, length: flatbuffers.Long) {\n            builder.addFieldInt64(0, length, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset nodesOffset\n         */\n        static addNodes(builder: flatbuffers.Builder, nodesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, nodesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startNodesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(16, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset buffersOffset\n         */\n        static addBuffers(builder: flatbuffers.Builder, buffersOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, buffersOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startBuffersVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(16, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endRecordBatch(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createRecordBatch(builder: flatbuffers.Builder, length: flatbuffers.Long, nodesOffset: flatbuffers.Offset, buffersOffset: flatbuffers.Offset): flatbuffers.Offset {\n            RecordBatch.startRecordBatch(builder);\n            RecordBatch.addLength(builder, length);\n            RecordBatch.addNodes(builder, nodesOffset);\n            RecordBatch.addBuffers(builder, buffersOffset);\n            return RecordBatch.endRecordBatch(builder);\n        }\n    }\n}\n/**\n * For sending dictionary encoding information. Any Field can be\n * dictionary-encoded, but in this case none of its children may be\n * dictionary-encoded.\n * There is one vector / column per dictionary, but that vector / column\n * may be spread across multiple dictionary batches by using the isDelta\n * flag\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class DictionaryBatch {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns DictionaryBatch\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): DictionaryBatch {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param DictionaryBatch= obj\n         * @returns DictionaryBatch\n         */\n        static getRootAsDictionaryBatch(bb: flatbuffers.ByteBuffer, obj?: DictionaryBatch): DictionaryBatch {\n            return (obj || new DictionaryBatch).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns flatbuffers.Long\n         */\n        id(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * @param org.apache.arrow.flatbuf.RecordBatch= obj\n         * @returns org.apache.arrow.flatbuf.RecordBatch|null\n         */\n        data(obj?: org.apache.arrow.flatbuf.RecordBatch): org.apache.arrow.flatbuf.RecordBatch | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.RecordBatch).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * If isDelta is true the values in the dictionary are to be appended to a\n         * dictionary with the indicated id\n         *\n         * @returns boolean\n         */\n        isDelta(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDictionaryBatch(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long id\n         */\n        static addId(builder: flatbuffers.Builder, id: flatbuffers.Long) {\n            builder.addFieldInt64(0, id, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dataOffset\n         */\n        static addData(builder: flatbuffers.Builder, dataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, dataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isDelta\n         */\n        static addIsDelta(builder: flatbuffers.Builder, isDelta: boolean) {\n            builder.addFieldInt8(2, +isDelta, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDictionaryBatch(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDictionaryBatch(builder: flatbuffers.Builder, id: flatbuffers.Long, dataOffset: flatbuffers.Offset, isDelta: boolean): flatbuffers.Offset {\n            DictionaryBatch.startDictionaryBatch(builder);\n            DictionaryBatch.addId(builder, id);\n            DictionaryBatch.addData(builder, dataOffset);\n            DictionaryBatch.addIsDelta(builder, isDelta);\n            return DictionaryBatch.endDictionaryBatch(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Message {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Message\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Message {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Message= obj\n         * @returns Message\n         */\n        static getRootAsMessage(bb: flatbuffers.ByteBuffer, obj?: Message): Message {\n            return (obj || new Message).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MetadataVersion\n         */\n        version(): NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MessageHeader\n         */\n        headerType(): org.apache.arrow.flatbuf.MessageHeader {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.MessageHeader.NONE;\n        }\n\n        /**\n         * @param flatbuffers.Table obj\n         * @returns ?flatbuffers.Table\n         */\n        header<T extends flatbuffers.Table>(obj: T): T | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n        }\n\n        /**\n         * @returns flatbuffers.Long\n         */\n        bodyLength(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.KeyValue= obj\n         * @returns org.apache.arrow.flatbuf.KeyValue\n         */\n        customMetadata(index: number, obj?: NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue): NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue | null {\n            let offset = this.bb!.__offset(this.bb_pos, 12);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        customMetadataLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 12);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startMessage(builder: flatbuffers.Builder) {\n            builder.startObject(5);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MetadataVersion version\n         */\n        static addVersion(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion) {\n            builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MessageHeader headerType\n         */\n        static addHeaderType(builder: flatbuffers.Builder, headerType: org.apache.arrow.flatbuf.MessageHeader) {\n            builder.addFieldInt8(1, headerType, org.apache.arrow.flatbuf.MessageHeader.NONE);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset headerOffset\n         */\n        static addHeader(builder: flatbuffers.Builder, headerOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, headerOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long bodyLength\n         */\n        static addBodyLength(builder: flatbuffers.Builder, bodyLength: flatbuffers.Long) {\n            builder.addFieldInt64(3, bodyLength, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset customMetadataOffset\n         */\n        static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(4, customMetadataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endMessage(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishMessageBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createMessage(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion, headerType: org.apache.arrow.flatbuf.MessageHeader, headerOffset: flatbuffers.Offset, bodyLength: flatbuffers.Long, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Message.startMessage(builder);\n            Message.addVersion(builder, version);\n            Message.addHeaderType(builder, headerType);\n            Message.addHeader(builder, headerOffset);\n            Message.addBodyLength(builder, bodyLength);\n            Message.addCustomMetadata(builder, customMetadataOffset);\n            return Message.endMessage(builder);\n        }\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport * as Schema_ from './fb/Schema';\nimport * as Message_ from './fb/Message';\n\nexport import ArrowType = Schema_.org.apache.arrow.flatbuf.Type;\nexport import DateUnit = Schema_.org.apache.arrow.flatbuf.DateUnit;\nexport import TimeUnit = Schema_.org.apache.arrow.flatbuf.TimeUnit;\nexport import Precision = Schema_.org.apache.arrow.flatbuf.Precision;\nexport import UnionMode = Schema_.org.apache.arrow.flatbuf.UnionMode;\nexport import IntervalUnit = Schema_.org.apache.arrow.flatbuf.IntervalUnit;\nexport import MessageHeader = Message_.org.apache.arrow.flatbuf.MessageHeader;\nexport import MetadataVersion = Schema_.org.apache.arrow.flatbuf.MetadataVersion;\n\n/**\n * Main data type enumeration.\n *\n * Data types in this library are all *logical*. They can be expressed as\n * either a primitive physical type (bytes or bits of some fixed size), a\n * nested type consisting of other data types, or another data type (e.g. a\n * timestamp encoded as an int64).\n *\n * **Note**: Only enum values 0-17 (NONE through Map) are written to an Arrow\n * IPC payload.\n *\n * The rest of the values are specified here so TypeScript can narrow the type\n * signatures further beyond the base Arrow Types. The Arrow DataTypes include\n * metadata like `bitWidth` that impact the type signatures of the values we\n * accept and return.\n *\n * For example, the `Int8Vector` reads 1-byte numbers from an `Int8Array`, an\n * `Int32Vector` reads a 4-byte number from an `Int32Array`, and an `Int64Vector`\n * reads a pair of 4-byte lo, hi 32-bit integers as a zero-copy slice from the\n * underlying `Int32Array`.\n *\n * Library consumers benefit by knowing the narrowest type, since we can ensure\n * the types across all public methods are propagated, and never bail to `any`.\n * These values are _never_ used at runtime, and they will _never_ be written\n * to the flatbuffers metadata of serialized Arrow IPC payloads.\n */\nexport enum Type {\n    /** The default placeholder type */\n    NONE            =  0,\n    /** A NULL type having no physical storage */\n    Null            =  1,\n    /** Signed or unsigned 8, 16, 32, or 64-bit little-endian integer */\n    Int             =  2,\n    /** 2, 4, or 8-byte floating point value */\n    Float           =  3,\n    /** Variable-length bytes (no guarantee of UTF8-ness) */\n    Binary          =  4,\n    /** UTF8 variable-length string as List<Char> */\n    Utf8            =  5,\n    /** Boolean as 1 bit, LSB bit-packed ordering */\n    Bool            =  6,\n    /** Precision-and-scale-based decimal type. Storage type depends on the parameters. */\n    Decimal         =  7,\n    /** int32_t days or int64_t milliseconds since the UNIX epoch */\n    Date            =  8,\n    /** Time as signed 32 or 64-bit integer, representing either seconds, milliseconds, microseconds, or nanoseconds since midnight since midnight */\n    Time            =  9,\n    /** Exact timestamp encoded with int64 since UNIX epoch (Default unit millisecond) */\n    Timestamp       = 10,\n    /** YEAR_MONTH or DAY_TIME interval in SQL style */\n    Interval        = 11,\n    /** A list of some logical data type */\n    List            = 12,\n    /** Struct of logical types */\n    Struct          = 13,\n    /** Union of logical types */\n    Union           = 14,\n    /** Fixed-size binary. Each value occupies the same number of bytes */\n    FixedSizeBinary = 15,\n    /** Fixed-size list. Each value occupies the same number of bytes */\n    FixedSizeList   = 16,\n    /** Map of named logical types */\n    Map             = 17,\n\n    /** Dictionary aka Category type */\n    Dictionary            = -1,\n    Int8                  = -2,\n    Int16                 = -3,\n    Int32                 = -4,\n    Int64                 = -5,\n    Uint8                 = -6,\n    Uint16                = -7,\n    Uint32                = -8,\n    Uint64                = -9,\n    Float16               = -10,\n    Float32               = -11,\n    Float64               = -12,\n    DateDay               = -13,\n    DateMillisecond       = -14,\n    TimestampSecond       = -15,\n    TimestampMillisecond  = -16,\n    TimestampMicrosecond  = -17,\n    TimestampNanosecond   = -18,\n    TimeSecond            = -19,\n    TimeMillisecond       = -20,\n    TimeMicrosecond       = -21,\n    TimeNanosecond        = -22,\n    DenseUnion            = -23,\n    SparseUnion           = -24,\n    IntervalDayTime       = -25,\n    IntervalYearMonth     = -26,\n}\n\nexport enum BufferType {\n    /**\n     * used in List type, Dense Union and variable length primitive types (String, Binary)\n     */\n    OFFSET = 0,\n\n    /**\n     * actual data, either wixed width primitive types in slots or variable width delimited by an OFFSET vector\n     */\n    DATA = 1,\n\n    /**\n     * Bit vector indicating if each value is null\n     */\n    VALIDITY = 2,\n\n    /**\n     * Type vector used in Union type\n     */\n    TYPE = 3\n  }\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport function getBool(_data: any, _index: number, byte: number, bit: number) {\n    return (byte & 1 << bit) !== 0;\n}\n\n/** @ignore */\nexport function getBit(_data: any, _index: number, byte: number, bit: number): 0 | 1 {\n    return (byte & 1 << bit) >> bit as (0 | 1);\n}\n\n/** @ignore */\nexport function setBool(bytes: Uint8Array, index: number, value: any) {\n    return value ?\n        !!(bytes[index >> 3] |=  (1 << (index % 8))) || true :\n        !(bytes[index >> 3] &= ~(1 << (index % 8))) && false ;\n}\n\n/** @ignore */\nexport function truncateBitmap(offset: number, length: number, bitmap: Uint8Array) {\n    const alignedSize = (bitmap.byteLength + 7) & ~7;\n    if (offset > 0 || bitmap.byteLength < alignedSize) {\n        const bytes = new Uint8Array(alignedSize);\n        // If the offset is a multiple of 8 bits, it's safe to slice the bitmap\n        bytes.set(offset % 8 === 0 ? bitmap.subarray(offset >> 3) :\n            // Otherwise iterate each bit from the offset and return a new one\n            packBools(iterateBits(bitmap, offset, length, null, getBool)).subarray(0, alignedSize));\n        return bytes;\n    }\n    return bitmap;\n}\n\n/** @ignore */\nexport function packBools(values: Iterable<any>) {\n    let xs: number[] = [];\n    let i = 0, bit = 0, byte = 0;\n    for (const value of values) {\n        value && (byte |= 1 << bit);\n        if (++bit === 8) {\n            xs[i++] = byte;\n            byte = bit = 0;\n        }\n    }\n    if (i === 0 || bit > 0) { xs[i++] = byte; }\n    let b = new Uint8Array((xs.length + 7) & ~7);\n    b.set(xs);\n    return b;\n}\n\n/** @ignore */\nexport function* iterateBits<T>(bytes: Uint8Array, begin: number, length: number, context: any,\n                                get: (context: any, index: number, byte: number, bit: number) => T) {\n    let bit = begin % 8;\n    let byteIndex = begin >> 3;\n    let index = 0, remaining = length;\n    for (; remaining > 0; bit = 0) {\n        let byte = bytes[byteIndex++];\n        do {\n            yield get(context, index++, byte, bit);\n        } while (--remaining > 0 && ++bit < 8);\n    }\n}\n\n/**\n * Compute the population count (the number of bits set to 1) for a range of bits in a Uint8Array.\n * @param vector The Uint8Array of bits for which to compute the population count.\n * @param lhs The range's left-hand side (or start) bit\n * @param rhs The range's right-hand side (or end) bit\n */\n/** @ignore */\nexport function popcnt_bit_range(data: Uint8Array, lhs: number, rhs: number): number {\n    if (rhs - lhs <= 0) { return 0; }\n    // If the bit range is less than one byte, sum the 1 bits in the bit range\n    if (rhs - lhs < 8) {\n        let sum = 0;\n        for (const bit of iterateBits(data, lhs, rhs - lhs, data, getBit)) {\n            sum += bit;\n        }\n        return sum;\n    }\n    // Get the next lowest multiple of 8 from the right hand side\n    const rhsInside = rhs >> 3 << 3;\n    // Get the next highest multiple of 8 from the left hand side\n    const lhsInside = lhs + (lhs % 8 === 0 ? 0 : 8 - lhs % 8);\n    return (\n        // Get the popcnt of bits between the left hand side, and the next highest multiple of 8\n        popcnt_bit_range(data, lhs, lhsInside) +\n        // Get the popcnt of bits between the right hand side, and the next lowest multiple of 8\n        popcnt_bit_range(data, rhsInside, rhs) +\n        // Get the popcnt of all bits between the left and right hand sides' multiples of 8\n        popcnt_array(data, lhsInside >> 3, (rhsInside - lhsInside) >> 3)\n    );\n}\n\n/** @ignore */\nexport function popcnt_array(arr: ArrayBufferView, byteOffset?: number, byteLength?: number) {\n    let cnt = 0, pos = byteOffset! | 0;\n    const view = new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n    const len =  byteLength === void 0 ? arr.byteLength : pos + byteLength;\n    while (len - pos >= 4) {\n        cnt += popcnt_uint32(view.getUint32(pos));\n        pos += 4;\n    }\n    while (len - pos >= 2) {\n        cnt += popcnt_uint32(view.getUint16(pos));\n        pos += 2;\n    }\n    while (len - pos >= 1) {\n        cnt += popcnt_uint32(view.getUint8(pos));\n        pos += 1;\n    }\n    return cnt;\n}\n\n/** @ignore */\nexport function popcnt_uint32(uint32: number): number {\n    let i = uint32 | 0;\n    i = i - ((i >>> 1) & 0x55555555);\n    i = (i & 0x33333333) + ((i >>> 2) & 0x33333333);\n    return (((i + (i >>> 4)) & 0x0F0F0F0F) * 0x01010101) >>> 24;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Vector } from './vector';\nimport { Type, Precision, DateUnit, TimeUnit, IntervalUnit, UnionMode } from './enum';\nimport { DataType, Float, Int, Date_, Interval, Time, Timestamp, Union, } from './type';\n\nexport abstract class Visitor {\n    public visitMany(nodes: any[], ...args: any[][]) {\n        return nodes.map((node, i) => this.visit(node, ...args.map((x) => x[i])));\n    }\n    public visit(...args: any[]) {\n        return this.getVisitFn(args[0], false).apply(this, args);\n    }\n    public getVisitFn(node: any, throwIfNotFound = true) {\n        return getVisitFn(this, node, throwIfNotFound);\n    }\n    public visitNull            (_node: any, ..._args: any[]): any { return null; }\n    public visitBool            (_node: any, ..._args: any[]): any { return null; }\n    public visitInt             (_node: any, ..._args: any[]): any { return null; }\n    public visitFloat           (_node: any, ..._args: any[]): any { return null; }\n    public visitUtf8            (_node: any, ..._args: any[]): any { return null; }\n    public visitBinary          (_node: any, ..._args: any[]): any { return null; }\n    public visitFixedSizeBinary (_node: any, ..._args: any[]): any { return null; }\n    public visitDate            (_node: any, ..._args: any[]): any { return null; }\n    public visitTimestamp       (_node: any, ..._args: any[]): any { return null; }\n    public visitTime            (_node: any, ..._args: any[]): any { return null; }\n    public visitDecimal         (_node: any, ..._args: any[]): any { return null; }\n    public visitList            (_node: any, ..._args: any[]): any { return null; }\n    public visitStruct          (_node: any, ..._args: any[]): any { return null; }\n    public visitUnion           (_node: any, ..._args: any[]): any { return null; }\n    public visitDictionary      (_node: any, ..._args: any[]): any { return null; }\n    public visitInterval        (_node: any, ..._args: any[]): any { return null; }\n    public visitFixedSizeList   (_node: any, ..._args: any[]): any { return null; }\n    public visitMap             (_node: any, ..._args: any[]): any { return null; }\n}\n\n/** @ignore */\nfunction getVisitFn<T extends DataType>(visitor: Visitor, node: any, throwIfNotFound = true) {\n    let fn: any = null;\n    let dtype: T['TType'] = Type.NONE;\n    // tslint:disable\n    if      (node instanceof Data    ) { dtype = inferDType(node.type as T); }\n    else if (node instanceof Vector  ) { dtype = inferDType(node.type as T); }\n    else if (node instanceof DataType) { dtype = inferDType(node      as T); }\n    else if (typeof (dtype = node) !== 'number') { dtype = Type[node] as any as T['TType']; }\n\n    switch (dtype) {\n        case Type.Null:                 fn = visitor.visitNull; break;\n        case Type.Bool:                 fn = visitor.visitBool; break;\n        case Type.Int:                  fn = visitor.visitInt; break;\n        case Type.Int8:                 fn = visitor.visitInt8 || visitor.visitInt; break;\n        case Type.Int16:                fn = visitor.visitInt16 || visitor.visitInt; break;\n        case Type.Int32:                fn = visitor.visitInt32 || visitor.visitInt; break;\n        case Type.Int64:                fn = visitor.visitInt64 || visitor.visitInt; break;\n        case Type.Uint8:                fn = visitor.visitUint8 || visitor.visitInt; break;\n        case Type.Uint16:               fn = visitor.visitUint16 || visitor.visitInt; break;\n        case Type.Uint32:               fn = visitor.visitUint32 || visitor.visitInt; break;\n        case Type.Uint64:               fn = visitor.visitUint64 || visitor.visitInt; break;\n        case Type.Float:                fn = visitor.visitFloat; break;\n        case Type.Float16:              fn = visitor.visitFloat16 || visitor.visitFloat; break;\n        case Type.Float32:              fn = visitor.visitFloat32 || visitor.visitFloat; break;\n        case Type.Float64:              fn = visitor.visitFloat64 || visitor.visitFloat; break;\n        case Type.Utf8:                 fn = visitor.visitUtf8; break;\n        case Type.Binary:               fn = visitor.visitBinary; break;\n        case Type.FixedSizeBinary:      fn = visitor.visitFixedSizeBinary; break;\n        case Type.Date:                 fn = visitor.visitDate; break;\n        case Type.DateDay:              fn = visitor.visitDateDay || visitor.visitDate; break;\n        case Type.DateMillisecond:      fn = visitor.visitDateMillisecond || visitor.visitDate; break;\n        case Type.Timestamp:            fn = visitor.visitTimestamp; break;\n        case Type.TimestampSecond:      fn = visitor.visitTimestampSecond || visitor.visitTimestamp; break;\n        case Type.TimestampMillisecond: fn = visitor.visitTimestampMillisecond || visitor.visitTimestamp; break;\n        case Type.TimestampMicrosecond: fn = visitor.visitTimestampMicrosecond || visitor.visitTimestamp; break;\n        case Type.TimestampNanosecond:  fn = visitor.visitTimestampNanosecond || visitor.visitTimestamp; break;\n        case Type.Time:                 fn = visitor.visitTime; break;\n        case Type.TimeSecond:           fn = visitor.visitTimeSecond || visitor.visitTime; break;\n        case Type.TimeMillisecond:      fn = visitor.visitTimeMillisecond || visitor.visitTime; break;\n        case Type.TimeMicrosecond:      fn = visitor.visitTimeMicrosecond || visitor.visitTime; break;\n        case Type.TimeNanosecond:       fn = visitor.visitTimeNanosecond || visitor.visitTime; break;\n        case Type.Decimal:              fn = visitor.visitDecimal; break;\n        case Type.List:                 fn = visitor.visitList; break;\n        case Type.Struct:               fn = visitor.visitStruct; break;\n        case Type.Union:                fn = visitor.visitUnion; break;\n        case Type.DenseUnion:           fn = visitor.visitDenseUnion || visitor.visitUnion; break;\n        case Type.SparseUnion:          fn = visitor.visitSparseUnion || visitor.visitUnion; break;\n        case Type.Dictionary:           fn = visitor.visitDictionary; break;\n        case Type.Interval:             fn = visitor.visitInterval; break;\n        case Type.IntervalDayTime:      fn = visitor.visitIntervalDayTime || visitor.visitInterval; break;\n        case Type.IntervalYearMonth:    fn = visitor.visitIntervalYearMonth || visitor.visitInterval; break;\n        case Type.FixedSizeList:        fn = visitor.visitFixedSizeList; break;\n        case Type.Map:                  fn = visitor.visitMap; break;\n    }\n    if (typeof fn === 'function') return fn;\n    if (!throwIfNotFound) return () => null;\n    throw new Error(`Unrecognized type '${Type[dtype]}'`);\n}\n\n/** @ignore */\nfunction inferDType<T extends DataType>(type: T): Type {\n    switch (type.typeId) {\n        case Type.Null: return Type.Null;\n        case Type.Int:\n            const { bitWidth, isSigned } = (type as any as Int);\n            switch (bitWidth) {\n                case  8: return isSigned ? Type.Int8  : Type.Uint8 ;\n                case 16: return isSigned ? Type.Int16 : Type.Uint16;\n                case 32: return isSigned ? Type.Int32 : Type.Uint32;\n                case 64: return isSigned ? Type.Int64 : Type.Uint64;\n            }\n            return Type.Int;\n        case Type.Float:\n            switch((type as any as Float).precision) {\n                case Precision.HALF: return Type.Float16;\n                case Precision.SINGLE: return Type.Float32;\n                case Precision.DOUBLE: return Type.Float64;\n            }\n            return Type.Float;\n        case Type.Binary: return Type.Binary;\n        case Type.Utf8: return Type.Utf8;\n        case Type.Bool: return Type.Bool;\n        case Type.Decimal: return Type.Decimal;\n        case Type.Time:\n            switch ((type as any as Time).unit) {\n                case TimeUnit.SECOND: return Type.TimeSecond;\n                case TimeUnit.MILLISECOND: return Type.TimeMillisecond;\n                case TimeUnit.MICROSECOND: return Type.TimeMicrosecond;\n                case TimeUnit.NANOSECOND: return Type.TimeNanosecond;\n            }\n            return Type.Time;\n        case Type.Timestamp:\n            switch ((type as any as Timestamp).unit) {\n                case TimeUnit.SECOND: return Type.TimestampSecond;\n                case TimeUnit.MILLISECOND: return Type.TimestampMillisecond;\n                case TimeUnit.MICROSECOND: return Type.TimestampMicrosecond;\n                case TimeUnit.NANOSECOND: return Type.TimestampNanosecond;\n            }\n            return Type.Timestamp;\n        case Type.Date:\n            switch ((type as any as Date_).unit) {\n                case DateUnit.DAY: return Type.DateDay;\n                case DateUnit.MILLISECOND: return Type.DateMillisecond;\n            }\n            return Type.Date;\n        case Type.Interval:\n            switch ((type as any as Interval).unit) {\n                case IntervalUnit.DAY_TIME: return Type.IntervalDayTime;\n                case IntervalUnit.YEAR_MONTH: return Type.IntervalYearMonth;\n            }\n            return Type.Interval;\n        case Type.Map: return Type.Map;\n        case Type.List: return Type.List;\n        case Type.Struct: return Type.Struct;\n        case Type.Union:\n            switch ((type as any as Union).mode) {\n                case UnionMode.Dense: return Type.DenseUnion;\n                case UnionMode.Sparse: return Type.SparseUnion;\n            }\n            return Type.Union;\n        case Type.FixedSizeBinary: return Type.FixedSizeBinary;\n        case Type.FixedSizeList: return Type.FixedSizeList;\n        case Type.Dictionary: return Type.Dictionary;\n    }\n    throw new Error(`Unrecognized type '${Type[type.typeId]}'`);\n}\n\nexport interface Visitor {\n    visitNull                  (node: any, ...args: any[]): any;\n    visitBool                  (node: any, ...args: any[]): any;\n    visitInt                   (node: any, ...args: any[]): any;\n    visitInt8?                 (node: any, ...args: any[]): any;\n    visitInt16?                (node: any, ...args: any[]): any;\n    visitInt32?                (node: any, ...args: any[]): any;\n    visitInt64?                (node: any, ...args: any[]): any;\n    visitUint8?                (node: any, ...args: any[]): any;\n    visitUint16?               (node: any, ...args: any[]): any;\n    visitUint32?               (node: any, ...args: any[]): any;\n    visitUint64?               (node: any, ...args: any[]): any;\n    visitFloat                 (node: any, ...args: any[]): any;\n    visitFloat16?              (node: any, ...args: any[]): any;\n    visitFloat32?              (node: any, ...args: any[]): any;\n    visitFloat64?              (node: any, ...args: any[]): any;\n    visitUtf8                  (node: any, ...args: any[]): any;\n    visitBinary                (node: any, ...args: any[]): any;\n    visitFixedSizeBinary       (node: any, ...args: any[]): any;\n    visitDate                  (node: any, ...args: any[]): any;\n    visitDateDay?              (node: any, ...args: any[]): any;\n    visitDateMillisecond?      (node: any, ...args: any[]): any;\n    visitTimestamp             (node: any, ...args: any[]): any;\n    visitTimestampSecond?      (node: any, ...args: any[]): any;\n    visitTimestampMillisecond? (node: any, ...args: any[]): any;\n    visitTimestampMicrosecond? (node: any, ...args: any[]): any;\n    visitTimestampNanosecond?  (node: any, ...args: any[]): any;\n    visitTime                  (node: any, ...args: any[]): any;\n    visitTimeSecond?           (node: any, ...args: any[]): any;\n    visitTimeMillisecond?      (node: any, ...args: any[]): any;\n    visitTimeMicrosecond?      (node: any, ...args: any[]): any;\n    visitTimeNanosecond?       (node: any, ...args: any[]): any;\n    visitDecimal               (node: any, ...args: any[]): any;\n    visitList                  (node: any, ...args: any[]): any;\n    visitStruct                (node: any, ...args: any[]): any;\n    visitUnion                 (node: any, ...args: any[]): any;\n    visitDenseUnion?           (node: any, ...args: any[]): any;\n    visitSparseUnion?          (node: any, ...args: any[]): any;\n    visitDictionary            (node: any, ...args: any[]): any;\n    visitInterval              (node: any, ...args: any[]): any;\n    visitIntervalDayTime?      (node: any, ...args: any[]): any;\n    visitIntervalYearMonth?    (node: any, ...args: any[]): any;\n    visitFixedSizeList         (node: any, ...args: any[]): any;\n    visitMap                   (node: any, ...args: any[]): any;\n}\n\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\n(Visitor.prototype as any).visitInt8 = null;\n(Visitor.prototype as any).visitInt16 = null;\n(Visitor.prototype as any).visitInt32 = null;\n(Visitor.prototype as any).visitInt64 = null;\n(Visitor.prototype as any).visitUint8 = null;\n(Visitor.prototype as any).visitUint16 = null;\n(Visitor.prototype as any).visitUint32 = null;\n(Visitor.prototype as any).visitUint64 = null;\n(Visitor.prototype as any).visitFloat16 = null;\n(Visitor.prototype as any).visitFloat32 = null;\n(Visitor.prototype as any).visitFloat64 = null;\n(Visitor.prototype as any).visitDateDay = null;\n(Visitor.prototype as any).visitDateMillisecond = null;\n(Visitor.prototype as any).visitTimestampSecond = null;\n(Visitor.prototype as any).visitTimestampMillisecond = null;\n(Visitor.prototype as any).visitTimestampMicrosecond = null;\n(Visitor.prototype as any).visitTimestampNanosecond = null;\n(Visitor.prototype as any).visitTimeSecond = null;\n(Visitor.prototype as any).visitTimeMillisecond = null;\n(Visitor.prototype as any).visitTimeMicrosecond = null;\n(Visitor.prototype as any).visitTimeNanosecond = null;\n(Visitor.prototype as any).visitDenseUnion = null;\n(Visitor.prototype as any).visitSparseUnion = null;\n(Visitor.prototype as any).visitIntervalDayTime = null;\n(Visitor.prototype as any).visitIntervalYearMonth = null;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { Schema, Field } from '../schema';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface TypeComparator extends Visitor {\n    visit<T extends DataType>(type: T, other?: DataType | null): other is T;\n    visitMany<T extends DataType>(nodes: T[], others?: DataType[] | null): boolean[];\n    getVisitFn<T extends DataType>(node: VectorType<T> |  Data<T> | T): (other?: DataType | null) => other is T;\n    visitNull                 <T extends Null>                 (type: T, other?: DataType | null): other is T;\n    visitBool                 <T extends Bool>                 (type: T, other?: DataType | null): other is T;\n    visitInt                  <T extends Int>                  (type: T, other?: DataType | null): other is T;\n    visitInt8                 <T extends Int8>                 (type: T, other?: DataType | null): other is T;\n    visitInt16                <T extends Int16>                (type: T, other?: DataType | null): other is T;\n    visitInt32                <T extends Int32>                (type: T, other?: DataType | null): other is T;\n    visitInt64                <T extends Int64>                (type: T, other?: DataType | null): other is T;\n    visitUint8                <T extends Uint8>                (type: T, other?: DataType | null): other is T;\n    visitUint16               <T extends Uint16>               (type: T, other?: DataType | null): other is T;\n    visitUint32               <T extends Uint32>               (type: T, other?: DataType | null): other is T;\n    visitUint64               <T extends Uint64>               (type: T, other?: DataType | null): other is T;\n    visitFloat                <T extends Float>                (type: T, other?: DataType | null): other is T;\n    visitFloat16              <T extends Float16>              (type: T, other?: DataType | null): other is T;\n    visitFloat32              <T extends Float32>              (type: T, other?: DataType | null): other is T;\n    visitFloat64              <T extends Float64>              (type: T, other?: DataType | null): other is T;\n    visitUtf8                 <T extends Utf8>                 (type: T, other?: DataType | null): other is T;\n    visitBinary               <T extends Binary>               (type: T, other?: DataType | null): other is T;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>      (type: T, other?: DataType | null): other is T;\n    visitDate                 <T extends Date_>                (type: T, other?: DataType | null): other is T;\n    visitDateDay              <T extends DateDay>              (type: T, other?: DataType | null): other is T;\n    visitDateMillisecond      <T extends DateMillisecond>      (type: T, other?: DataType | null): other is T;\n    visitTimestamp            <T extends Timestamp>            (type: T, other?: DataType | null): other is T;\n    visitTimestampSecond      <T extends TimestampSecond>      (type: T, other?: DataType | null): other is T;\n    visitTimestampMillisecond <T extends TimestampMillisecond> (type: T, other?: DataType | null): other is T;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond> (type: T, other?: DataType | null): other is T;\n    visitTimestampNanosecond  <T extends TimestampNanosecond>  (type: T, other?: DataType | null): other is T;\n    visitTime                 <T extends Time>                 (type: T, other?: DataType | null): other is T;\n    visitTimeSecond           <T extends TimeSecond>           (type: T, other?: DataType | null): other is T;\n    visitTimeMillisecond      <T extends TimeMillisecond>      (type: T, other?: DataType | null): other is T;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>      (type: T, other?: DataType | null): other is T;\n    visitTimeNanosecond       <T extends TimeNanosecond>       (type: T, other?: DataType | null): other is T;\n    visitDecimal              <T extends Decimal>              (type: T, other?: DataType | null): other is T;\n    visitList                 <T extends List>                 (type: T, other?: DataType | null): other is T;\n    visitStruct               <T extends Struct>               (type: T, other?: DataType | null): other is T;\n    visitUnion                <T extends Union>                (type: T, other?: DataType | null): other is T;\n    visitDenseUnion           <T extends DenseUnion>           (type: T, other?: DataType | null): other is T;\n    visitSparseUnion          <T extends SparseUnion>          (type: T, other?: DataType | null): other is T;\n    visitDictionary           <T extends Dictionary>           (type: T, other?: DataType | null): other is T;\n    visitInterval             <T extends Interval>             (type: T, other?: DataType | null): other is T;\n    visitIntervalDayTime      <T extends IntervalDayTime>      (type: T, other?: DataType | null): other is T;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>    (type: T, other?: DataType | null): other is T;\n    visitFixedSizeList        <T extends FixedSizeList>        (type: T, other?: DataType | null): other is T;\n    visitMap                  <T extends Map_>                 (type: T, other?: DataType | null): other is T;\n}\n\n/** @ignore */\nexport class TypeComparator extends Visitor {\n    compareSchemas<T extends { [key: string]: DataType }>(schema: Schema<T>, other?: Schema | null): other is Schema<T> {\n        return (schema === other) || (\n            other instanceof schema.constructor &&\n            instance.compareFields(schema.fields, other.fields)\n        );\n    }\n    compareFields<T extends { [key: string]: DataType }>(fields: Field<T[keyof T]>[], others?: Field[] | null): others is Field<T[keyof T]>[] {\n        return (fields === others) || (\n            Array.isArray(fields) &&\n            Array.isArray(others) &&\n            fields.length === others.length &&\n            fields.every((f, i) => instance.compareField(f, others[i]))\n        );\n    }\n    compareField<T extends DataType = any>(field: Field<T>, other?: Field | null): other is Field<T> {\n        return (field === other) || (\n            other instanceof field.constructor &&\n            field.name === other.name &&\n            field.nullable === other.nullable &&\n            instance.visit(field.type, other.type)\n        );\n    }\n}\n\nfunction compareConstructor<T extends DataType>(type: T, other?: DataType | null): other is T {\n    return other instanceof type.constructor;\n}\n\nfunction compareAny<T extends DataType>(type: T, other?: DataType | null): other is T {\n    return (type === other) || compareConstructor(type, other);\n}\n\nfunction compareInt<T extends Int>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.bitWidth === other.bitWidth &&\n        type.isSigned === other.isSigned\n    );\n}\n\nfunction compareFloat<T extends Float>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.precision === other.precision\n    );\n}\n\nfunction compareFixedSizeBinary<T extends FixedSizeBinary>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.byteWidth === other.byteWidth\n    );\n}\n\nfunction compareDate<T extends Date_>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit\n    );\n}\n\nfunction compareTimestamp<T extends Timestamp>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.timezone === other.timezone\n    );\n}\n\nfunction compareTime<T extends Time>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.bitWidth === other.bitWidth\n    );\n}\n\nfunction compareList<T extends List>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareStruct<T extends Struct>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareUnion<T extends Union>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.mode === other.mode &&\n        type.typeIds.every((x, i) => x === other.typeIds[i]) &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareDictionary<T extends Dictionary>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.id === other.id &&\n        type.isOrdered === other.isOrdered &&\n        instance.visit(<any> type.indices, other.indices) &&\n        instance.visit(type.dictionary, other.dictionary)\n    );\n}\n\nfunction compareInterval<T extends Interval>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit\n    );\n}\n\nfunction compareFixedSizeList<T extends FixedSizeList>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.listSize === other.listSize &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareMap<T extends Map_>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.keysSorted === other.keysSorted &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nTypeComparator.prototype.visitNull                 =             compareAny;\nTypeComparator.prototype.visitBool                 =             compareAny;\nTypeComparator.prototype.visitInt                  =             compareInt;\nTypeComparator.prototype.visitInt8                 =             compareInt;\nTypeComparator.prototype.visitInt16                =             compareInt;\nTypeComparator.prototype.visitInt32                =             compareInt;\nTypeComparator.prototype.visitInt64                =             compareInt;\nTypeComparator.prototype.visitUint8                =             compareInt;\nTypeComparator.prototype.visitUint16               =             compareInt;\nTypeComparator.prototype.visitUint32               =             compareInt;\nTypeComparator.prototype.visitUint64               =             compareInt;\nTypeComparator.prototype.visitFloat                =           compareFloat;\nTypeComparator.prototype.visitFloat16              =           compareFloat;\nTypeComparator.prototype.visitFloat32              =           compareFloat;\nTypeComparator.prototype.visitFloat64              =           compareFloat;\nTypeComparator.prototype.visitUtf8                 =             compareAny;\nTypeComparator.prototype.visitBinary               =             compareAny;\nTypeComparator.prototype.visitFixedSizeBinary      = compareFixedSizeBinary;\nTypeComparator.prototype.visitDate                 =            compareDate;\nTypeComparator.prototype.visitDateDay              =            compareDate;\nTypeComparator.prototype.visitDateMillisecond      =            compareDate;\nTypeComparator.prototype.visitTimestamp            =       compareTimestamp;\nTypeComparator.prototype.visitTimestampSecond      =       compareTimestamp;\nTypeComparator.prototype.visitTimestampMillisecond =       compareTimestamp;\nTypeComparator.prototype.visitTimestampMicrosecond =       compareTimestamp;\nTypeComparator.prototype.visitTimestampNanosecond  =       compareTimestamp;\nTypeComparator.prototype.visitTime                 =            compareTime;\nTypeComparator.prototype.visitTimeSecond           =            compareTime;\nTypeComparator.prototype.visitTimeMillisecond      =            compareTime;\nTypeComparator.prototype.visitTimeMicrosecond      =            compareTime;\nTypeComparator.prototype.visitTimeNanosecond       =            compareTime;\nTypeComparator.prototype.visitDecimal              =             compareAny;\nTypeComparator.prototype.visitList                 =            compareList;\nTypeComparator.prototype.visitStruct               =          compareStruct;\nTypeComparator.prototype.visitUnion                =           compareUnion;\nTypeComparator.prototype.visitDenseUnion           =           compareUnion;\nTypeComparator.prototype.visitSparseUnion          =           compareUnion;\nTypeComparator.prototype.visitDictionary           =      compareDictionary;\nTypeComparator.prototype.visitInterval             =        compareInterval;\nTypeComparator.prototype.visitIntervalDayTime      =        compareInterval;\nTypeComparator.prototype.visitIntervalYearMonth    =        compareInterval;\nTypeComparator.prototype.visitFixedSizeList        =   compareFixedSizeList;\nTypeComparator.prototype.visitMap                  =             compareMap;\n\n/** @ignore */\nexport const instance = new TypeComparator();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/* tslint:disable:class-name */\n\nimport { Field } from './schema';\nimport { flatbuffers } from 'flatbuffers';\nimport { TypedArrayConstructor } from './interfaces';\nimport { VectorType as V, TypeToDataType } from './interfaces';\nimport { instance as comparer } from './visitor/typecomparator';\n\nimport Long = flatbuffers.Long;\nimport {\n    Type,\n    Precision, UnionMode,\n    DateUnit, TimeUnit, IntervalUnit\n} from './enum';\n\n/** @ignore */\nexport type TimeBitWidth = 32 | 64;\n/** @ignore */\nexport type IntBitWidth = 8 | 16 | 32 | 64;\n/** @ignore */\nexport type IsSigned = { 'true': true; 'false': false };\n/** @ignore */\nexport type RowLike<T extends { [key: string]: DataType }> =\n      ( Iterable<[string, T[keyof T]['TValue'] | null]> )\n    & { [P in keyof T]: T[P]['TValue'] | null }\n    & { get<K extends keyof T>(key: K): T[K]['TValue'] | null; }\n    & { set<K extends keyof T>(key: K, val: T[K]['TValue'] | null): void; }\n    ;\n\n/** @ignore */\nexport type MapLike<K extends DataType = any, V extends DataType = any> =\n      { [P in K['TValue']]: V['TValue'] | null }\n    & ( Map<K['TValue'], V['TValue'] | null> )\n    ;\n\nexport interface DataType<TType extends Type = Type, TChildren extends { [key: string]: DataType } = any> {\n    readonly TType: TType;\n    readonly TArray: any;\n    readonly TValue: any;\n    readonly ArrayType: any;\n    readonly children: Field<TChildren[keyof TChildren]>[];\n}\n\n/**\n * An abstract base class for classes that encapsulate metadata about each of\n * the logical types that Arrow can represent.\n */\nexport abstract class DataType<TType extends Type = Type, TChildren extends { [key: string]: DataType } = any> {\n\n    // @ts-ignore\n    public [Symbol.toStringTag]: string;\n\n    /** @nocollapse */ static            isNull (x: any): x is Null            { return x && x.typeId === Type.Null;            }\n    /** @nocollapse */ static             isInt (x: any): x is Int_            { return x && x.typeId === Type.Int;             }\n    /** @nocollapse */ static           isFloat (x: any): x is Float           { return x && x.typeId === Type.Float;           }\n    /** @nocollapse */ static          isBinary (x: any): x is Binary          { return x && x.typeId === Type.Binary;          }\n    /** @nocollapse */ static            isUtf8 (x: any): x is Utf8            { return x && x.typeId === Type.Utf8;            }\n    /** @nocollapse */ static            isBool (x: any): x is Bool            { return x && x.typeId === Type.Bool;            }\n    /** @nocollapse */ static         isDecimal (x: any): x is Decimal         { return x && x.typeId === Type.Decimal;         }\n    /** @nocollapse */ static            isDate (x: any): x is Date_           { return x && x.typeId === Type.Date;            }\n    /** @nocollapse */ static            isTime (x: any): x is Time_           { return x && x.typeId === Type.Time;            }\n    /** @nocollapse */ static       isTimestamp (x: any): x is Timestamp_      { return x && x.typeId === Type.Timestamp;       }\n    /** @nocollapse */ static        isInterval (x: any): x is Interval_       { return x && x.typeId === Type.Interval;        }\n    /** @nocollapse */ static            isList (x: any): x is List            { return x && x.typeId === Type.List;            }\n    /** @nocollapse */ static          isStruct (x: any): x is Struct          { return x && x.typeId === Type.Struct;          }\n    /** @nocollapse */ static           isUnion (x: any): x is Union_          { return x && x.typeId === Type.Union;           }\n    /** @nocollapse */ static isFixedSizeBinary (x: any): x is FixedSizeBinary { return x && x.typeId === Type.FixedSizeBinary; }\n    /** @nocollapse */ static   isFixedSizeList (x: any): x is FixedSizeList   { return x && x.typeId === Type.FixedSizeList;   }\n    /** @nocollapse */ static             isMap (x: any): x is Map_            { return x && x.typeId === Type.Map;             }\n    /** @nocollapse */ static      isDictionary (x: any): x is Dictionary      { return x && x.typeId === Type.Dictionary;      }\n\n    public get typeId(): TType { return <any> Type.NONE; }\n    public compareTo(other: DataType): other is TypeToDataType<TType> {\n        return comparer.visit(this, other);\n    }\n\n    protected static [Symbol.toStringTag] = ((proto: DataType) => {\n        (<any> proto).children = null;\n        (<any> proto).ArrayType = Array;\n        return proto[Symbol.toStringTag] = 'DataType';\n    })(DataType.prototype);\n}\n\n/** @ignore */\nexport interface Null extends DataType<Type.Null> { TArray: void; TValue: null; }\n/** @ignore */\nexport class Null extends DataType<Type.Null> {\n    public toString() { return `Null`; }\n    public get typeId() { return Type.Null as Type.Null; }\n    protected static [Symbol.toStringTag] = ((proto: Null) => {\n        return proto[Symbol.toStringTag] = 'Null';\n    })(Null.prototype);\n}\n\n/** @ignore */\ntype Ints = Type.Int | Type.Int8 | Type.Int16 | Type.Int32 | Type.Int64 | Type.Uint8 | Type.Uint16 | Type.Uint32 | Type.Uint64;\n/** @ignore */\ntype IType = {\n    [Type.Int   ]: { bitWidth: IntBitWidth; isSigned: true | false; TArray: IntArray;    TValue: number | bigint | Int32Array | Uint32Array; };\n    [Type.Int8  ]: { bitWidth:           8; isSigned: true;         TArray: Int8Array;   TValue: number; };\n    [Type.Int16 ]: { bitWidth:          16; isSigned: true;         TArray: Int16Array;  TValue: number; };\n    [Type.Int32 ]: { bitWidth:          32; isSigned: true;         TArray: Int32Array;  TValue: number; };\n    [Type.Int64 ]: { bitWidth:          64; isSigned: true;         TArray: Int32Array;  TValue: bigint | Int32Array | Uint32Array; };\n    [Type.Uint8 ]: { bitWidth:           8; isSigned: false;        TArray: Uint8Array;  TValue: number; };\n    [Type.Uint16]: { bitWidth:          16; isSigned: false;        TArray: Uint16Array; TValue: number; };\n    [Type.Uint32]: { bitWidth:          32; isSigned: false;        TArray: Uint32Array; TValue: number; };\n    [Type.Uint64]: { bitWidth:          64; isSigned: false;        TArray: Uint32Array; TValue: bigint | Int32Array | Uint32Array; };\n};\n\n/** @ignore */\ninterface Int_<T extends Ints = Ints> extends DataType<T> { TArray: IType[T]['TArray']; TValue: IType[T]['TValue']; }\n/** @ignore */\nclass Int_<T extends Ints = Ints> extends DataType<T> {\n    constructor(public readonly isSigned: IType[T]['isSigned'],\n                public readonly bitWidth: IType[T]['bitWidth']) {\n        super();\n    }\n    public get typeId() { return Type.Int as T; }\n    public get ArrayType(): TypedArrayConstructor<IType[T]['TArray']> {\n        switch (this.bitWidth) {\n            case  8: return this.isSigned ?  Int8Array :  Uint8Array;\n            case 16: return this.isSigned ? Int16Array : Uint16Array;\n            case 32: return this.isSigned ? Int32Array : Uint32Array;\n            case 64: return this.isSigned ? Int32Array : Uint32Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    public toString() { return `${this.isSigned ? `I` : `Ui`}nt${this.bitWidth}`; }\n    protected static [Symbol.toStringTag] = ((proto: Int_) => {\n        (<any> proto).isSigned = null;\n        (<any> proto).bitWidth = null;\n        return proto[Symbol.toStringTag] = 'Int';\n    })(Int_.prototype);\n}\n\nexport { Int_ as Int };\n\n/** @ignore */\nexport class Int8 extends Int_<Type.Int8> { constructor() { super(true, 8); } }\n/** @ignore */\nexport class Int16 extends Int_<Type.Int16> { constructor() { super(true, 16); } }\n/** @ignore */\nexport class Int32 extends Int_<Type.Int32> { constructor() { super(true, 32); } }\n/** @ignore */\nexport class Int64 extends Int_<Type.Int64> { constructor() { super(true, 64); } }\n/** @ignore */\nexport class Uint8 extends Int_<Type.Uint8> { constructor() { super(false, 8); } }\n/** @ignore */\nexport class Uint16 extends Int_<Type.Uint16> { constructor() { super(false, 16); } }\n/** @ignore */\nexport class Uint32 extends Int_<Type.Uint32> { constructor() { super(false, 32); } }\n/** @ignore */\nexport class Uint64 extends Int_<Type.Uint64> { constructor() { super(false, 64); } }\n\nObject.defineProperty(Int8.prototype, 'ArrayType', { value: Int8Array });\nObject.defineProperty(Int16.prototype, 'ArrayType', { value: Int16Array });\nObject.defineProperty(Int32.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Int64.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Uint8.prototype, 'ArrayType', { value: Uint8Array });\nObject.defineProperty(Uint16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Uint32.prototype, 'ArrayType', { value: Uint32Array });\nObject.defineProperty(Uint64.prototype, 'ArrayType', { value: Uint32Array });\n\n/** @ignore */\ntype Floats = Type.Float | Type.Float16 | Type.Float32 | Type.Float64;\n/** @ignore */\ntype FType = {\n    [Type.Float  ]: { precision: Precision;        TArray: FloatArray;    TValue: number; };\n    [Type.Float16]: { precision: Precision.HALF;   TArray: Uint16Array;   TValue: number; };\n    [Type.Float32]: { precision: Precision.SINGLE; TArray: Float32Array;  TValue: number; };\n    [Type.Float64]: { precision: Precision.DOUBLE; TArray: Float64Array;  TValue: number; };\n};\n\n/** @ignore */\nexport interface Float<T extends Floats = Floats> extends DataType<T> { TArray: FType[T]['TArray']; TValue: number; }\n/** @ignore */\nexport class Float<T extends Floats = Floats> extends DataType<T> {\n    constructor(public readonly precision: Precision) {\n        super();\n    }\n    public get typeId() { return Type.Float as T; }\n    public get ArrayType(): TypedArrayConstructor<FType[T]['TArray']> {\n        switch (this.precision) {\n            case Precision.HALF: return Uint16Array;\n            case Precision.SINGLE: return Float32Array;\n            case Precision.DOUBLE: return Float64Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    public toString() { return `Float${(this.precision << 5) || 16}`; }\n    protected static [Symbol.toStringTag] = ((proto: Float) => {\n        (<any> proto).precision = null;\n        return proto[Symbol.toStringTag] = 'Float';\n    })(Float.prototype);\n}\n\n/** @ignore */\nexport class Float16 extends Float<Type.Float16> { constructor() { super(Precision.HALF); } }\n/** @ignore */\nexport class Float32 extends Float<Type.Float32> { constructor() { super(Precision.SINGLE); } }\n/** @ignore */\nexport class Float64 extends Float<Type.Float64> { constructor() { super(Precision.DOUBLE); } }\n\nObject.defineProperty(Float16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Float32.prototype, 'ArrayType', { value: Float32Array });\nObject.defineProperty(Float64.prototype, 'ArrayType', { value: Float64Array });\n\n/** @ignore */\nexport interface Binary extends DataType<Type.Binary> { TArray: Uint8Array; TValue: Uint8Array; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Binary extends DataType<Type.Binary> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Binary as Type.Binary; }\n    public toString() { return `Binary`; }\n    protected static [Symbol.toStringTag] = ((proto: Binary) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Binary';\n    })(Binary.prototype);\n}\n\n/** @ignore */\nexport interface Utf8 extends DataType<Type.Utf8> { TArray: Uint8Array; TValue: string; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Utf8 extends DataType<Type.Utf8> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Utf8 as Type.Utf8; }\n    public toString() { return `Utf8`; }\n    protected static [Symbol.toStringTag] = ((proto: Utf8) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Utf8';\n    })(Utf8.prototype);\n}\n\n/** @ignore */\nexport interface Bool extends DataType<Type.Bool> { TArray: Uint8Array; TValue: boolean; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Bool extends DataType<Type.Bool> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Bool as Type.Bool; }\n    public toString() { return `Bool`; }\n    protected static [Symbol.toStringTag] = ((proto: Bool) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Bool';\n    })(Bool.prototype);\n}\n\n/** @ignore */\nexport interface Decimal extends DataType<Type.Decimal> { TArray: Uint32Array; TValue: Uint32Array; ArrayType: TypedArrayConstructor<Uint32Array>; }\n/** @ignore */\nexport class Decimal extends DataType<Type.Decimal> {\n    constructor(public readonly scale: number,\n                public readonly precision: number) {\n        super();\n    }\n    public get typeId() { return Type.Decimal as Type.Decimal; }\n    public toString() { return `Decimal[${this.precision}e${this.scale > 0 ? `+` : ``}${this.scale}]`; }\n    protected static [Symbol.toStringTag] = ((proto: Decimal) => {\n        (<any> proto).scale = null;\n        (<any> proto).precision = null;\n        (<any> proto).ArrayType = Uint32Array;\n        return proto[Symbol.toStringTag] = 'Decimal';\n    })(Decimal.prototype);\n}\n\n/** @ignore */\nexport type Dates = Type.Date | Type.DateDay | Type.DateMillisecond;\n/** @ignore */\nexport interface Date_<T extends Dates = Dates> extends DataType<T> { TArray: Int32Array; TValue: Date; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nexport class Date_<T extends Dates = Dates> extends DataType<T> {\n    constructor(public readonly unit: DateUnit) {\n        super();\n    }\n    public get typeId() { return Type.Date as T; }\n    public toString() { return `Date${(this.unit + 1) * 32}<${DateUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Date_) => {\n        (<any> proto).unit = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Date';\n    })(Date_.prototype);\n}\n\n/** @ignore */\nexport class DateDay extends Date_<Type.DateDay> { constructor() { super(DateUnit.DAY); } }\n/** @ignore */\nexport class DateMillisecond extends Date_<Type.DateMillisecond> { constructor() { super(DateUnit.MILLISECOND); } }\n\n/** @ignore */\ntype Times = Type.Time | Type.TimeSecond | Type.TimeMillisecond | Type.TimeMicrosecond | Type.TimeNanosecond;\n/** @ignore */\ntype TimesType = {\n    [Type.Time           ]: { unit: TimeUnit;             TValue: number | Int32Array };\n    [Type.TimeSecond     ]: { unit: TimeUnit.SECOND;      TValue: number;             };\n    [Type.TimeMillisecond]: { unit: TimeUnit.MILLISECOND; TValue: number;             };\n    [Type.TimeMicrosecond]: { unit: TimeUnit.MICROSECOND; TValue: Int32Array;         };\n    [Type.TimeNanosecond ]: { unit: TimeUnit.NANOSECOND;  TValue: Int32Array;         };\n};\n\n/** @ignore */\ninterface Time_<T extends Times = Times> extends DataType<T> { TArray: Int32Array; TValue: TimesType[T]['TValue']; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Time_<T extends Times = Times> extends DataType<T> {\n    constructor(public readonly unit: TimesType[T]['unit'],\n                public readonly bitWidth: TimeBitWidth) {\n        super();\n    }\n    public get typeId() { return Type.Time as T; }\n    public toString() { return `Time${this.bitWidth}<${TimeUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Time_) => {\n        (<any> proto).unit = null;\n        (<any> proto).bitWidth = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Time';\n    })(Time_.prototype);\n}\n\nexport { Time_ as Time };\n\n/** @ignore */\nexport class TimeSecond extends Time_<Type.TimeSecond> { constructor() { super(TimeUnit.SECOND, 32); } }\n/** @ignore */\nexport class TimeMillisecond extends Time_<Type.TimeMillisecond> { constructor() { super(TimeUnit.MILLISECOND, 32); } }\n/** @ignore */\nexport class TimeMicrosecond extends Time_<Type.TimeMicrosecond> { constructor() { super(TimeUnit.MICROSECOND, 64); } }\n/** @ignore */\nexport class TimeNanosecond extends Time_<Type.TimeNanosecond> { constructor() { super(TimeUnit.NANOSECOND, 64); } }\n\n/** @ignore */\ntype Timestamps = Type.Timestamp | Type.TimestampSecond | Type.TimestampMillisecond | Type.TimestampMicrosecond | Type.TimestampNanosecond;\n/** @ignore */\ninterface Timestamp_<T extends Timestamps = Timestamps> extends DataType<T> { TArray: Int32Array; TValue: number; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Timestamp_<T extends Timestamps = Timestamps> extends DataType<T> {\n    constructor(public readonly unit: TimeUnit,\n                public readonly timezone?: string | null) {\n        super();\n    }\n    public get typeId() { return Type.Timestamp as T; }\n    public toString() { return `Timestamp<${TimeUnit[this.unit]}${this.timezone ? `, ${this.timezone}` : ``}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Timestamp_) => {\n        (<any> proto).unit = null;\n        (<any> proto).timezone = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Timestamp';\n    })(Timestamp_.prototype);\n}\n\nexport { Timestamp_ as Timestamp };\n\n/** @ignore */\nexport class TimestampSecond extends Timestamp_<Type.TimestampSecond> { constructor(timezone?: string | null) { super(TimeUnit.SECOND, timezone); } }\n/** @ignore */\nexport class TimestampMillisecond extends Timestamp_<Type.TimestampMillisecond> { constructor(timezone?: string | null) { super(TimeUnit.MILLISECOND, timezone); } }\n/** @ignore */\nexport class TimestampMicrosecond extends Timestamp_<Type.TimestampMicrosecond> { constructor(timezone?: string | null) { super(TimeUnit.MICROSECOND, timezone); } }\n/** @ignore */\nexport class TimestampNanosecond extends Timestamp_<Type.TimestampNanosecond> { constructor(timezone?: string | null) { super(TimeUnit.NANOSECOND, timezone); } }\n\n/** @ignore */\ntype Intervals = Type.Interval | Type.IntervalDayTime | Type.IntervalYearMonth;\n/** @ignore */\ninterface Interval_<T extends Intervals = Intervals> extends DataType<T> { TArray: Int32Array; TValue: Int32Array; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Interval_<T extends Intervals = Intervals> extends DataType<T> {\n    constructor(public readonly unit: IntervalUnit) {\n        super();\n    }\n    public get typeId() { return Type.Interval as T; }\n    public toString() { return `Interval<${IntervalUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Interval_) => {\n        (<any> proto).unit = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Interval';\n    })(Interval_.prototype);\n}\n\nexport { Interval_ as Interval };\n\n/** @ignore */\nexport class IntervalDayTime extends Interval_<Type.IntervalDayTime> { constructor() { super(IntervalUnit.DAY_TIME); } }\n/** @ignore */\nexport class IntervalYearMonth extends Interval_<Type.IntervalYearMonth> { constructor() { super(IntervalUnit.YEAR_MONTH); } }\n\n/** @ignore */\nexport interface List<T extends DataType = any> extends DataType<Type.List, { [0]: T }>  { TArray: IterableArrayLike<T>; TValue: V<T>; }\n/** @ignore */\nexport class List<T extends DataType = any> extends DataType<Type.List, { [0]: T }> {\n    constructor(child: Field<T>) {\n        super();\n        this.children = [child];\n    }\n    public readonly children: Field<T>[];\n    public get typeId() { return Type.List as Type.List; }\n    public toString() { return `List<${this.valueType}>`; }\n    public get valueType(): T { return this.children[0].type as T; }\n    public get valueField(): Field<T> { return this.children[0] as Field<T>; }\n    public get ArrayType(): T['ArrayType'] { return this.valueType.ArrayType; }\n    protected static [Symbol.toStringTag] = ((proto: List) => {\n        (<any> proto).children = null;\n        return proto[Symbol.toStringTag] = 'List';\n    })(List.prototype);\n}\n\n/** @ignore */\nexport interface Struct<T extends { [key: string]: DataType } = any> extends DataType<Type.Struct> { TArray: IterableArrayLike<RowLike<T>>; TValue: RowLike<T>; dataTypes: T; }\n/** @ignore */\nexport class Struct<T extends { [key: string]: DataType } = any> extends DataType<Type.Struct, T> {\n    public readonly children: Field<T[keyof T]>[];\n    constructor(children: Field<T[keyof T]>[]) {\n        super();\n        this.children = children;\n    }\n    public get typeId() { return Type.Struct as Type.Struct; }\n    public toString() { return `Struct<{${this.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Struct) => {\n        (<any> proto).children = null;\n        return proto[Symbol.toStringTag] = 'Struct';\n    })(Struct.prototype);\n}\n\n/** @ignore */\ntype Unions = Type.Union | Type.DenseUnion | Type.SparseUnion;\n/** @ignore */\ninterface Union_<T extends Unions = Unions> extends DataType<T> { TArray: Int8Array; TValue: any; ArrayType: TypedArrayConstructor<Int8Array>; }\n/** @ignore */\nclass Union_<T extends Unions = Unions> extends DataType<T> {\n    public readonly mode: UnionMode;\n    public readonly typeIds: Int32Array;\n    public readonly children: Field<any>[];\n    public readonly typeIdToChildIndex: { [key: number]: number };\n    constructor(mode: UnionMode,\n                typeIds: number[] | Int32Array,\n                children: Field<any>[]) {\n        super();\n        this.mode = mode;\n        this.children = children;\n        this.typeIds = typeIds = Int32Array.from(typeIds);\n        this.typeIdToChildIndex = typeIds.reduce((typeIdToChildIndex, typeId, idx) => {\n            return (typeIdToChildIndex[typeId] = idx) && typeIdToChildIndex || typeIdToChildIndex;\n        }, Object.create(null) as { [key: number]: number });\n    }\n    public get typeId() { return Type.Union as T; }\n    public toString() { return `${this[Symbol.toStringTag]}<${\n        this.children.map((x) => `${x.type}`).join(` | `)\n    }>`; }\n    protected static [Symbol.toStringTag] = ((proto: Union_) => {\n        (<any> proto).mode = null;\n        (<any> proto).typeIds = null;\n        (<any> proto).children = null;\n        (<any> proto).typeIdToChildIndex = null;\n        (<any> proto).ArrayType = Int8Array;\n        return proto[Symbol.toStringTag] = 'Union';\n    })(Union_.prototype);\n}\n\nexport { Union_ as Union };\n\n/** @ignore */\nexport class DenseUnion extends Union_<Type.DenseUnion> {\n    constructor(typeIds: number[] | Int32Array, children: Field[]) {\n        super(UnionMode.Dense, typeIds, children);\n    }\n}\n\n/** @ignore */\nexport class SparseUnion extends Union_<Type.SparseUnion> {\n    constructor(typeIds: number[] | Int32Array, children: Field[]) {\n        super(UnionMode.Sparse, typeIds, children);\n    }\n}\n\n/** @ignore */\nexport interface FixedSizeBinary extends DataType<Type.FixedSizeBinary> { TArray: Uint8Array; TValue: Uint8Array; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class FixedSizeBinary extends DataType<Type.FixedSizeBinary> {\n    constructor(public readonly byteWidth: number) {\n        super();\n    }\n    public get typeId() { return Type.FixedSizeBinary as Type.FixedSizeBinary; }\n    public toString() { return `FixedSizeBinary[${this.byteWidth}]`; }\n    protected static [Symbol.toStringTag] = ((proto: FixedSizeBinary) => {\n        (<any> proto).byteWidth = null;\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'FixedSizeBinary';\n    })(FixedSizeBinary.prototype);\n}\n\n/** @ignore */\nexport interface FixedSizeList<T extends DataType = any> extends DataType<Type.FixedSizeList> { TArray: IterableArrayLike<T['TArray']>; TValue: V<T>; }\n/** @ignore */\nexport class FixedSizeList<T extends DataType = any> extends DataType<Type.FixedSizeList, { [0]: T }> {\n    public readonly children: Field<T>[];\n    constructor(public readonly listSize: number, child: Field<T>) {\n        super();\n        this.children = [child];\n    }\n    public get typeId() { return Type.FixedSizeList as Type.FixedSizeList; }\n    public get valueType(): T { return this.children[0].type as T; }\n    public get valueField(): Field<T> { return this.children[0] as Field<T>; }\n    public get ArrayType(): T['ArrayType'] { return this.valueType.ArrayType; }\n    public toString() { return `FixedSizeList[${this.listSize}]<${this.valueType}>`; }\n    protected static [Symbol.toStringTag] = ((proto: FixedSizeList) => {\n        (<any> proto).children = null;\n        (<any> proto).listSize = null;\n        return proto[Symbol.toStringTag] = 'FixedSizeList';\n    })(FixedSizeList.prototype);\n}\n\n/** @ignore */\nexport interface Map_<TKey extends DataType = any, TValue extends DataType = any> extends DataType<Type.Map> {\n    TArray: IterableArrayLike<Map<TKey['TValue'], TValue['TValue'] | null>>;\n    TChild: Struct<{ key: TKey, value: TValue }>;\n    TValue: MapLike<TKey, TValue>;\n}\n\n/** @ignore */\nexport class Map_<TKey extends DataType = any, TValue extends DataType = any> extends DataType<Type.Map> {\n    constructor(child: Field<Struct<{ key: TKey, value: TValue }>>, keysSorted = false) {\n        super();\n        this.children = [child];\n        this.keysSorted = keysSorted;\n    }\n    public readonly keysSorted: boolean;\n    public readonly children: Field<Struct<{ key: TKey, value: TValue }>>[];\n    public get typeId() { return Type.Map as Type.Map; }\n    public get keyType(): TKey { return this.children[0].type.children[0].type as TKey; }\n    public get valueType(): TValue { return this.children[0].type.children[1].type as TValue; }\n    public toString() { return `Map<{${this.children[0].type.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Map_) => {\n        (<any> proto).children = null;\n        (<any> proto).keysSorted = null;\n        return proto[Symbol.toStringTag] = 'Map_';\n    })(Map_.prototype);\n}\n\n/** @ignore */\nconst getId = ((atomicDictionaryId) => () => ++atomicDictionaryId)(-1);\n\n/** @ignore */\nexport type TKeys = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32;\n\n/** @ignore */\nexport interface Dictionary<T extends DataType = any, TKey extends TKeys = TKeys> extends DataType<Type.Dictionary> { TArray: TKey['TArray']; TValue: T['TValue']; }\n/** @ignore */\nexport class Dictionary<T extends DataType = any, TKey extends TKeys = TKeys> extends DataType<Type.Dictionary> {\n    public readonly id: number;\n    public readonly indices: TKey;\n    public readonly dictionary: T;\n    public readonly isOrdered: boolean;\n    constructor(dictionary: T, indices: TKey, id?: Long | number | null, isOrdered?: boolean | null) {\n        super();\n        this.indices = indices;\n        this.dictionary = dictionary;\n        this.isOrdered = isOrdered || false;\n        this.id = id == null ? getId() : typeof id === 'number' ? id : id.low;\n    }\n    public get typeId() { return Type.Dictionary as Type.Dictionary; }\n    public get children() { return this.dictionary.children; }\n    public get valueType(): T { return this.dictionary as T; }\n    public get ArrayType(): T['ArrayType'] { return this.dictionary.ArrayType; }\n    public toString() { return `Dictionary<${this.indices}, ${this.dictionary}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Dictionary) => {\n        (<any> proto).id = null;\n        (<any> proto).indices = null;\n        (<any> proto).isOrdered = null;\n        (<any> proto).dictionary = null;\n        return proto[Symbol.toStringTag] = 'Dictionary';\n    })(Dictionary.prototype);\n}\n\n/** @ignore */\nexport interface IterableArrayLike<T = any> extends ArrayLike<T>, Iterable<T> {}\n/** @ignore */\nexport type FloatArray = Uint16Array | Float32Array | Float64Array;\n/** @ignore */\nexport type IntArray = Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array;\n\n/** @ignore */\nexport function strideForType(type: DataType) {\n    let t: any = type;\n    switch (type.typeId) {\n        case Type.Decimal: return 4;\n        case Type.Timestamp: return 2;\n        case Type.Date: return 1 + (t as Date_).unit;\n        case Type.Interval: return 1 + (t as Interval_).unit;\n        case Type.Int: return 1 + +((t as Int_).bitWidth > 32);\n        case Type.Time: return 1 + +((t as Time_).bitWidth > 32);\n        case Type.FixedSizeList: return (t as FixedSizeList).listSize;\n        case Type.FixedSizeBinary: return (t as FixedSizeBinary).byteWidth;\n        default: return 1;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from './vector';\nimport { truncateBitmap } from './util/bit';\nimport { popcnt_bit_range } from './util/bit';\nimport { BufferType, UnionMode, Type } from './enum';\nimport { DataType, SparseUnion, DenseUnion, strideForType } from './type';\nimport { toArrayBufferView, toUint8Array, toInt32Array } from './util/buffer';\nimport {\n    Dictionary,\n    Null, Int, Float,\n    Binary, Bool, Utf8, Decimal,\n    Date_, Time, Timestamp, Interval,\n    List, Struct, Union, FixedSizeBinary, FixedSizeList, Map_,\n} from './type';\n\n// When slicing, we do not know the null count of the sliced range without\n// doing some computation. To avoid doing this eagerly, we set the null count\n// to -1 (any negative number will do). When Vector.nullCount is called the\n// first time, the null count will be computed. See ARROW-33\n/** @ignore */ export type kUnknownNullCount = -1;\n/** @ignore */ export const kUnknownNullCount = -1;\n\n/** @ignore */ export type NullBuffer = Uint8Array | null | undefined;\n/** @ignore */ export type TypeIdsBuffer = Int8Array  | ArrayLike<number> | Iterable<number> | undefined;\n/** @ignore */ export type ValueOffsetsBuffer = Int32Array  | ArrayLike<number> | Iterable<number> | undefined;\n/** @ignore */ export type DataBuffer<T extends DataType> = T['TArray'] | ArrayLike<number> | Iterable<number> | undefined;\n\n/** @ignore */\nexport interface Buffers<T extends DataType> {\n      [BufferType.OFFSET]: Int32Array;\n        [BufferType.DATA]: T['TArray'];\n    [BufferType.VALIDITY]: Uint8Array;\n        [BufferType.TYPE]: T['TArray'];\n}\n\n/** @ignore */\nexport interface Data<T extends DataType = DataType> {\n    readonly TType: T['TType'];\n    readonly TArray: T['TArray'];\n    readonly TValue: T['TValue'];\n}\n\n/** @ignore */\nexport class Data<T extends DataType = DataType> {\n\n    public readonly type: T;\n    public readonly length: number;\n    public readonly offset: number;\n    public readonly stride: number;\n    public readonly childData: Data[];\n\n    /**\n     * The dictionary for this Vector, if any. Only used for Dictionary type.\n     */\n    public dictionary?: Vector;\n\n    public readonly values: Buffers<T>[BufferType.DATA];\n    // @ts-ignore\n    public readonly typeIds: Buffers<T>[BufferType.TYPE];\n    // @ts-ignore\n    public readonly nullBitmap: Buffers<T>[BufferType.VALIDITY];\n    // @ts-ignore\n    public readonly valueOffsets: Buffers<T>[BufferType.OFFSET];\n\n    public get typeId(): T['TType'] { return this.type.typeId; }\n    public get ArrayType(): T['ArrayType'] { return this.type.ArrayType; }\n    public get buffers() {\n        return [this.valueOffsets, this.values, this.nullBitmap, this.typeIds] as Buffers<T>;\n    }\n    public get byteLength(): number {\n        let byteLength = 0;\n        let { valueOffsets, values, nullBitmap, typeIds } = this;\n        valueOffsets && (byteLength += valueOffsets.byteLength);\n        values       && (byteLength += values.byteLength);\n        nullBitmap   && (byteLength += nullBitmap.byteLength);\n        typeIds      && (byteLength += typeIds.byteLength);\n        return this.childData.reduce((byteLength, child) => byteLength + child.byteLength, byteLength);\n    }\n\n    protected _nullCount: number | kUnknownNullCount;\n\n    public get nullCount() {\n        let nullCount = this._nullCount;\n        let nullBitmap: Uint8Array | undefined;\n        if (nullCount <= kUnknownNullCount && (nullBitmap = this.nullBitmap)) {\n            this._nullCount = nullCount = this.length - popcnt_bit_range(nullBitmap, this.offset, this.offset + this.length);\n        }\n        return nullCount;\n    }\n\n    constructor(type: T, offset: number, length: number, nullCount?: number, buffers?: Partial<Buffers<T>> | Data<T>, childData?: (Data | Vector)[], dictionary?: Vector) {\n        this.type = type;\n        this.dictionary = dictionary;\n        this.offset = Math.floor(Math.max(offset || 0, 0));\n        this.length = Math.floor(Math.max(length || 0, 0));\n        this._nullCount = Math.floor(Math.max(nullCount || 0, -1));\n        this.childData = (childData || []).map((x) => x instanceof Data ? x : x.data) as Data[];\n        let buffer: Buffers<T>[keyof Buffers<T>];\n        if (buffers instanceof Data) {\n            this.stride = buffers.stride;\n            this.values = buffers.values;\n            this.typeIds = buffers.typeIds;\n            this.nullBitmap = buffers.nullBitmap;\n            this.valueOffsets = buffers.valueOffsets;\n        } else {\n            this.stride = strideForType(type);\n            if (buffers) {\n                (buffer = (buffers as Buffers<T>)[0]) && (this.valueOffsets = buffer);\n                (buffer = (buffers as Buffers<T>)[1]) && (this.values = buffer);\n                (buffer = (buffers as Buffers<T>)[2]) && (this.nullBitmap = buffer);\n                (buffer = (buffers as Buffers<T>)[3]) && (this.typeIds = buffer);\n            }\n        }\n    }\n\n    public clone<R extends DataType>(type: R, offset = this.offset, length = this.length, nullCount = this._nullCount, buffers: Buffers<R> = <any> this, childData: (Data | Vector)[] = this.childData) {\n        return new Data(type, offset, length, nullCount, buffers, childData, this.dictionary);\n    }\n\n    public slice(offset: number, length: number): Data<T> {\n        const { stride, typeId, childData } = this;\n        // +true === 1, +false === 0, so this means\n        // we keep nullCount at 0 if it's already 0,\n        // otherwise set to the invalidated flag -1\n        const nullCount = +(this._nullCount === 0) - 1;\n        const childStride = typeId === 16 /* FixedSizeList */ ? stride : 1;\n        const buffers = this._sliceBuffers(offset, length, stride, typeId);\n        return this.clone<T>(this.type, this.offset + offset, length, nullCount, buffers,\n            // Don't slice children if we have value offsets (the variable-width types)\n            (!childData.length || this.valueOffsets) ? childData : this._sliceChildren(childData, childStride * offset, childStride * length));\n    }\n\n    public _changeLengthAndBackfillNullBitmap(newLength: number): Data<T> {\n        if (this.typeId === Type.Null) {\n            return this.clone(this.type, 0, newLength, 0);\n        }\n        const { length, nullCount } = this;\n        // start initialized with 0s (nulls), then fill from 0 to length with 1s (not null)\n        const bitmap = new Uint8Array(((newLength + 63) & ~63) >> 3).fill(255, 0, length >> 3);\n        // set all the bits in the last byte (up to bit `length - length % 8`) to 1 (not null)\n        bitmap[length >> 3] = (1 << (length - (length & ~7))) - 1;\n        // if we have a nullBitmap, truncate + slice and set it over the pre-filled 1s\n        if (nullCount > 0) {\n            bitmap.set(truncateBitmap(this.offset, length, this.nullBitmap), 0);\n        }\n        const buffers = this.buffers;\n        buffers[BufferType.VALIDITY] = bitmap;\n        return this.clone(this.type, 0, newLength, nullCount + (newLength - length), buffers);\n    }\n\n    protected _sliceBuffers(offset: number, length: number, stride: number, typeId: T['TType']): Buffers<T> {\n        let arr: any, { buffers } = this;\n        // If typeIds exist, slice the typeIds buffer\n        (arr = buffers[BufferType.TYPE]) && (buffers[BufferType.TYPE] = arr.subarray(offset, offset + length));\n        // If offsets exist, only slice the offsets buffer\n        (arr = buffers[BufferType.OFFSET]) && (buffers[BufferType.OFFSET] = arr.subarray(offset, offset + length + 1)) ||\n        // Otherwise if no offsets, slice the data buffer. Don't slice the data vector for Booleans, since the offset goes by bits not bytes\n        (arr = buffers[BufferType.DATA]) && (buffers[BufferType.DATA] = typeId === 6 ? arr : arr.subarray(stride * offset, stride * (offset + length)));\n        return buffers;\n    }\n\n    protected _sliceChildren(childData: Data[], offset: number, length: number): Data[] {\n        return childData.map((child) => child.slice(offset, length));\n    }\n\n    //\n    // Convenience methods for creating Data instances for each of the Arrow Vector types\n    //\n    /** @nocollapse */\n    public static new<T extends DataType>(type: T, offset: number, length: number, nullCount?: number, buffers?: Partial<Buffers<T>> | Data<T>, childData?: (Data | Vector)[], dictionary?: Vector): Data<T> {\n        if (buffers instanceof Data) { buffers = buffers.buffers; } else if (!buffers) { buffers = [] as Partial<Buffers<T>>; }\n        switch (type.typeId) {\n            case Type.Null:            return <unknown> Data.Null(            <unknown> type as Null,            offset, length) as Data<T>;\n            case Type.Int:             return <unknown> Data.Int(             <unknown> type as Int,             offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Dictionary:      return <unknown> Data.Dictionary(      <unknown> type as Dictionary,      offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || [], dictionary!) as Data<T>;\n            case Type.Float:           return <unknown> Data.Float(           <unknown> type as Float,           offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Bool:            return <unknown> Data.Bool(            <unknown> type as Bool,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Decimal:         return <unknown> Data.Decimal(         <unknown> type as Decimal,         offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Date:            return <unknown> Data.Date(            <unknown> type as Date_,           offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Time:            return <unknown> Data.Time(            <unknown> type as Time,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Timestamp:       return <unknown> Data.Timestamp(       <unknown> type as Timestamp,       offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Interval:        return <unknown> Data.Interval(        <unknown> type as Interval,        offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.FixedSizeBinary: return <unknown> Data.FixedSizeBinary( <unknown> type as FixedSizeBinary, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Binary:          return <unknown> Data.Binary(          <unknown> type as Binary,          offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Utf8:            return <unknown> Data.Utf8(            <unknown> type as Utf8,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.List:            return <unknown> Data.List(            <unknown> type as List,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], (childData || [])[0]) as Data<T>;\n            case Type.FixedSizeList:   return <unknown> Data.FixedSizeList(   <unknown> type as FixedSizeList,   offset, length, nullCount || 0, buffers[BufferType.VALIDITY], (childData || [])[0]) as Data<T>;\n            case Type.Struct:          return <unknown> Data.Struct(          <unknown> type as Struct,          offset, length, nullCount || 0, buffers[BufferType.VALIDITY], childData || []) as Data<T>;\n            case Type.Map:             return <unknown> Data.Map(             <unknown> type as Map_,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], (childData || [])[0]) as Data<T>;\n            case Type.Union:           return <unknown> Data.Union(           <unknown> type as Union,           offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.TYPE] || [], buffers[BufferType.OFFSET] || childData, childData) as Data<T>;\n        }\n        throw new Error(`Unrecognized typeId ${type.typeId}`);\n    }\n\n    /** @nocollapse */\n    public static Null<T extends Null>(type: T, offset: number, length: number) {\n        return new Data(type, offset, length, 0);\n    }\n    /** @nocollapse */\n    public static Int<T extends Int>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Dictionary<T extends Dictionary>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>, dictionary: Vector<T['dictionary']>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView<T['TArray']>(type.indices.ArrayType, data), toUint8Array(nullBitmap)], [], dictionary);\n    }\n    /** @nocollapse */\n    public static Float<T extends Float>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Bool<T extends Bool>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Decimal<T extends Decimal>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Date<T extends Date_>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Time<T extends Time>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Timestamp<T extends Timestamp>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Interval<T extends Interval>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static FixedSizeBinary<T extends FixedSizeBinary>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Binary<T extends Binary>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, data: Uint8Array) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), toUint8Array(data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Utf8<T extends Utf8>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, data: Uint8Array) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), toUint8Array(data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static List<T extends List>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, child: Data<T['valueType']> | Vector<T['valueType']>) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    /** @nocollapse */\n    public static FixedSizeList<T extends FixedSizeList>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, child: Data<T['valueType']> | Vector<T['valueType']>) {\n        return new Data(type, offset, length, nullCount, [undefined, undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    /** @nocollapse */\n    public static Struct<T extends Struct>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, children: (Data | Vector)[]) {\n        return new Data(type, offset, length, nullCount, [undefined, undefined, toUint8Array(nullBitmap)], children);\n    }\n    /** @nocollapse */\n    public static Map<T extends Map_>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, child: (Data | Vector)) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    public static Union<T extends SparseUnion>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, children: (Data | Vector)[], _?: any): Data<T>;\n    public static Union<T extends DenseUnion>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, valueOffsets: ValueOffsetsBuffer, children: (Data | Vector)[]): Data<T>;\n    public static Union<T extends Union>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, valueOffsetsOrChildren: ValueOffsetsBuffer | (Data | Vector)[], children?: (Data | Vector)[]): Data<T>;\n    /** @nocollapse */\n    public static Union<T extends Union>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, valueOffsetsOrChildren: ValueOffsetsBuffer | (Data | Vector)[], children?: (Data | Vector)[]) {\n        const buffers = <unknown> [\n            undefined, undefined,\n            toUint8Array(nullBitmap),\n            toArrayBufferView(type.ArrayType, typeIds)\n        ] as Partial<Buffers<T>>;\n        if (type.mode === UnionMode.Sparse) {\n            return new Data(type, offset, length, nullCount, buffers, valueOffsetsOrChildren as (Data | Vector)[]);\n        }\n        buffers[BufferType.OFFSET] = toInt32Array(<ValueOffsetsBuffer> valueOffsetsOrChildren);\n        return new Data(type, offset, length, nullCount, buffers, children);\n    }\n}\n\n(Data.prototype as any).childData = Object.freeze([]);\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */ const undf = void (0);\n\n/** @ignore */\nexport function valueToString(x: any) {\n    if (x === null) { return 'null'; }\n    if (x === undf) { return 'undefined'; }\n    switch (typeof x) {\n        case 'number': return `${x}`;\n        case 'bigint': return `${x}`;\n        case 'string': return `\"${x}\"`;\n    }\n    // If [Symbol.toPrimitive] is implemented (like in BN)\n    // use it instead of JSON.stringify(). This ensures we\n    // print BigInts, Decimals, and Binary in their native\n    // representation\n    if (typeof x[Symbol.toPrimitive] === 'function') {\n        return x[Symbol.toPrimitive]('string');\n    }\n    return ArrayBuffer.isView(x) ? `[${x}]` : JSON.stringify(x);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../type';\nimport { valueToString } from '../util/pretty';\nimport { BigIntAvailable } from '../util/compat';\n\n/**\n * Dynamically compile the null values into an `isValid()` function whose\n * implementation is a switch statement. Microbenchmarks in v8 indicate\n * this approach is 25% faster than using an ES6 Map.\n *\n * @example\n * console.log(createIsValidFunction([null, 'N/A', NaN]));\n * `function (x) {\n *     if (x !== x) return false;\n *     switch (x) {\n *         case null:\n *         case \"N/A\":\n *             return false;\n *     }\n *     return true;\n * }`\n *\n * @ignore\n * @param nullValues\n */\nexport function createIsValidFunction<T extends DataType = any, TNull = any>(nullValues?: ReadonlyArray<TNull>) {\n\n    if (!nullValues || nullValues.length <= 0) {\n        // @ts-ignore\n        return function isValid(value: any) { return true; };\n    }\n\n    let fnBody = '';\n    let noNaNs = nullValues.filter((x) => x === x);\n\n    if (noNaNs.length > 0) {\n        fnBody = `\n    switch (x) {${noNaNs.map((x) => `\n        case ${valueToCase(x)}:`).join('')}\n            return false;\n    }`;\n    }\n\n    // NaN doesn't equal anything including itself, so it doesn't work as a\n    // switch case. Instead we must explicitly check for NaN before the switch.\n    if (nullValues.length !== noNaNs.length) {\n        fnBody = `if (x !== x) return false;\\n${fnBody}`;\n    }\n\n    return new Function(`x`, `${fnBody}\\nreturn true;`) as (value: T['TValue'] | TNull) => boolean;\n}\n\n/** @ignore */\nfunction valueToCase(x: any) {\n    if (typeof x !== 'bigint') {\n        return valueToString(x);\n    } else if (BigIntAvailable) {\n        return `${valueToString(x)}n`;\n    }\n    return `\"${valueToString(x)}\"`;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { memcpy } from '../util/buffer';\nimport { BigIntAvailable, BigInt64Array, BigUint64Array } from '../util/compat';\nimport {\n    TypedArray, TypedArrayConstructor,\n    BigIntArray, BigIntArrayConstructor\n} from '../interfaces';\n\n/** @ignore */ type DataValue<T> = T extends TypedArray ? number : T extends BigIntArray ? WideValue<T> : T;\n/** @ignore */ type WideValue<T extends BigIntArray> = T extends BigIntArray ? bigint | Int32Array | Uint32Array : never;\n/** @ignore */ type ArrayCtor<T extends TypedArray | BigIntArray> =\n    T extends TypedArray  ? TypedArrayConstructor<T>  :\n    T extends BigIntArray ? BigIntArrayConstructor<T> :\n    any;\n\n/** @ignore */\nconst roundLengthUpToNearest64Bytes = (len: number, BPE: number) => ((((len * BPE) + 63) & ~63) || 64) / BPE;\n/** @ignore */\nconst sliceOrExtendArray = <T extends TypedArray | BigIntArray>(arr: T, len = 0) => (\n    arr.length >= len ? arr.subarray(0, len) : memcpy(new (arr.constructor as any)(len), arr, 0)\n) as T;\n\n/** @ignore */\nexport interface BufferBuilder<T extends TypedArray | BigIntArray = any, TValue = DataValue<T>> {\n    readonly offset: number;\n}\n\n/** @ignore */\nexport class BufferBuilder<T extends TypedArray | BigIntArray = any, TValue = DataValue<T>> {\n\n    constructor(buffer: T, stride = 1) {\n        this.buffer = buffer;\n        this.stride = stride;\n        this.BYTES_PER_ELEMENT = buffer.BYTES_PER_ELEMENT;\n        this.ArrayType = buffer.constructor as ArrayCtor<T>;\n        this._resize(this.length = buffer.length / stride | 0);\n    }\n\n    public buffer: T;\n    public length: number;\n    public readonly stride: number;\n    public readonly ArrayType: ArrayCtor<T>;\n    public readonly BYTES_PER_ELEMENT: number;\n\n    public get byteLength() { return this.length * this.stride * this.BYTES_PER_ELEMENT | 0; }\n    public get reservedLength() { return this.buffer.length / this.stride; }\n    public get reservedByteLength() { return this.buffer.byteLength; }\n\n    // @ts-ignore\n    public set(index: number, value: TValue) { return this; }\n    public append(value: TValue) { return this.set(this.length, value); }\n    public reserve(extra: number) {\n        if (extra > 0) {\n            this.length += extra;\n            const stride = this.stride;\n            const length = this.length * stride;\n            const reserved = this.buffer.length;\n            if (length >= reserved) {\n                this._resize(reserved === 0\n                    ? roundLengthUpToNearest64Bytes(length * 1, this.BYTES_PER_ELEMENT)\n                    : roundLengthUpToNearest64Bytes(length * 2, this.BYTES_PER_ELEMENT)\n                );\n            }\n        }\n        return this;\n    }\n    public flush(length = this.length) {\n        length = roundLengthUpToNearest64Bytes(length * this.stride, this.BYTES_PER_ELEMENT);\n        const array = sliceOrExtendArray<T>(this.buffer, length);\n        this.clear();\n        return array;\n    }\n    public clear() {\n        this.length = 0;\n        this._resize(0);\n        return this;\n    }\n    protected _resize(newLength: number) {\n        return this.buffer = <T> memcpy(new this.ArrayType(newLength), this.buffer);\n    }\n}\n\n(BufferBuilder.prototype as any).offset = 0;\n\n/** @ignore */\nexport class DataBufferBuilder<T extends TypedArray> extends BufferBuilder<T, number> {\n    public last() { return this.get(this.length - 1); }\n    public get(index: number) { return this.buffer[index]; }\n    public set(index: number, value: number) {\n        this.reserve(index - this.length + 1);\n        this.buffer[index * this.stride] = value;\n        return this;\n    }\n}\n\n/** @ignore */\nexport class BitmapBufferBuilder extends DataBufferBuilder<Uint8Array> {\n\n    constructor(data = new Uint8Array(0)) { super(data, 1 / 8); }\n\n    public numValid = 0;\n    public get numInvalid() { return this.length - this.numValid; }\n    public get(idx: number) { return this.buffer[idx >> 3] >> idx % 8 & 1; }\n    public set(idx: number, val: number) {\n        const { buffer } = this.reserve(idx - this.length + 1);\n        const byte = idx >> 3, bit = idx % 8, cur = buffer[byte] >> bit & 1;\n        // If `val` is truthy and the current bit is 0, flip it to 1 and increment `numValid`.\n        // If `val` is falsey and the current bit is 1, flip it to 0 and decrement `numValid`.\n        val ? cur === 0 && ((buffer[byte] |=  (1 << bit)), ++this.numValid)\n            : cur === 1 && ((buffer[byte] &= ~(1 << bit)), --this.numValid);\n        return this;\n    }\n    public clear() {\n        this.numValid = 0;\n        return super.clear();\n    }\n}\n\n/** @ignore */\nexport class OffsetsBufferBuilder extends DataBufferBuilder<Int32Array> {\n    constructor(data = new Int32Array(1)) { super(data, 1); }\n    public append(value: number) {\n        return this.set(this.length - 1, value);\n    }\n    public set(index: number, value: number) {\n        const offset = this.length - 1;\n        const buffer = this.reserve(index - offset + 1).buffer;\n        if (offset < index++) {\n            buffer.fill(buffer[offset], offset, index);\n        }\n        buffer[index] = buffer[index - 1] + value;\n        return this;\n    }\n    public flush(length = this.length - 1) {\n        if (length > this.length) {\n            this.set(length - 1, 0);\n        }\n        return super.flush(length + 1);\n    }\n}\n\n/** @ignore */\nexport class WideBufferBuilder<T extends TypedArray, R extends BigIntArray> extends BufferBuilder<T, DataValue<T>> {\n    // @ts-ignore\n    public buffer64: R;\n    // @ts-ignore\n    protected _ArrayType64: BigIntArrayConstructor<R>;\n    public get ArrayType64() {\n        return this._ArrayType64 || (this._ArrayType64 = <BigIntArrayConstructor<R>> (this.buffer instanceof Int32Array ? BigInt64Array : BigUint64Array));\n    }\n    public set(index: number, value: DataValue<T>) {\n        this.reserve(index - this.length + 1);\n        switch (typeof value) {\n            case 'bigint': this.buffer64[index] = value; break;\n            case 'number': this.buffer[index * this.stride] = value; break;\n            default: this.buffer.set(value as TypedArray, index * this.stride);\n        }\n        return this;\n    }\n    protected _resize(newLength: number) {\n        const data = super._resize(newLength);\n        const length = data.byteLength / (this.BYTES_PER_ELEMENT * this.stride);\n        if (BigIntAvailable) {\n            this.buffer64 = new this.ArrayType64(data.buffer, data.byteOffset, length);\n        }\n        return data;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from './vector';\nimport { BufferType } from './enum';\nimport { Data, Buffers } from './data';\nimport { createIsValidFunction } from './builder/valid';\nimport { BuilderType as B, VectorType as V} from './interfaces';\nimport { BufferBuilder, BitmapBufferBuilder, DataBufferBuilder, OffsetsBufferBuilder } from './builder/buffer';\nimport {\n    DataType, strideForType,\n    Float, Int, Decimal, FixedSizeBinary,\n    Date_, Time, Timestamp, Interval,\n    Utf8, Binary, List, Map_\n} from './type';\n\n/**\n * A set of options required to create a `Builder` instance for a given `DataType`.\n * @see {@link Builder}\n */\nexport interface BuilderOptions<T extends DataType = any, TNull = any> {\n    type: T;\n    nullValues?: TNull[] | ReadonlyArray<TNull> | null;\n    children?: { [key: string]: BuilderOptions; } | BuilderOptions[];\n}\n\n/**\n * A set of options to create an Iterable or AsyncIterable `Builder` transform function.\n * @see {@link Builder.throughIterable}\n * @see {@link Builder.throughAsyncIterable}\n */\n\nexport interface IterableBuilderOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    highWaterMark?: number;\n    queueingStrategy?: 'bytes' | 'count';\n    dictionaryHashFunction?: (value: any) => string | number;\n    valueToChildTypeId?: (builder: Builder<T, TNull>, value: any, offset: number) => number;\n}\n\n/**\n * An abstract base class for types that construct Arrow Vectors from arbitrary JavaScript values.\n *\n * A `Builder` is responsible for writing arbitrary JavaScript values\n * to ArrayBuffers and/or child Builders according to the Arrow specification\n * for each DataType, creating or resizing the underlying ArrayBuffers as necessary.\n *\n * The `Builder` for each Arrow `DataType` handles converting and appending\n * values for a given `DataType`. The high-level {@link Builder.new `Builder.new()`} convenience\n * method creates the specific `Builder` subclass for the supplied `DataType`.\n *\n * Once created, `Builder` instances support both appending values to the end\n * of the `Builder`, and random-access writes to specific indices\n * (`Builder.prototype.append(value)` is a convenience method for\n * `builder.set(builder.length, value)`). Appending or setting values beyond the\n * Builder's current length may cause the builder to grow its underlying buffers\n * or child Builders (if applicable) to accommodate the new values.\n *\n * After enough values have been written to a `Builder`, `Builder.prototype.flush()`\n * will commit the values to the underlying ArrayBuffers (or child Builders). The\n * internal Builder state will be reset, and an instance of `Data<T>` is returned.\n * Alternatively, `Builder.prototype.toVector()` will flush the `Builder` and return\n * an instance of `Vector<T>` instead.\n *\n * When there are no more values to write, use `Builder.prototype.finish()` to\n * finalize the `Builder`. This does not reset the internal state, so it is\n * necessary to call `Builder.prototype.flush()` or `toVector()` one last time\n * if there are still values queued to be flushed.\n *\n * Note: calling `Builder.prototype.finish()` is required when using a `DictionaryBuilder`,\n * because this is when it flushes the values that have been enqueued in its internal\n * dictionary's `Builder`, and creates the `dictionaryVector` for the `Dictionary` `DataType`.\n *\n * ```ts\n * import { Builder, Utf8 } from 'apache-arrow';\n *\n * const utf8Builder = Builder.new({\n *     type: new Utf8(),\n *     nullValues: [null, 'n/a']\n * });\n *\n * utf8Builder\n *     .append('hello')\n *     .append('n/a')\n *     .append('world')\n *     .append(null);\n *\n * const utf8Vector = utf8Builder.finish().toVector();\n *\n * console.log(utf8Vector.toJSON());\n * // > [\"hello\", null, \"world\", null]\n * ```\n *\n * @typeparam T The `DataType` of this `Builder`.\n * @typeparam TNull The type(s) of values which will be considered null-value sentinels.\n */\nexport abstract class Builder<T extends DataType = any, TNull = any> {\n\n    /**\n     * Create a `Builder` instance based on the `type` property of the supplied `options` object.\n     * @param {BuilderOptions<T, TNull>} options An object with a required `DataType` instance\n     * and other optional parameters to be passed to the `Builder` subclass for the given `type`.\n     *\n     * @typeparam T The `DataType` of the `Builder` to create.\n     * @typeparam TNull The type(s) of values which will be considered null-value sentinels.\n     * @nocollapse\n     */\n    // @ts-ignore\n    public static new<T extends DataType = any, TNull = any>(options: BuilderOptions<T, TNull>): B<T, TNull> {}\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode<T extends DataType = any, TNull = any>(options: import('./io/node/builder').BuilderDuplexOptions<T, TNull>): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughDOM<T extends DataType = any, TNull = any>(options: import('./io/whatwg/builder').BuilderTransformOptions<T, TNull>): import('./io/whatwg/builder').BuilderTransform<T, TNull> {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    /**\n     * Transform a synchronous `Iterable` of arbitrary JavaScript values into a\n     * sequence of Arrow Vector<T> following the chunking semantics defined in\n     * the supplied `options` argument.\n     *\n     * This function returns a function that accepts an `Iterable` of values to\n     * transform. When called, this function returns an Iterator of `Vector<T>`.\n     *\n     * The resulting `Iterator<Vector<T>>` yields Vectors based on the\n     * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n     *\n     * * If `queueingStrategy` is `\"count\"` (or omitted), The `Iterator<Vector<T>>`\n     *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n     *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n     * * If `queueingStrategy` is `\"bytes\"`, the `Iterator<Vector<T>>` will flush\n     *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n     *   reaches or exceeds the supplied `highWaterMark`.\n     *\n     * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n     * @returns A function which accepts a JavaScript `Iterable` of values to\n     *          write, and returns an `Iterator` that yields Vectors according\n     *          to the chunking semantics defined in the `options` argument.\n     * @nocollapse\n     */\n    public static throughIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>) {\n        return throughIterable(options);\n    }\n\n    /**\n     * Transform an `AsyncIterable` of arbitrary JavaScript values into a\n     * sequence of Arrow Vector<T> following the chunking semantics defined in\n     * the supplied `options` argument.\n     *\n     * This function returns a function that accepts an `AsyncIterable` of values to\n     * transform. When called, this function returns an AsyncIterator of `Vector<T>`.\n     *\n     * The resulting `AsyncIterator<Vector<T>>` yields Vectors based on the\n     * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n     *\n     * * If `queueingStrategy` is `\"count\"` (or omitted), The `AsyncIterator<Vector<T>>`\n     *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n     *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n     * * If `queueingStrategy` is `\"bytes\"`, the `AsyncIterator<Vector<T>>` will flush\n     *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n     *   reaches or exceeds the supplied `highWaterMark`.\n     *\n     * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n     * @returns A function which accepts a JavaScript `AsyncIterable` of values\n     *          to write, and returns an `AsyncIterator` that yields Vectors\n     *          according to the chunking semantics defined in the `options`\n     *          argument.\n     * @nocollapse\n     */\n    public static throughAsyncIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>) {\n        return throughAsyncIterable(options);\n    }\n\n    /**\n     * Construct a builder with the given Arrow DataType with optional null values,\n     * which will be interpreted as \"null\" when set or appended to the `Builder`.\n     * @param {{ type: T, nullValues?: any[] }} options A `BuilderOptions` object used to create this `Builder`.\n     */\n    constructor({ 'type': type, 'nullValues': nulls }: BuilderOptions<T, TNull>) {\n        this.type = type;\n        this.children = [];\n        this.nullValues = nulls;\n        this.stride = strideForType(type);\n        this._nulls = new BitmapBufferBuilder();\n        if (nulls && nulls.length > 0) {\n            this._isValid = createIsValidFunction(nulls);\n        }\n    }\n\n    /**\n     * The Builder's `DataType` instance.\n     * @readonly\n     */\n    public type: T;\n    /**\n     * The number of values written to the `Builder` that haven't been flushed yet.\n     * @readonly\n     */\n    public length = 0;\n    /**\n     * A boolean indicating whether `Builder.prototype.finish()` has been called on this `Builder`.\n     * @readonly\n     */\n    public finished = false;\n    /**\n     * The number of elements in the underlying values TypedArray that\n     * represent a single logical element, determined by this Builder's\n     * `DataType`. This is 1 for most types, but is larger when the `DataType`\n     * is `Int64`, `Uint64`, `Decimal`, `DateMillisecond`, certain variants of\n     * `Interval`, `Time`, or `Timestamp`, `FixedSizeBinary`, and `FixedSizeList`.\n     * @readonly\n     */\n    public readonly stride: number;\n    public readonly children: Builder[];\n    /**\n     * The list of null-value sentinels for this `Builder`. When one of these values\n     * is written to the `Builder` (either via `Builder.prototype.set()` or `Builder.prototype.append()`),\n     * a 1-bit is written to this Builder's underlying null BitmapBufferBuilder.\n     * @readonly\n     */\n    public readonly nullValues?: TNull[] | ReadonlyArray<TNull> | null;\n\n    /**\n     * Flush the `Builder` and return a `Vector<T>`.\n     * @returns {Vector<T>} A `Vector<T>` of the flushed values.\n     */\n    public toVector() { return Vector.new(this.flush()); }\n\n    public get ArrayType() { return this.type.ArrayType; }\n    public get nullCount() { return this._nulls.numInvalid; }\n    public get numChildren() { return this.children.length; }\n\n    /**\n     * @returns The aggregate length (in bytes) of the values that have been written.\n     */\n    public get byteLength(): number {\n        let size = 0;\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        this._typeIds && (size += this._typeIds.byteLength);\n        return this.children.reduce((size, child) => size + child.byteLength, size);\n    }\n\n    /**\n     * @returns The aggregate number of rows that have been reserved to write new values.\n     */\n    public get reservedLength(): number {\n        return this._nulls.reservedLength;\n    }\n\n    /**\n     * @returns The aggregate length (in bytes) that has been reserved to write new values.\n     */\n    public get reservedByteLength(): number {\n        let size = 0;\n        this._offsets && (size += this._offsets.reservedByteLength);\n        this._values && (size += this._values.reservedByteLength);\n        this._nulls && (size += this._nulls.reservedByteLength);\n        this._typeIds && (size += this._typeIds.reservedByteLength);\n        return this.children.reduce((size, child) => size + child.reservedByteLength, size);\n    }\n\n    // @ts-ignore\n    protected _offsets: DataBufferBuilder<Int32Array>;\n    public get valueOffsets() { return this._offsets ? this._offsets.buffer : null; }\n\n    // @ts-ignore\n    protected _values: BufferBuilder<T['TArray'], any>;\n    public get values() { return this._values ? this._values.buffer : null; }\n\n    protected _nulls: BitmapBufferBuilder;\n    public get nullBitmap() { return this._nulls ? this._nulls.buffer : null; }\n\n    // @ts-ignore\n    protected _typeIds: DataBufferBuilder<Int8Array>;\n    public get typeIds() { return this._typeIds ? this._typeIds.buffer : null; }\n\n    // @ts-ignore\n    protected _isValid: (value: T['TValue'] | TNull) => boolean;\n    // @ts-ignore\n    protected _setValue: (inst: Builder<T>, index: number, value: T['TValue']) => void;\n\n    /**\n     * Appends a value (or null) to this `Builder`.\n     * This is equivalent to `builder.set(builder.length, value)`.\n     * @param {T['TValue'] | TNull } value The value to append.\n     */\n    public append(value: T['TValue'] | TNull) { return this.set(this.length, value); }\n\n    /**\n     * Validates whether a value is valid (true), or null (false)\n     * @param {T['TValue'] | TNull } value The value to compare against null the value representations\n     */\n    // @ts-ignore\n    public isValid(value: T['TValue'] | TNull): boolean { return this._isValid(value); }\n\n    /**\n     * Write a value (or null-value sentinel) at the supplied index.\n     * If the value matches one of the null-value representations, a 1-bit is\n     * written to the null `BitmapBufferBuilder`. Otherwise, a 0 is written to\n     * the null `BitmapBufferBuilder`, and the value is passed to\n     * `Builder.prototype.setValue()`.\n     * @param {number} index The index of the value to write.\n     * @param {T['TValue'] | TNull } value The value to write at the supplied index.\n     * @returns {this} The updated `Builder` instance.\n     */\n    public set(index: number, value: T['TValue'] | TNull) {\n        if (this.setValid(index, this.isValid(value))) {\n            this.setValue(index, value);\n        }\n        return this;\n    }\n\n    /**\n     * Write a value to the underlying buffers at the supplied index, bypassing\n     * the null-value check. This is a low-level method that\n     * @param {number} index\n     * @param {T['TValue'] | TNull } value\n     */\n    // @ts-ignore\n    public setValue(index: number, value: T['TValue']) { this._setValue(this, index, value); }\n    public setValid(index: number, valid: boolean) {\n        this.length = this._nulls.set(index, +valid).length;\n        return valid;\n    }\n\n    // @ts-ignore\n    public addChild(child: Builder, name = `${this.numChildren}`) {\n        throw new Error(`Cannot append children to non-nested type \"${this.type}\"`);\n    }\n\n    /**\n     * Retrieve the child `Builder` at the supplied `index`, or null if no child\n     * exists at that index.\n     * @param {number} index The index of the child `Builder` to retrieve.\n     * @returns {Builder | null} The child Builder at the supplied index or null.\n     */\n    public getChildAt<R extends DataType = any>(index: number): Builder<R> | null {\n        return this.children[index] || null;\n    }\n\n    /**\n     * Commit all the values that have been written to their underlying\n     * ArrayBuffers, including any child Builders if applicable, and reset\n     * the internal `Builder` state.\n     * @returns A `Data<T>` of the buffers and childData representing the values written.\n     */\n    public flush() {\n\n        const buffers: any = [];\n        const values =  this._values;\n        const offsets =  this._offsets;\n        const typeIds =  this._typeIds;\n        const { length, nullCount } = this;\n\n        if (typeIds) { /* Unions */\n            buffers[BufferType.TYPE] = typeIds.flush(length);\n            // DenseUnions\n            offsets && (buffers[BufferType.OFFSET] = offsets.flush(length));\n        } else if (offsets) { /* Variable-width primitives (Binary, Utf8) and Lists */\n            // Binary, Utf8\n            values && (buffers[BufferType.DATA] = values.flush(offsets.last()));\n            buffers[BufferType.OFFSET] = offsets.flush(length);\n        } else if (values) { /* Fixed-width primitives (Int, Float, Decimal, Time, Timestamp, and Interval) */\n            buffers[BufferType.DATA] = values.flush(length);\n        }\n\n        nullCount > 0 && (buffers[BufferType.VALIDITY] = this._nulls.flush(length));\n\n        const data = Data.new<T>(\n            this.type, 0, length, nullCount, buffers as Buffers<T>,\n            this.children.map((child) => child.flush())) as Data<T>;\n\n        this.clear();\n\n        return data;\n    }\n\n    /**\n     * Finalize this `Builder`, and child builders if applicable.\n     * @returns {this} The finalized `Builder` instance.\n     */\n    public finish() {\n        this.finished = true;\n        this.children.forEach((child) => child.finish());\n        return this;\n    }\n\n    /**\n     * Clear this Builder's internal state, including child Builders if applicable, and reset the length to 0.\n     * @returns {this} The cleared `Builder` instance.\n     */\n    public clear() {\n        this.length = 0;\n        this._offsets && (this._offsets.clear());\n        this._values && (this._values.clear());\n        this._nulls && (this._nulls.clear());\n        this._typeIds && (this._typeIds.clear());\n        this.children.forEach((child) => child.clear());\n        return this;\n    }\n}\n\n(Builder.prototype as any).length = 1;\n(Builder.prototype as any).stride = 1;\n(Builder.prototype as any).children = null;\n(Builder.prototype as any).finished = false;\n(Builder.prototype as any).nullValues = null;\n(Builder.prototype as any)._isValid = () => true;\n\n/** @ignore */\nexport abstract class FixedWidthBuilder<T extends Int | Float | FixedSizeBinary | Date_ | Timestamp | Time | Decimal | Interval = any, TNull = any> extends Builder<T, TNull> {\n    constructor(opts: BuilderOptions<T, TNull>) {\n        super(opts);\n        this._values = new DataBufferBuilder(new this.ArrayType(0), this.stride);\n    }\n    public setValue(index: number, value: T['TValue']) {\n        const values = this._values;\n        values.reserve(index - values.length + 1);\n        return super.setValue(index, value);\n    }\n}\n\n/** @ignore */\nexport abstract class VariableWidthBuilder<T extends Binary | Utf8 | List | Map_, TNull = any> extends Builder<T, TNull> {\n    protected _pendingLength: number = 0;\n    protected _offsets: OffsetsBufferBuilder;\n    protected _pending: Map<number, any> | undefined;\n    constructor(opts: BuilderOptions<T, TNull>) {\n        super(opts);\n        this._offsets = new OffsetsBufferBuilder();\n    }\n    public setValue(index: number, value: T['TValue']) {\n        const pending = this._pending || (this._pending = new Map());\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.length);\n        this._pendingLength += value.length;\n        pending.set(index, value);\n    }\n    public setValid(index: number, isValid: boolean) {\n        if (!super.setValid(index, isValid)) {\n            (this._pending || (this._pending = new Map())).set(index, undefined);\n            return false;\n        }\n        return true;\n    }\n    public clear() {\n        this._pendingLength = 0;\n        this._pending = undefined;\n        return super.clear();\n    }\n    public flush() {\n        this._flush();\n        return super.flush();\n    }\n    public finish() {\n        this._flush();\n        return super.finish();\n    }\n    protected _flush() {\n        const pending = this._pending;\n        const pendingLength = this._pendingLength;\n        this._pendingLength = 0;\n        this._pending = undefined;\n        if (pending && pending.size > 0) {\n            this._flushPending(pending, pendingLength);\n        }\n        return this;\n    }\n    protected abstract _flushPending(pending: Map<number, any>, pendingLength: number): void;\n}\n\n/** @ignore */\ntype ThroughIterable<T extends DataType = any, TNull = any> = (source: Iterable<T['TValue'] | TNull>) => IterableIterator<V<T>>;\n\n/** @ignore */\nfunction throughIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>): ThroughIterable<T, TNull> {\n    const { ['queueingStrategy']: queueingStrategy = 'count' } = options;\n    const { ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? 1000 : 2 ** 14 } = options;\n    const sizeProperty: 'length' | 'byteLength' = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n    return function*(source: Iterable<T['TValue'] | TNull>) {\n        let numChunks = 0;\n        let builder = Builder.new(options);\n        for (const value of source) {\n            if (builder.append(value)[sizeProperty] >= highWaterMark) {\n                ++numChunks && (yield builder.toVector());\n            }\n        }\n        if (builder.finish().length > 0 || numChunks === 0) {\n            yield builder.toVector();\n        }\n    };\n}\n\n/** @ignore */\ntype ThroughAsyncIterable<T extends DataType = any, TNull = any> = (source: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull>) => AsyncIterableIterator<V<T>>;\n\n/** @ignore */\nfunction throughAsyncIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>): ThroughAsyncIterable<T, TNull> {\n    const { ['queueingStrategy']: queueingStrategy = 'count' } = options;\n    const { ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? 1000 : 2 ** 14 } = options;\n    const sizeProperty: 'length' | 'byteLength' = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n    return async function* (source: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull>) {\n        let numChunks = 0;\n        let builder = Builder.new(options);\n        for await (const value of source) {\n            if (builder.append(value)[sizeProperty] >= highWaterMark) {\n                ++numChunks && (yield builder.toVector());\n            }\n        }\n        if (builder.finish().length > 0 || numChunks === 0) {\n            yield builder.toVector();\n        }\n    };\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Bool } from '../type';\nimport { BitmapBufferBuilder } from './buffer';\nimport { Builder, BuilderOptions } from '../builder';\n\n/** @ignore */\nexport class BoolBuilder<TNull = any> extends Builder<Bool, TNull> {\n    constructor(options: BuilderOptions<Bool, TNull>) {\n        super(options);\n        this._values = new BitmapBufferBuilder();\n    }\n    public setValue(index: number, value: boolean) {\n        this._values.set(index, +value);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Null } from '../type';\nimport { Builder } from '../builder';\n\n/** @ignore */\nexport class NullBuilder<TNull = any> extends Builder<Null, TNull> {\n    // @ts-ignore\n    public setValue(index: number, value: null) {}\n    public setValid(index: number, valid: boolean) {\n        this.length = Math.max(index + 1, this.length);\n        return valid;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Date_, DateDay, DateMillisecond } from '../type';\n\n/** @ignore */\nexport class DateBuilder<T extends Date_ = Date_, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class DateDayBuilder<TNull = any> extends DateBuilder<DateDay, TNull> {}\n/** @ignore */\nexport class DateMillisecondBuilder<TNull = any> extends DateBuilder<DateMillisecond, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Decimal } from '../type';\nimport { FixedWidthBuilder } from '../builder';\n\n/** @ignore */\nexport class DecimalBuilder<TNull = any> extends FixedWidthBuilder<Decimal, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { IntBuilder } from './int';\nimport { Dictionary, DataType } from '../type';\nimport { Builder, BuilderOptions } from '../builder';\n\ntype DictionaryHashFunction = (x: any) => string | number;\n\nexport interface DictionaryBuilderOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    dictionaryHashFunction?: DictionaryHashFunction;\n}\n\n/** @ignore */\nexport class DictionaryBuilder<T extends Dictionary, TNull = any> extends Builder<T, TNull> {\n\n    protected _dictionaryOffset: number;\n    protected _dictionary?: Vector<T['dictionary']>;\n    protected _keysToIndices: { [key: string]: number };\n    public readonly indices: IntBuilder<T['indices']>;\n    public readonly dictionary: Builder<T['dictionary']>;\n\n    constructor({ 'type': type, 'nullValues': nulls, 'dictionaryHashFunction': hashFn }: DictionaryBuilderOptions<T, TNull>) {\n        super({ type: new Dictionary(type.dictionary, type.indices, type.id, type.isOrdered) as T });\n        this._nulls = <any> null;\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        this.indices = Builder.new({ 'type': this.type.indices, 'nullValues': nulls }) as IntBuilder<T['indices']>;\n        this.dictionary = Builder.new({ 'type': this.type.dictionary, 'nullValues': null }) as Builder<T['dictionary']>;\n        if (typeof hashFn === 'function') {\n            this.valueToKey = hashFn;\n        }\n    }\n\n    public get values() { return this.indices.values; }\n    public get nullCount() { return this.indices.nullCount; }\n    public get nullBitmap() { return this.indices.nullBitmap; }\n    public get byteLength() { return this.indices.byteLength + this.dictionary.byteLength; }\n    public get reservedLength() { return this.indices.reservedLength + this.dictionary.reservedLength; }\n    public get reservedByteLength() { return this.indices.reservedByteLength + this.dictionary.reservedByteLength; }\n    public isValid(value: T['TValue'] | TNull) { return this.indices.isValid(value); }\n    public setValid(index: number, valid: boolean) {\n        const indices = this.indices;\n        valid = indices.setValid(index, valid);\n        this.length = indices.length;\n        return valid;\n    }\n    public setValue(index: number, value: T['TValue']) {\n        let keysToIndices = this._keysToIndices;\n        let key = this.valueToKey(value);\n        let idx = keysToIndices[key];\n        if (idx === undefined) {\n            keysToIndices[key] = idx = this._dictionaryOffset + this.dictionary.append(value).length - 1;\n        }\n        return this.indices.setValue(index, idx);\n    }\n    public flush() {\n        const type = this.type;\n        const prev = this._dictionary;\n        const curr = this.dictionary.toVector();\n        const data = this.indices.flush().clone(type);\n        data.dictionary = prev ? prev.concat(curr) : curr;\n        this.finished || (this._dictionaryOffset += curr.length);\n        this._dictionary = data.dictionary as Vector<T['dictionary']>;\n        this.clear();\n        return data;\n    }\n    public finish() {\n        this.indices.finish();\n        this.dictionary.finish();\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        return super.finish();\n    }\n    public clear() {\n        this.indices.clear();\n        this.dictionary.clear();\n        return super.clear();\n    }\n    public valueToKey(val: any): string | number {\n        return typeof val === 'string' ? val : `${val}`;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedSizeBinary } from '../type';\nimport { FixedWidthBuilder } from '../builder';\n\n/** @ignore */\nexport class FixedSizeBinaryBuilder<TNull = any> extends FixedWidthBuilder<FixedSizeBinary, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nconst f64 = new Float64Array(1);\nconst u32 = new Uint32Array(f64.buffer);\n\n/**\n * Convert uint16 (logically a float16) to a JS float64. Inspired by numpy's `npy_half_to_double`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L29\n * @param h {number} the uint16 to convert\n * @private\n * @ignore\n */\nexport function uint16ToFloat64(h: number) {\n    let expo = (h & 0x7C00) >> 10;\n    let sigf = (h & 0x03FF) / 1024;\n    let sign = (-1) ** ((h & 0x8000) >> 15);\n    switch (expo) {\n        case 0x1F: return sign * (sigf ? NaN : 1 / 0);\n        case 0x00: return sign * (sigf ? 6.103515625e-5 * sigf : 0);\n    }\n    return sign * (2 ** (expo - 15)) * (1 + sigf);\n}\n\n/**\n * Convert a float64 to uint16 (assuming the float64 is logically a float16). Inspired by numpy's `npy_double_to_half`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L43\n * @param d {number} The float64 to convert\n * @private\n * @ignore\n */\nexport function float64ToUint16(d: number) {\n\n    if (d !== d) { return 0x7E00; } // NaN\n\n    f64[0] = d;\n\n    // Magic numbers:\n    // 0x80000000 = 10000000 00000000 00000000 00000000 -- masks the 32nd bit\n    // 0x7ff00000 = 01111111 11110000 00000000 00000000 -- masks the 21st-31st bits\n    // 0x000fffff = 00000000 00001111 11111111 11111111 -- masks the 1st-20th bit\n\n    let sign = (u32[1] & 0x80000000) >> 16 & 0xFFFF;\n    let expo = (u32[1] & 0x7ff00000), sigf = 0x0000;\n\n    if (expo >= 0x40f00000) {\n        //\n        // If exponent overflowed, the float16 is either NaN or Infinity.\n        // Rules to propagate the sign bit: mantissa > 0 ? NaN : +/-Infinity\n        //\n        // Magic numbers:\n        // 0x40F00000 = 01000000 11110000 00000000 00000000 -- 6-bit exponent overflow\n        // 0x7C000000 = 01111100 00000000 00000000 00000000 -- masks the 27th-31st bits\n        //\n        // returns:\n        // qNaN, aka 32256 decimal, 0x7E00 hex, or 01111110 00000000 binary\n        // sNaN, aka 32000 decimal, 0x7D00 hex, or 01111101 00000000 binary\n        // +inf, aka 31744 decimal, 0x7C00 hex, or 01111100 00000000 binary\n        // -inf, aka 64512 decimal, 0xFC00 hex, or 11111100 00000000 binary\n        //\n        // If mantissa is greater than 23 bits, set to +Infinity like numpy\n        if (u32[0] > 0) {\n            expo = 0x7C00;\n        } else {\n            expo = (expo & 0x7C000000) >> 16;\n            sigf = (u32[1] & 0x000fffff) >> 10;\n        }\n    } else if (expo <= 0x3f000000) {\n        //\n        // If exponent underflowed, the float is either signed zero or subnormal.\n        //\n        // Magic numbers:\n        // 0x3F000000 = 00111111 00000000 00000000 00000000 -- 6-bit exponent underflow\n        //\n        sigf = 0x100000 + (u32[1] & 0x000fffff);\n        sigf = 0x100000 + (sigf << ((expo >> 20) - 998)) >> 21;\n        expo = 0;\n    } else {\n        //\n        // No overflow or underflow, rebase the exponent and round the mantissa\n        // Magic numbers:\n        // 0x200 = 00000010 00000000 -- masks off the 10th bit\n        //\n\n        // Ensure the first mantissa bit (the 10th one) is 1 and round\n        expo = (expo - 0x3f000000) >> 10;\n        sigf = ((u32[1] & 0x000fffff) + 0x200) >> 10;\n    }\n\n    return sign | expo | sigf & 0xFFFF;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { float64ToUint16 } from '../util/math';\nimport { FixedWidthBuilder } from '../builder';\nimport { Float, Float16, Float32, Float64 } from '../type';\n\n/** @ignore */\nexport class FloatBuilder<T extends Float = Float, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n\n/** @ignore */\nexport class Float16Builder<TNull = any> extends FloatBuilder<Float16, TNull> {\n    public setValue(index: number, value: number) {\n        // convert JS float64 to a uint16\n        this._values.set(index, float64ToUint16(value));\n    }\n}\n\n/** @ignore */\nexport class Float32Builder<TNull = any> extends FloatBuilder<Float32, TNull> {\n    public setValue(index: number, value: number) {\n        this._values.set(index, value);\n    }\n}\n\n/** @ignore */\nexport class Float64Builder<TNull = any> extends FloatBuilder<Float64, TNull> {\n    public setValue(index: number, value: number) {\n        this._values.set(index, value);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { ArrayBufferViewInput, toArrayBufferView } from './buffer';\nimport { TypedArray, TypedArrayConstructor } from '../interfaces';\nimport { BigIntArray, BigIntArrayConstructor } from '../interfaces';\nimport { BigIntAvailable, BigInt64Array, BigUint64Array } from './compat';\n\n/** @ignore */\nexport const isArrowBigNumSymbol = Symbol.for('isArrowBigNum');\n\n/** @ignore */ type BigNumArray = IntArray | UintArray;\n/** @ignore */ type IntArray = Int8Array | Int16Array | Int32Array;\n/** @ignore */ type UintArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray;\n\n/** @ignore */\nfunction BigNum(this: any, x: any, ...xs: any) {\n    if (xs.length === 0) {\n        return Object.setPrototypeOf(toArrayBufferView(this['TypedArray'], x), this.constructor.prototype);\n    }\n    return Object.setPrototypeOf(new this['TypedArray'](x, ...xs), this.constructor.prototype);\n}\n\nBigNum.prototype[isArrowBigNumSymbol] = true;\nBigNum.prototype.toJSON = function<T extends BN<BigNumArray>>(this: T) { return `\"${bignumToString(this)}\"`; };\nBigNum.prototype.valueOf = function<T extends BN<BigNumArray>>(this: T) { return bignumToNumber(this); };\nBigNum.prototype.toString = function<T extends BN<BigNumArray>>(this: T) { return bignumToString(this); };\nBigNum.prototype[Symbol.toPrimitive] = function<T extends BN<BigNumArray>>(this: T, hint: 'string' | 'number' | 'default' = 'default') {\n    switch (hint) {\n        case 'number': return bignumToNumber(this);\n        case 'string': return bignumToString(this);\n        case 'default': return bignumToBigInt(this);\n    }\n    return bignumToString(this);\n};\n\n/** @ignore */\ntype TypedArrayConstructorArgs =\n    [number | void] |\n    [Iterable<number> | Iterable<bigint>] |\n    [ArrayBufferLike, number | void, number | void] ;\n\n/** @ignore */\nfunction SignedBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction UnsignedBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction DecimalBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n\nObject.setPrototypeOf(SignedBigNum.prototype,   Object.create(Int32Array.prototype));\nObject.setPrototypeOf(UnsignedBigNum.prototype, Object.create(Uint32Array.prototype));\nObject.setPrototypeOf(DecimalBigNum.prototype,  Object.create(Uint32Array.prototype));\nObject.assign(SignedBigNum.prototype,   BigNum.prototype, { 'constructor': SignedBigNum,   'signed': true,  'TypedArray': Int32Array,  'BigIntArray': BigInt64Array  });\nObject.assign(UnsignedBigNum.prototype, BigNum.prototype, { 'constructor': UnsignedBigNum, 'signed': false, 'TypedArray': Uint32Array, 'BigIntArray': BigUint64Array });\nObject.assign(DecimalBigNum.prototype,  BigNum.prototype, { 'constructor': DecimalBigNum,  'signed': true,  'TypedArray': Uint32Array, 'BigIntArray': BigUint64Array });\n\n/** @ignore */\nfunction bignumToNumber<T extends BN<BigNumArray>>(bn: T) {\n    let { buffer, byteOffset, length, 'signed': signed } = bn;\n    let words = new Int32Array(buffer, byteOffset, length);\n    let number = 0, i = 0, n = words.length, hi, lo;\n    while (i < n) {\n        lo = words[i++];\n        hi = words[i++];\n        signed || (hi = hi >>> 0);\n        number += (lo >>> 0) + (hi * (i ** 32));\n    }\n    return number;\n}\n\n/** @ignore */\nexport let bignumToString: { <T extends BN<BigNumArray>>(a: T): string; };\n/** @ignore */\nexport let bignumToBigInt: { <T extends BN<BigNumArray>>(a: T): bigint; };\n\nif (!BigIntAvailable) {\n    bignumToString = decimalToString;\n    bignumToBigInt = <any> bignumToString;\n} else {\n    bignumToBigInt = (<T extends BN<BigNumArray>>(a: T) => a.byteLength === 8 ? new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0] : <any>decimalToString(a));\n    bignumToString = (<T extends BN<BigNumArray>>(a: T) => a.byteLength === 8 ? `${new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0]}` : decimalToString(a));\n}\n\n/** @ignore */\nfunction decimalToString<T extends BN<BigNumArray>>(a: T) {\n    let digits = '';\n    let base64 = new Uint32Array(2);\n    let base32 = new Uint16Array(a.buffer, a.byteOffset, a.byteLength / 2);\n    let checks = new Uint32Array((base32 = new Uint16Array(base32).reverse()).buffer);\n    let i = -1, n = base32.length - 1;\n    do {\n        for (base64[0] = base32[i = 0]; i < n;) {\n            base32[i++] = base64[1] = base64[0] / 10;\n            base64[0] = ((base64[0] - base64[1] * 10) << 16) + base32[i];\n        }\n        base32[i] = base64[1] = base64[0] / 10;\n        base64[0] = base64[0] - base64[1] * 10;\n        digits = `${base64[0]}${digits}`;\n    } while (checks[0] || checks[1] || checks[2] || checks[3]);\n    return digits ? digits : `0`;\n}\n\n/** @ignore */\nexport class BN<T extends BigNumArray> {\n    /** @nocollapse */\n    public static new<T extends BigNumArray>(num: T, isSigned?: boolean): (T & BN<T>) {\n        switch (isSigned) {\n            case true: return new (<any> SignedBigNum)(num) as (T & BN<T>);\n            case false: return new (<any> UnsignedBigNum)(num) as (T & BN<T>);\n        }\n        switch (num.constructor) {\n            case Int8Array:\n            case Int16Array:\n            case Int32Array:\n            case BigInt64Array:\n                return new (<any> SignedBigNum)(num) as (T & BN<T>);\n        }\n        if (num.byteLength === 16) {\n            return new (<any> DecimalBigNum)(num) as (T & BN<T>);\n        }\n        return new (<any> UnsignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static signed<T extends IntArray>(num: T): (T & BN<T>) {\n        return new (<any> SignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static unsigned<T extends UintArray>(num: T): (T & BN<T>) {\n        return new (<any> UnsignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static decimal<T extends UintArray>(num: T): (T & BN<T>) {\n        return new (<any> DecimalBigNum)(num) as (T & BN<T>);\n    }\n    constructor(num: T, isSigned?: boolean) {\n        return BN.new(num, isSigned) as any;\n    }\n}\n\n/** @ignore */\nexport interface BN<T extends BigNumArray> extends TypedArrayLike<T> {\n\n    new<T extends ArrayBufferViewInput>(buffer: T, signed?: boolean): T;\n\n    readonly signed: boolean;\n    readonly TypedArray: TypedArrayConstructor<TypedArray>;\n    readonly BigIntArray: BigIntArrayConstructor<BigIntArray>;\n\n    [Symbol.toStringTag]:\n        'Int8Array'         |\n        'Int16Array'        |\n        'Int32Array'        |\n        'Uint8Array'        |\n        'Uint16Array'       |\n        'Uint32Array'       |\n        'Uint8ClampedArray';\n\n    /**\n     * Convert the bytes to their (positive) decimal representation for printing\n     */\n    toString(): string;\n    /**\n     * Down-convert the bytes to a 53-bit precision integer. Invoked by JS for\n     * arithmetic operators, like `+`. Easy (and unsafe) way to convert BN to\n     * number via `+bn_inst`\n     */\n    valueOf(): number;\n    /**\n     * Return the JSON representation of the bytes. Must be wrapped in double-quotes,\n     * so it's compatible with JSON.stringify().\n     */\n    toJSON(): string;\n    [Symbol.toPrimitive](hint?: any): number | string | bigint;\n}\n\n/** @ignore */\ninterface TypedArrayLike<T extends BigNumArray> {\n\n    readonly length: number;\n    readonly buffer: ArrayBuffer;\n    readonly byteLength: number;\n    readonly byteOffset: number;\n    readonly BYTES_PER_ELEMENT: number;\n\n    includes(searchElement: number, fromIndex?: number | undefined): boolean;\n    copyWithin(target: number, start: number, end?: number | undefined): this;\n    every(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): boolean;\n    fill(value: number, start?: number | undefined, end?: number | undefined): this;\n    filter(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): T;\n    find(predicate: (value: number, index: number, obj: T) => boolean, thisArg?: any): number | undefined;\n    findIndex(predicate: (value: number, index: number, obj: T) => boolean, thisArg?: any): number;\n    forEach(callbackfn: (value: number, index: number, array: T) => void, thisArg?: any): void;\n    indexOf(searchElement: number, fromIndex?: number | undefined): number;\n    join(separator?: string | undefined): string;\n    lastIndexOf(searchElement: number, fromIndex?: number | undefined): number;\n    map(callbackfn: (value: number, index: number, array: T) => number, thisArg?: any): T;\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number): number;\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number, initialValue: number): number;\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: T) => U, initialValue: U): U;\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number): number;\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number, initialValue: number): number;\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: T) => U, initialValue: U): U;\n    reverse(): T;\n    set(array: ArrayLike<number>, offset?: number | undefined): void;\n    slice(start?: number | undefined, end?: number | undefined): T;\n    some(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): boolean;\n    sort(compareFn?: ((a: number, b: number) => number) | undefined): this;\n    subarray(begin: number, end?: number | undefined): T;\n    toLocaleString(): string;\n    entries(): IterableIterator<[number, number]>;\n    keys(): IterableIterator<number>;\n    values(): IterableIterator<number>;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { bignumToBigInt } from '../util/bn';\nimport { WideBufferBuilder } from './buffer';\nimport { BigInt64Array } from '../util/compat';\nimport { FixedWidthBuilder, BuilderOptions } from '../builder';\nimport { Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64 } from '../type';\n\n/** @ignore */\nexport class IntBuilder<T extends Int = Int, TNull = any> extends FixedWidthBuilder<T, TNull> {\n    public setValue(index: number, value: T['TValue']) {\n        this._values.set(index, value);\n    }\n}\n\n/** @ignore */\nexport class Int8Builder<TNull = any> extends IntBuilder<Int8, TNull> {}\n/** @ignore */\nexport class Int16Builder<TNull = any> extends IntBuilder<Int16, TNull> {}\n/** @ignore */\nexport class Int32Builder<TNull = any> extends IntBuilder<Int32, TNull> {}\n/** @ignore */\nexport class Int64Builder<TNull = any> extends IntBuilder<Int64, TNull> {\n    protected _values: WideBufferBuilder<Int32Array, BigInt64Array>;\n    constructor(options: BuilderOptions<Int64, TNull>) {\n        if (options['nullValues']) {\n            options['nullValues'] = (options['nullValues'] as TNull[]).map(toBigInt);\n        }\n        super(options);\n        this._values = new WideBufferBuilder(new Int32Array(0), 2);\n    }\n    public get values64() { return this._values.buffer64; }\n    public isValid(value: Int32Array | bigint | TNull) { return super.isValid(toBigInt(value)); }\n}\n\n/** @ignore */\nexport class Uint8Builder<TNull = any> extends IntBuilder<Uint8, TNull> {}\n/** @ignore */\nexport class Uint16Builder<TNull = any> extends IntBuilder<Uint16, TNull> {}\n/** @ignore */\nexport class Uint32Builder<TNull = any> extends IntBuilder<Uint32, TNull> {}\n/** @ignore */\nexport class Uint64Builder<TNull = any> extends IntBuilder<Uint64, TNull> {\n    protected _values: WideBufferBuilder<Uint32Array, BigUint64Array>;\n    constructor(options: BuilderOptions<Uint64, TNull>) {\n        if (options['nullValues']) {\n            options['nullValues'] = (options['nullValues'] as TNull[]).map(toBigInt);\n        }\n        super(options);\n        this._values = new WideBufferBuilder(new Uint32Array(0), 2);\n    }\n    public get values64() { return this._values.buffer64; }\n    public isValid(value: Uint32Array | bigint | TNull) { return super.isValid(toBigInt(value)); }\n}\n\nconst toBigInt = ((memo: any) => (value: any) => {\n    if (ArrayBuffer.isView(value)) {\n        memo.buffer = value.buffer;\n        memo.byteOffset = value.byteOffset;\n        memo.byteLength = value.byteLength;\n        value = bignumToBigInt(memo);\n        memo.buffer = null;\n    }\n    return value;\n})({ 'BigIntArray': BigInt64Array });\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond } from '../type';\n\n/** @ignore */\nexport class TimeBuilder<T extends Time = Time, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class TimeSecondBuilder<TNull = any> extends TimeBuilder<TimeSecond, TNull> {}\n/** @ignore */\nexport class TimeMillisecondBuilder<TNull = any> extends TimeBuilder<TimeMillisecond, TNull> {}\n/** @ignore */\nexport class TimeMicrosecondBuilder<TNull = any> extends TimeBuilder<TimeMicrosecond, TNull> {}\n/** @ignore */\nexport class TimeNanosecondBuilder<TNull = any> extends TimeBuilder<TimeNanosecond, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond } from '../type';\n\n/** @ignore */\nexport class TimestampBuilder<T extends Timestamp = Timestamp, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class TimestampSecondBuilder<TNull = any> extends TimestampBuilder<TimestampSecond, TNull> {}\n/** @ignore */\nexport class TimestampMillisecondBuilder<TNull = any> extends TimestampBuilder<TimestampMillisecond, TNull> {}\n/** @ignore */\nexport class TimestampMicrosecondBuilder<TNull = any> extends TimestampBuilder<TimestampMicrosecond, TNull> {}\n/** @ignore */\nexport class TimestampNanosecondBuilder<TNull = any> extends TimestampBuilder<TimestampNanosecond, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Interval, IntervalDayTime, IntervalYearMonth } from '../type';\n\n/** @ignore */\nexport class IntervalBuilder<T extends Interval = Interval, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class IntervalDayTimeBuilder<TNull = any> extends IntervalBuilder<IntervalDayTime, TNull> {}\n/** @ignore */\nexport class IntervalYearMonthBuilder<TNull = any> extends IntervalBuilder<IntervalYearMonth, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Binary } from '../type';\nimport { toUint8Array } from '../util/buffer';\nimport { BufferBuilder } from './buffer';\nimport { VariableWidthBuilder, BuilderOptions } from '../builder';\n\n/** @ignore */\nexport class BinaryBuilder<TNull = any> extends VariableWidthBuilder<Binary, TNull> {\n    constructor(opts: BuilderOptions<Binary, TNull>) {\n        super(opts);\n        this._values = new BufferBuilder(new Uint8Array(0));\n    }\n    public get byteLength(): number {\n        let size = this._pendingLength + (this.length * 4);\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        return size;\n    }\n    public setValue(index: number, value: Uint8Array) {\n        return super.setValue(index, toUint8Array(value));\n    }\n    protected _flushPending(pending: Map<number, Uint8Array | undefined>, pendingLength: number) {\n        const offsets = this._offsets;\n        const data = this._values.reserve(pendingLength).buffer;\n        let index = 0, length = 0, offset = 0, value: Uint8Array | undefined;\n        for ([index, value] of pending) {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            } else {\n                length = value.length;\n                data.set(value, offset);\n                offsets.set(index, length);\n                offset += length;\n            }\n        }\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Utf8 } from '../type';\nimport { encodeUtf8 } from '../util/utf8';\nimport { BinaryBuilder } from './binary';\nimport { BufferBuilder } from './buffer';\nimport { VariableWidthBuilder, BuilderOptions } from '../builder';\n\n/** @ignore */\nexport class Utf8Builder<TNull = any> extends VariableWidthBuilder<Utf8, TNull> {\n    constructor(opts: BuilderOptions<Utf8, TNull>) {\n        super(opts);\n        this._values = new BufferBuilder(new Uint8Array(0));\n    }\n    public get byteLength(): number {\n        let size = this._pendingLength + (this.length * 4);\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        return size;\n    }\n    public setValue(index: number, value: string) {\n        return super.setValue(index, encodeUtf8(value) as any);\n    }\n    // @ts-ignore\n    protected _flushPending(pending: Map<number, Uint8Array | undefined>, pendingLength: number): void {}\n}\n\n(Utf8Builder.prototype as any)._flushPending = (BinaryBuilder.prototype as any)._flushPending;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\n\n/** @ignore */\nexport class Run<T extends DataType = any, TNull = any> {\n    // @ts-ignore\n    protected _values: ArrayLike<T['TValue'] | TNull>;\n    public get length() { return this._values.length; }\n    public get(index: number) { return this._values[index]; }\n    public clear() { this._values = <any> null; return this; }\n    public bind(values: Vector<T> | ArrayLike<T['TValue'] | TNull>) {\n        if (values instanceof Vector) {\n            return values;\n        }\n        this._values = values;\n        return this as any;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { StructVector } from './struct';\nimport { valueToString } from '../util/pretty';\nimport { DataType, Struct, RowLike } from '../type';\n\n/** @ignore */ const kParent = Symbol.for('parent');\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n/** @ignore */ const kKeyToIdx = Symbol.for('keyToIdx');\n/** @ignore */ const kIdxToVal = Symbol.for('idxToVal');\n/** @ignore */ const kCustomInspect = Symbol.for('nodejs.util.inspect.custom');\n\nabstract class Row<K extends PropertyKey = any, V = any> implements Map<K, V> {\n\n    public readonly size: number;\n    public readonly [Symbol.toStringTag]: string;\n\n    protected [kRowIndex]: number;\n    protected [kParent]: Vector<Struct>;\n    protected [kKeyToIdx]: Map<K, number>;\n    protected [kIdxToVal]: V[];\n\n    constructor(parent: Vector<Struct>, numKeys: number) {\n        this[kParent] = parent;\n        this.size = numKeys;\n    }\n\n    public abstract keys(): IterableIterator<K>;\n    public abstract values(): IterableIterator<V>;\n    public abstract getKey(idx: number): K;\n    public abstract getIndex(key: K): number;\n    public abstract getValue(idx: number): V;\n    public abstract setValue(idx: number, val: V): void;\n\n    public entries() { return this[Symbol.iterator](); }\n\n    public has(key: K) { return this.get(key) !== undefined; }\n\n    public get(key: K) {\n        let val = undefined;\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx !== undefined) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            } else if ((idx = this.getIndex(key)) > -1) {\n                ktoi.set(key, idx);\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            }\n        }\n        return val;\n    }\n\n    public set(key: K, val: V) {\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx === undefined) {\n                ktoi.set(key, idx = this.getIndex(key));\n            }\n            if (idx > -1) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                itov[idx] = <any> this.setValue(idx, val);\n            }\n        }\n        return this;\n    }\n\n    public clear(): void { throw new Error(`Clearing ${this[Symbol.toStringTag]} not supported.`); }\n\n    public delete(_: K): boolean { throw new Error(`Deleting ${this[Symbol.toStringTag]} values not supported.`); }\n\n    public *[Symbol.iterator](): IterableIterator<[K, V]> {\n\n        const ki = this.keys();\n        const vi = this.values();\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n\n        for (let k: K, v: V, i = 0, kr: IteratorResult<K>, vr: IteratorResult<V>;\n            !((kr = ki.next()).done || (vr = vi.next()).done);\n            ++i\n        ) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            yield [k, v];\n        }\n    }\n\n    public forEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void {\n\n        const ki = this.keys();\n        const vi = this.values();\n        const callback = thisArg === undefined ? callbackfn :\n            (v: V, k: K, m: Map<K, V>) => callbackfn.call(thisArg, v, k, m);\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n\n        for (let k: K, v: V, i = 0, kr: IteratorResult<K>, vr: IteratorResult<V>;\n            !((kr = ki.next()).done || (vr = vi.next()).done);\n            ++i\n        ) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            callback(v, k, this);\n        }\n    }\n\n    public toArray() { return [...this.values()]; }\n    public toJSON() {\n        const obj = {} as any;\n        this.forEach((val, key) => obj[key] = val);\n        return obj;\n    }\n\n    public inspect() { return this.toString(); }\n    public [kCustomInspect]() { return this.toString(); }\n    public toString() {\n        const str: string[] = [];\n        this.forEach((val, key) => {\n            key = valueToString(key);\n            val = valueToString(val);\n            str.push(`${key}: ${val}`);\n        });\n        return `{ ${str.join(', ')} }`;\n    }\n\n    protected static [Symbol.toStringTag] = ((proto: Row) => {\n        Object.defineProperties(proto, {\n            'size': { writable: true, enumerable: false, configurable: false, value: 0 },\n            [kParent]: { writable: true, enumerable: false, configurable: false, value: null },\n            [kRowIndex]: { writable: true, enumerable: false, configurable: false, value: -1 },\n        });\n        return (proto as any)[Symbol.toStringTag] = 'Row';\n    })(Row.prototype);\n}\n\nexport class MapRow<K extends DataType = any, V extends DataType = any> extends Row<K['TValue'], V['TValue'] | null> {\n    constructor(slice: Vector<Struct<{ key: K, value: V }>>) {\n        super(slice, slice.length);\n        return createRowProxy(this);\n    }\n    public keys() {\n        return this[kParent].getChildAt(0)![Symbol.iterator]();\n    }\n    public values() {\n        return this[kParent].getChildAt(1)![Symbol.iterator]();\n    }\n    public getKey(idx: number): K['TValue'] {\n        return this[kParent].getChildAt(0)!.get(idx);\n    }\n    public getIndex(key: K['TValue']): number {\n        return this[kParent].getChildAt(0)!.indexOf(key);\n    }\n    public getValue(index: number): V['TValue'] | null {\n        return this[kParent].getChildAt(1)!.get(index);\n    }\n    public setValue(index: number, value: V['TValue'] | null): void {\n        this[kParent].getChildAt(1)!.set(index, value);\n    }\n}\n\nexport class StructRow<T extends { [key: string]: DataType } = any> extends Row<keyof T, T[keyof T]['TValue'] | null> {\n    constructor(parent: StructVector<T>) {\n        super(parent, parent.type.children.length);\n        return defineRowProxyProperties(this);\n    }\n    public *keys() {\n        for (const field of this[kParent].type.children) {\n            yield field.name as keyof T;\n        }\n    }\n    public *values() {\n        for (const field of this[kParent].type.children) {\n            yield (this as RowLike<T>)[field.name];\n        }\n    }\n    public getKey(idx: number): keyof T {\n        return this[kParent].type.children[idx].name as keyof T;\n    }\n    public getIndex(key: keyof T): number {\n        return this[kParent].type.children.findIndex((f) => f.name === key);\n    }\n    public getValue(index: number): T[keyof T]['TValue'] | null {\n        return this[kParent].getChildAt(index)!.get(this[kRowIndex]);\n    }\n    public setValue(index: number, value: T[keyof T]['TValue'] | null): void {\n        return this[kParent].getChildAt(index)!.set(this[kRowIndex], value);\n    }\n}\n\nObject.setPrototypeOf(Row.prototype, Map.prototype);\n\n/** @ignore */\nconst defineRowProxyProperties = (() => {\n    const desc = { enumerable: true, configurable: false, get: null as any, set: null as any };\n    return <T extends Row>(row: T) => {\n        let idx = -1, ktoi = row[kKeyToIdx] || (row[kKeyToIdx] = new Map());\n        const getter = (key: any) => function(this: T) { return this.get(key); };\n        const setter = (key: any) => function(this: T, val: any) { return this.set(key, val); };\n        for (const key of row.keys()) {\n            ktoi.set(key, ++idx);\n            desc.get = getter(key);\n            desc.set = setter(key);\n            row.hasOwnProperty(key) || (desc.enumerable = true, Object.defineProperty(row, key, desc));\n            row.hasOwnProperty(idx) || (desc.enumerable = false, Object.defineProperty(row, idx, desc));\n        }\n        desc.get = desc.set = null;\n        return row;\n    };\n})();\n\n/** @ignore */\nconst createRowProxy = (() => {\n    if (typeof Proxy === 'undefined') {\n        return defineRowProxyProperties;\n    }\n    const has = Row.prototype.has;\n    const get = Row.prototype.get;\n    const set = Row.prototype.set;\n    const getKey = Row.prototype.getKey;\n    const RowProxyHandler: ProxyHandler<Row> = {\n        isExtensible() { return false; },\n        deleteProperty() { return false; },\n        preventExtensions() { return true; },\n        ownKeys(row: Row) { return [...row.keys()].map((x) => `${x}`); },\n        has(row: Row, key: PropertyKey) {\n            switch (key) {\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag: case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx: case kCustomInspect:\n                    return true;\n            }\n            if (typeof key === 'number' && !row.has(key)) {\n                key = row.getKey(key);\n            }\n            return row.has(key);\n        },\n        get(row: Row, key: PropertyKey, receiver: any) {\n            switch (key) {\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag: case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx: case kCustomInspect:\n                    return Reflect.get(row, key, receiver);\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return get.call(receiver, key);\n        },\n        set(row: Row, key: PropertyKey, val: any, receiver: any) {\n            switch (key) {\n                case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx:\n                    return Reflect.set(row, key, val, receiver);\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag:\n                    return false;\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return has.call(receiver, key) ? !!set.call(receiver, key, val) : false;\n        },\n    };\n    return <T extends Row>(row: T) => new Proxy(row, RowProxyHandler) as T;\n})();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { MapRow, StructRow } from '../vector/row';\nimport { compareArrayLike } from '../util/buffer';\nimport { BigInt, BigIntAvailable } from './compat';\n\n/** @ignore */\ntype RangeLike = { length: number; stride?: number };\n/** @ignore */\ntype ClampThen<T extends RangeLike> = (source: T, index: number) => any;\n/** @ignore */\ntype ClampRangeThen<T extends RangeLike> = (source: T, offset: number, length: number) => any;\n\nexport function clampIndex<T extends RangeLike>(source: T, index: number): number;\nexport function clampIndex<T extends RangeLike, N extends ClampThen<T> = ClampThen<T>>(source: T, index: number, then: N): ReturnType<N>;\n/** @ignore */\nexport function clampIndex<T extends RangeLike, N extends ClampThen<T> = ClampThen<T>>(source: T, index: number, then?: N) {\n    const length = source.length;\n    const adjust = index > -1 ? index : (length + (index % length));\n    return then ? then(source, adjust) : adjust;\n}\n\n/** @ignore */\nlet tmp: number;\nexport function clampRange<T extends RangeLike>(source: T, begin: number | undefined, end: number | undefined): [number, number];\nexport function clampRange<T extends RangeLike, N extends ClampRangeThen<T> = ClampRangeThen<T>>(source: T, begin: number | undefined, end: number | undefined, then: N): ReturnType<N>;\n/** @ignore */\nexport function clampRange<T extends RangeLike, N extends ClampRangeThen<T> = ClampRangeThen<T>>(source: T, begin: number | undefined, end: number | undefined, then?: N) {\n\n    // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n    // clamp between 0 and length, and wrap around on negative indices, e.g.\n    // slice(-1, 5) or slice(5, -1)\n    let { length: len = 0 } = source;\n    let lhs = typeof begin !== 'number' ? 0 : begin;\n    let rhs = typeof end !== 'number' ? len : end;\n    // wrap around on negative start/end positions\n    (lhs < 0) && (lhs = ((lhs % len) + len) % len);\n    (rhs < 0) && (rhs = ((rhs % len) + len) % len);\n    // ensure lhs <= rhs\n    (rhs < lhs) && (tmp = lhs, lhs = rhs, rhs = tmp);\n     // ensure rhs <= length\n    (rhs > len) && (rhs = len);\n\n    return then ? then(source, lhs, rhs) : [lhs, rhs];\n}\n\nconst big0 = BigIntAvailable ? BigInt(0) : 0;\nconst isNaNFast = (value: any) => value !== value;\n\n/** @ignore */\nexport function createElementComparator(search: any) {\n    let typeofSearch = typeof search;\n    // Compare primitives\n    if (typeofSearch !== 'object' || search === null) {\n        // Compare NaN\n        if (isNaNFast(search)) {\n            return isNaNFast;\n        }\n        return typeofSearch !== 'bigint'\n            ? (value: any) => value === search\n            : (value: any) => (big0 + value) === search;\n    }\n    // Compare Dates\n    if (search instanceof Date) {\n        const valueOfSearch = search.valueOf();\n        return (value: any) => value instanceof Date ? (value.valueOf() === valueOfSearch) : false;\n    }\n    // Compare TypedArrays\n    if (ArrayBuffer.isView(search)) {\n        return (value: any) => value ? compareArrayLike(search, value) : false;\n    }\n    // Compare Maps and Rows\n    if (search instanceof Map) { return creatMapComparator(search); }\n    // Compare Array-likes\n    if (Array.isArray(search)) { return createArrayLikeComparator(search); }\n    // Compare Vectors\n    if (search instanceof Vector) { return createVectorComparator(search); }\n    // Compare non-empty Objects\n    return createObjectComparator(search);\n}\n\n/** @ignore */\nfunction createArrayLikeComparator(lhs: ArrayLike<any>) {\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[i]);\n    }\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction creatMapComparator(lhs: Map<any, any>) {\n    let i = -1;\n    const comparators = [] as ((x: any) => boolean)[];\n    lhs.forEach((v) => comparators[++i] = createElementComparator(v));\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction createVectorComparator(lhs: Vector<any>) {\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs.get(i));\n    }\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction createObjectComparator(lhs: any) {\n    const keys = Object.keys(lhs);\n    // Only compare non-empty Objects\n    if (keys.length === 0) { return () => false; }\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = keys.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[keys[i]]);\n    }\n    return createSubElementsComparator(comparators, keys);\n}\n\nfunction createSubElementsComparator(comparators: ((x: any) => boolean)[], keys?: Iterable<string>) {\n    return (rhs: any) => {\n        if (!rhs || typeof rhs !== 'object') {\n            return false;\n        }\n        switch (rhs.constructor) {\n            case Array: return compareArray(comparators, rhs);\n            case Map:\n            case MapRow:\n            case StructRow:\n                return compareObject(comparators, rhs, rhs.keys());\n            case Object:\n            case undefined: // support `Object.create(null)` objects\n                return compareObject(comparators, rhs, keys || Object.keys(rhs));\n        }\n        return rhs instanceof Vector ? compareVector(comparators, rhs) : false;\n    };\n}\n\nfunction compareArray(comparators: ((x: any) => boolean)[], arr: any[]) {\n    const n = comparators.length;\n    if (arr.length !== n) { return false; }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](arr[i]))) { return false; }\n    }\n    return true;\n}\n\nfunction compareVector(comparators: ((x: any) => boolean)[], vec: Vector) {\n    const n = comparators.length;\n    if (vec.length !== n) { return false; }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](vec.get(i)))) { return false; }\n    }\n    return true;\n}\n\nfunction compareObject(comparators: ((x: any) => boolean)[], obj: Map<any, any>, keys: Iterable<string>) {\n\n    const lKeyItr = keys[Symbol.iterator]();\n    const rKeyItr = obj instanceof Map ? obj.keys() : Object.keys(obj)[Symbol.iterator]();\n    const rValItr = obj instanceof Map ? obj.values() : Object.values(obj)[Symbol.iterator]();\n\n    let i = 0;\n    let n = comparators.length;\n    let rVal = rValItr.next();\n    let lKey = lKeyItr.next();\n    let rKey = rKeyItr.next();\n\n    for (; i < n && !lKey.done && !rKey.done && !rVal.done;\n         ++i, lKey = lKeyItr.next(), rKey = rKeyItr.next(), rVal = rValItr.next()) {\n        if (lKey.value !== rKey.value || !comparators[i](rVal.value)) {\n            break;\n        }\n    }\n    if (i === n && lKey.done && rKey.done && rVal.done) {\n        return true;\n    }\n    lKeyItr.return && lKeyItr.return();\n    rKeyItr.return && rKeyItr.return();\n    rValItr.return && rValItr.return();\n    return false;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { clampRange } from '../util/vector';\nimport { DataType, Dictionary } from '../type';\nimport { selectChunkArgs } from '../util/args';\nimport { DictionaryVector } from './dictionary';\nimport { AbstractVector, Vector } from '../vector';\nimport { Clonable, Sliceable, Applicative } from '../vector';\n\n/** @ignore */\ntype ChunkedDict<T extends DataType> = T extends Dictionary ? Vector<T['dictionary']> : null | never;\n/** @ignore */\ntype ChunkedKeys<T extends DataType> = T extends Dictionary ? Vector<T['indices']> | Chunked<T['indices']> : null | never;\n\n/** @ignore */\nexport type SearchContinuation<T extends Chunked> = (column: T, chunkIndex: number, valueIndex: number) => any;\n\n/** @ignore */\nexport class Chunked<T extends DataType = any>\n    extends AbstractVector<T>\n    implements Clonable<Chunked<T>>,\n               Sliceable<Chunked<T>>,\n               Applicative<T, Chunked<T>> {\n\n    /** @nocollapse */\n    public static flatten<T extends DataType>(...vectors: (Vector<T> | Vector<T>[])[]) {\n        return selectChunkArgs<Vector<T>>(Vector, vectors);\n    }\n\n    /** @nocollapse */\n    public static concat<T extends DataType>(...vectors: (Vector<T> | Vector<T>[])[]) {\n        const chunks = Chunked.flatten<T>(...vectors);\n        return new Chunked<T>(chunks[0].type, chunks);\n    }\n\n    protected _type: T;\n    protected _length: number;\n    protected _chunks: Vector<T>[];\n    protected _numChildren: number;\n    protected _children?: Chunked[];\n    protected _nullCount: number = -1;\n    protected _chunkOffsets: Uint32Array;\n\n    constructor(type: T, chunks: Vector<T>[] = [], offsets = calculateOffsets(chunks)) {\n        super();\n        this._type = type;\n        this._chunks = chunks;\n        this._chunkOffsets = offsets;\n        this._length = offsets[offsets.length - 1];\n        this._numChildren = (this._type.children || []).length;\n    }\n\n    public get type() { return this._type; }\n    public get length() { return this._length; }\n    public get chunks() { return this._chunks; }\n    public get typeId(): T['TType'] { return this._type.typeId; }\n    public get VectorName() { return `Chunked<${this._type}>`; }\n    public get data(): Data<T> {\n        return this._chunks[0] ? this._chunks[0].data : <any> null;\n    }\n\n    public get ArrayType() { return this._type.ArrayType; }\n    public get numChildren() { return this._numChildren; }\n    public get stride() { return this._chunks[0] ? this._chunks[0].stride : 1; }\n    public get byteLength(): number {\n        return this._chunks.reduce((byteLength, chunk) => byteLength + chunk.byteLength, 0);\n    }\n    public get nullCount() {\n        let nullCount = this._nullCount;\n        if (nullCount < 0) {\n            this._nullCount = nullCount = this._chunks.reduce((x, { nullCount }) => x + nullCount, 0);\n        }\n        return nullCount;\n    }\n\n    protected _indices?: ChunkedKeys<T>;\n    public get indices(): ChunkedKeys<T> | null {\n        if (DataType.isDictionary(this._type)) {\n            if (!this._indices) {\n                const chunks = (<any> this._chunks) as DictionaryVector<T, any>[];\n                this._indices = (chunks.length === 1\n                    ? chunks[0].indices\n                    : Chunked.concat(...chunks.map((x) => x.indices))) as ChunkedKeys<T>;\n            }\n            return this._indices;\n        }\n        return null;\n    }\n    public get dictionary(): ChunkedDict<T> | null {\n        if (DataType.isDictionary(this._type)) {\n            return this._chunks[this._chunks.length - 1].data.dictionary as ChunkedDict<T>;\n        }\n        return null;\n    }\n\n    public *[Symbol.iterator](): IterableIterator<T['TValue'] | null> {\n        for (const chunk of this._chunks) {\n            yield* chunk;\n        }\n    }\n\n    public clone(chunks = this._chunks): Chunked<T> {\n        return new Chunked(this._type, chunks);\n    }\n\n    public concat(...others: Vector<T>[]): Chunked<T> {\n        return this.clone(Chunked.flatten(this, ...others));\n    }\n\n    public slice(begin?: number, end?: number): Chunked<T> {\n        return clampRange(this, begin, end, this._sliceInternal);\n    }\n\n    public getChildAt<R extends DataType = any>(index: number): Chunked<R> | null {\n\n        if (index < 0 || index >= this._numChildren) { return null; }\n\n        let columns = this._children || (this._children = []);\n        let child: Chunked<R>, field: Field<R>, chunks: Vector<R>[];\n\n        if (child = columns[index]) { return child; }\n        if (field = ((this._type.children || [])[index] as Field<R>)) {\n            chunks = this._chunks\n                .map((vector) => vector.getChildAt<R>(index))\n                .filter((vec): vec is Vector<R> => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Chunked<R>(field.type, chunks));\n            }\n        }\n\n        return null;\n    }\n\n    public search(index: number): [number, number] | null;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N): ReturnType<N>;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N) {\n        let idx = index;\n        // binary search to find the child vector and value indices\n        let offsets = this._chunkOffsets, rhs = offsets.length - 1;\n        // return early if out of bounds, or if there's just one child\n        if (idx < 0            ) { return null; }\n        if (idx >= offsets[rhs]) { return null; }\n        if (rhs <= 1           ) { return then ? then(this, 0, idx) : [0, idx]; }\n        let lhs = 0, pos = 0, mid = 0;\n        do {\n            if (lhs + 1 === rhs) {\n                return then ? then(this, lhs, idx - pos) : [lhs, idx - pos];\n            }\n            mid = lhs + ((rhs - lhs) / 2) | 0;\n            idx >= offsets[mid] ? (lhs = mid) : (rhs = mid);\n        } while (idx < offsets[rhs] && idx >= (pos = offsets[lhs]));\n        return null;\n    }\n\n    public isValid(index: number): boolean {\n        return !!this.search(index, this.isValidInternal);\n    }\n\n    public get(index: number): T['TValue'] | null {\n        return this.search(index, this.getInternal);\n    }\n\n    public set(index: number, value: T['TValue'] | null): void {\n        this.search(index, ({ chunks }, i, j) => chunks[i].set(j, value));\n    }\n\n    public indexOf(element: T['TValue'], offset?: number): number {\n        if (offset && typeof offset === 'number') {\n            return this.search(offset, (self, i, j) => this.indexOfInternal(self, i, j, element))!;\n        }\n        return this.indexOfInternal(this, 0, Math.max(0, offset || 0), element);\n    }\n\n    public toArray(): T['TArray'] {\n        const { chunks } = this;\n        const n = chunks.length;\n        let ArrayType: any = this._type.ArrayType;\n        if (n <= 0) { return new ArrayType(0); }\n        if (n <= 1) { return chunks[0].toArray(); }\n        let len = 0, src = new Array(n);\n        for (let i = -1; ++i < n;) {\n            len += (src[i] = chunks[i].toArray()).length;\n        }\n        if (ArrayType !== src[0].constructor) {\n            ArrayType = src[0].constructor;\n        }\n        let dst = new ArrayType(len);\n        let set: any = ArrayType === Array ? arraySet : typedSet;\n        for (let i = -1, idx = 0; ++i < n;) {\n            idx = set(src[i], dst, idx);\n        }\n        return dst;\n    }\n\n    protected getInternal({ _chunks }: Chunked<T>, i: number, j: number) { return _chunks[i].get(j); }\n    protected isValidInternal({ _chunks }: Chunked<T>, i: number, j: number) { return _chunks[i].isValid(j); }\n    protected indexOfInternal({ _chunks }: Chunked<T>, chunkIndex: number, fromIndex: number, element: T['TValue']) {\n        let i = chunkIndex - 1, n = _chunks.length;\n        let start = fromIndex, offset = 0, found = -1;\n        while (++i < n) {\n            if (~(found = _chunks[i].indexOf(element, start))) {\n                return offset + found;\n            }\n            start = 0;\n            offset += _chunks[i].length;\n        }\n        return -1;\n    }\n\n    protected _sliceInternal(self: Chunked<T>, begin: number, end: number) {\n        const slices: Vector<T>[] = [];\n        const { chunks, _chunkOffsets: chunkOffsets } = self;\n        for (let i = -1, n = chunks.length; ++i < n;) {\n            const chunk = chunks[i];\n            const chunkLength = chunk.length;\n            const chunkOffset = chunkOffsets[i];\n            // If the child is to the right of the slice boundary, we can stop\n            if (chunkOffset >= end) { break; }\n            // If the child is to the left of of the slice boundary, exclude\n            if (begin >= chunkOffset + chunkLength) { continue; }\n            // If the child is between both left and right boundaries, include w/o slicing\n            if (chunkOffset >= begin && (chunkOffset + chunkLength) <= end) {\n                slices.push(chunk);\n                continue;\n            }\n            // If the child overlaps one of the slice boundaries, include that slice\n            const from = Math.max(0, begin - chunkOffset);\n            const to = Math.min(end - chunkOffset, chunkLength);\n            slices.push(chunk.slice(from, to) as Vector<T>);\n        }\n        return self.clone(slices);\n    }\n}\n\n/** @ignore */\nfunction calculateOffsets<T extends DataType>(vectors: Vector<T>[]) {\n    let offsets = new Uint32Array((vectors || []).length + 1);\n    let offset = offsets[0] = 0, length = offsets.length;\n    for (let index = 0; ++index < length;) {\n        offsets[index] = (offset += vectors[index - 1].length);\n    }\n    return offsets;\n}\n\n/** @ignore */\nconst typedSet = (src: TypedArray, dst: TypedArray, offset: number) => {\n    dst.set(src, offset);\n    return (offset + src.length);\n};\n\n/** @ignore */\nconst arraySet = (src: any[], dst: any[], offset: number) => {\n    let idx = offset;\n    for (let i = -1, n = src.length; ++i < n;) {\n        dst[idx++] = src[i];\n    }\n    return idx;\n};\n\n/** @ignore */\ninterface TypedArray extends ArrayBufferView {\n    readonly length: number;\n    readonly [n: number]: number;\n    set(array: ArrayLike<number>, offset?: number): void;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Field } from './schema';\nimport { DataType } from './type';\nimport { Vector } from './vector';\nimport { Clonable, Sliceable, Applicative } from './vector';\nimport { VectorCtorArgs, VectorType as V } from './interfaces';\nimport { Chunked, SearchContinuation } from './vector/chunked';\n\nexport interface Column<T extends DataType = any> {\n    typeId: T['TType'];\n    concat(...others: Vector<T>[]): Column<T>;\n    slice(begin?: number, end?: number): Column<T>;\n    clone(chunks?: Vector<T>[], offsets?: Uint32Array): Column<T>;\n}\n\nexport class Column<T extends DataType = any>\n    extends Chunked<T>\n    implements Clonable<Column<T>>,\n               Sliceable<Column<T>>,\n               Applicative<T, Column<T>> {\n\n    public static new<T extends DataType>(field: string | Field<T>, ...chunks: (Vector<T> | Vector<T>[])[]): Column<T>;\n    public static new<T extends DataType>(field: string | Field<T>, data: Data<T>, ...args: VectorCtorArgs<V<T>>): Column<T>;\n    /** @nocollapse */\n    public static new<T extends DataType = any>(field: string | Field<T>, data: Data<T> | Vector<T> | (Data<T> | Vector<T>)[], ...rest: any[]) {\n\n        const chunks = Chunked.flatten<T>(\n            Array.isArray(data) ? [...data, ...rest] :\n            data instanceof Vector ? [data, ...rest] :\n            [Vector.new(data, ...rest)]\n        );\n\n        if (typeof field === 'string') {\n            const type = chunks[0].data.type;\n            field = new Field(field, type, true);\n        } else if (!field.nullable && chunks.some(({ nullCount }) => nullCount > 0)) {\n            field = field.clone({ nullable: true });\n        }\n        return new Column(field, chunks);\n    }\n\n    constructor(field: Field<T>, vectors: Vector<T>[] = [], offsets?: Uint32Array) {\n        vectors = Chunked.flatten<T>(...vectors);\n        super(field.type, vectors, offsets);\n        this._field = field;\n        if (vectors.length === 1 && !(this instanceof SingleChunkColumn)) {\n            return new SingleChunkColumn(field, vectors[0], this._chunkOffsets);\n        }\n    }\n\n    protected _field: Field<T>;\n    protected _children?: Column[];\n\n    public get field() { return this._field; }\n    public get name() { return this._field.name; }\n    public get nullable() { return this._field.nullable; }\n    public get metadata() { return this._field.metadata; }\n\n    public clone(chunks = this._chunks) {\n        return new Column(this._field, chunks);\n    }\n\n    public getChildAt<R extends DataType = any>(index: number): Column<R> | null {\n\n        if (index < 0 || index >= this.numChildren) { return null; }\n\n        let columns = this._children || (this._children = []);\n        let column: Column<R>, field: Field<R>, chunks: Vector<R>[];\n\n        if (column = columns[index]) { return column; }\n        if (field = ((this.type.children || [])[index] as Field<R>)) {\n            chunks = this._chunks\n                .map((vector) => vector.getChildAt<R>(index))\n                .filter((vec): vec is Vector<R> => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Column<R>(field, chunks));\n            }\n        }\n\n        return null;\n    }\n}\n\n/** @ignore */\nclass SingleChunkColumn<T extends DataType = any> extends Column<T> {\n    protected _chunk: Vector<T>;\n    constructor(field: Field<T>, vector: Vector<T>, offsets?: Uint32Array) {\n        super(field, [vector], offsets);\n        this._chunk = vector;\n    }\n    public search(index: number): [number, number] | null;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N): ReturnType<N>;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N) {\n        return then ? then(this, 0, index) : [0, index];\n    }\n    public isValid(index: number): boolean {\n        return this._chunk.isValid(index);\n    }\n    public get(index: number): T['TValue'] | null {\n        return this._chunk.get(index);\n    }\n    public set(index: number, value: T['TValue'] | null): void {\n        this._chunk.set(index, value);\n    }\n    public indexOf(element: T['TValue'], offset?: number): number {\n        return this._chunk.indexOf(element, offset);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { Column } from '../column';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Chunked } from '../vector/chunked';\n\ntype RecordBatchCtor = typeof import('../recordbatch').RecordBatch;\n\nconst isArray = Array.isArray;\n\n/** @ignore */\nexport const selectArgs = <T>(Ctor: any, vals: any[]) => _selectArgs(Ctor, vals, [], 0) as T[];\n/** @ignore */\nexport const selectColumnArgs = <T extends { [key: string]: DataType }>(args: any[]) => {\n    const [fields, values] = _selectFieldArgs<T>(args, [[], []]);\n    return values.map((x, i) =>\n        x instanceof Column ? Column.new(x.field.clone(fields[i]), x) :\n        x instanceof Vector ? Column.new(fields[i], x) as Column<T[keyof T]> :\n                              Column.new(fields[i], [] as Vector<T[keyof T]>[]));\n};\n\n/** @ignore */\nexport const selectFieldArgs = <T extends { [key: string]: DataType }>(args: any[]) => _selectFieldArgs<T>(args, [[], []]);\n/** @ignore */\nexport const selectChunkArgs = <T>(Ctor: any, vals: any[]) => _selectChunkArgs(Ctor, vals, [], 0) as T[];\n/** @ignore */\nexport const selectVectorChildrenArgs = <T extends Vector>(Ctor: RecordBatchCtor, vals: any[]) => _selectVectorChildrenArgs(Ctor, vals, [], 0) as T[];\n/** @ignore */\nexport const selectColumnChildrenArgs = <T extends Column>(Ctor: RecordBatchCtor, vals: any[]) => _selectColumnChildrenArgs(Ctor, vals, [], 0) as T[];\n\n/** @ignore */\nfunction _selectArgs<T>(Ctor: any, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Ctor) { res[j++] = value; }\n    }\n    return res;\n}\n\n/** @ignore */\nfunction _selectChunkArgs<T>(Ctor: any, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectChunkArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Chunked) {\n            j = _selectChunkArgs(Ctor, value.chunks, res, j).length;\n        } else if (value instanceof Ctor) { res[j++] = value; }\n    }\n    return res;\n}\n\n/** @ignore */\nfunction _selectVectorChildrenArgs<T extends Vector>(Ctor: RecordBatchCtor, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectVectorChildrenArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Ctor) {\n            j = _selectArgs(Vector, value.schema.fields.map((_, i) => value.getChildAt(i)!), res, j).length;\n        } else if (value instanceof Vector) { res[j++] = value as T; }\n    }\n    return res;\n}\n\n/** @ignore */\nfunction _selectColumnChildrenArgs<T extends Column>(Ctor: RecordBatchCtor, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectColumnChildrenArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Ctor) {\n            j = _selectArgs(Column, value.schema.fields.map((f, i) => Column.new(f, value.getChildAt(i)!)), res, j).length;\n        } else if (value instanceof Column) { res[j++] = value as T; }\n    }\n    return res;\n}\n\n/** @ignore */\nconst toKeysAndValues = (xs: [any[], any[]], [k, v]: [any, any], i: number) => (xs[0][i] = k, xs[1][i] = v, xs);\n\n/** @ignore */\nfunction _selectFieldArgs<T extends { [key: string]: DataType }>(vals: any[], ret: [Field<T[keyof T]>[], Vector<T[keyof T]>[]]): [Field<T[keyof T]>[], (T[keyof T] | Vector<T[keyof T]>)[]] {\n    let keys: any[], n: number;\n    switch (n = vals.length) {\n        case 0: return ret;\n        case 1:\n            keys = ret[0];\n            if (!(vals[0])) { return ret; }\n            if (isArray(vals[0])) { return _selectFieldArgs(vals[0], ret); }\n            if (!(vals[0] instanceof Data || vals[0] instanceof Vector || vals[0] instanceof DataType)) {\n                [keys, vals] = Object.entries(vals[0]).reduce(toKeysAndValues, ret);\n            }\n            break;\n        default:\n            !isArray(keys = vals[n - 1])\n                ? (vals = isArray(vals[0]) ? vals[0] : vals, keys = [])\n                : (vals = isArray(vals[0]) ? vals[0] : vals.slice(0, n - 1));\n    }\n\n    let fieldIndex = -1;\n    let valueIndex = -1;\n    let idx = -1, len = vals.length;\n    let field: number | string | Field<T[keyof T]>;\n    let val: Vector<T[keyof T]> | Data<T[keyof T]>;\n    let [fields, values] = ret as [Field<T[keyof T]>[], any[]];\n\n    while (++idx < len) {\n        val = vals[idx];\n        if (val instanceof Column && (values[++valueIndex] = val)) {\n            fields[++fieldIndex] = val.field.clone(keys[idx], val.type, true);\n        } else {\n            ({ [idx]: field = idx } = keys);\n            if (val instanceof DataType && (values[++valueIndex] = val)) {\n                fields[++fieldIndex] = Field.new(field, val as DataType, true) as Field<T[keyof T]>;\n            } else if (val && val.type && (values[++valueIndex] = val)) {\n                val instanceof Data && (values[valueIndex] = val = Vector.new(val) as Vector);\n                fields[++fieldIndex] = Field.new(field, val.type, true) as Field<T[keyof T]>;\n            }\n        }\n    }\n    return ret;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Vector } from './vector';\nimport { DataType } from './type';\nimport { selectArgs } from './util/args';\nimport { selectFieldArgs } from './util/args';\nimport { instance as comparer } from './visitor/typecomparator';\n\ntype VectorMap = { [key: string]: Vector };\ntype Fields<T extends { [key: string]: DataType }> = (keyof T)[] | Field<T[keyof T]>[];\ntype ChildData<T extends { [key: string]: DataType }> = T[keyof T][] | Data<T[keyof T]>[] | Vector<T[keyof T]>[];\n\nexport class Schema<T extends { [key: string]: DataType } = any> {\n\n    public static from<T extends { [key: string]: DataType } = any>(children: T): Schema<T>;\n    public static from<T extends VectorMap = any>(children: T): Schema<{ [P in keyof T]: T[P]['type'] }>;\n    public static from<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): Schema<T>;\n    /** @nocollapse */\n    public static from(...args: any[]) {\n        return Schema.new(args[0], args[1]);\n    }\n\n    public static new<T extends { [key: string]: DataType } = any>(children: T): Schema<T>;\n    public static new<T extends VectorMap = any>(children: T): Schema<{ [P in keyof T]: T[P]['type'] }>;\n    public static new<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): Schema<T>;\n    /** @nocollapse */\n    public static new(...args: any[]) {\n        return new Schema(selectFieldArgs(args)[0]);\n    }\n\n    public readonly fields: Field<T[keyof T]>[];\n    public readonly metadata: Map<string, string>;\n    public readonly dictionaries: Map<number, DataType>;\n\n    constructor(fields: Field[] = [],\n                metadata?: Map<string, string> | null,\n                dictionaries?: Map<number, DataType> | null) {\n        this.fields = (fields || []) as Field<T[keyof T]>[];\n        this.metadata = metadata || new Map();\n        if (!dictionaries) {\n            dictionaries = generateDictionaryMap(fields);\n        }\n        this.dictionaries = dictionaries;\n    }\n    public get [Symbol.toStringTag]() { return 'Schema'; }\n    public toString() {\n        return `Schema<{ ${this.fields.map((f, i) => `${i}: ${f}`).join(', ')} }>`;\n    }\n\n    public compareTo(other?: Schema | null): other is Schema<T> {\n        return comparer.compareSchemas(this, other);\n    }\n\n    public select<K extends keyof T = any>(...columnNames: K[]) {\n        const names = columnNames.reduce((xs, x) => (xs[x] = true) && xs, Object.create(null));\n        return new Schema<{ [P in K]: T[P] }>(this.fields.filter((f) => names[f.name]), this.metadata);\n    }\n    public selectAt<K extends T[keyof T] = any>(...columnIndices: number[]) {\n        return new Schema<{ [key: string]: K }>(columnIndices.map((i) => this.fields[i]).filter(Boolean), this.metadata);\n    }\n\n    public assign<R extends { [key: string]: DataType } = any>(schema: Schema<R>): Schema<T & R>;\n    public assign<R extends { [key: string]: DataType } = any>(...fields: (Field<R[keyof R]> | Field<R[keyof R]>[])[]): Schema<T & R>;\n    public assign<R extends { [key: string]: DataType } = any>(...args: (Schema<R> | Field<R[keyof R]> | Field<R[keyof R]>[])[]) {\n\n        const other = args[0] instanceof Schema ? args[0] as Schema<R>\n            : new Schema<R>(selectArgs<Field<R[keyof R]>>(Field, args));\n\n        const curFields = [...this.fields] as Field[];\n        const metadata = mergeMaps(mergeMaps(new Map(), this.metadata), other.metadata);\n        const newFields = other.fields.filter((f2) => {\n            const i = curFields.findIndex((f) => f.name === f2.name);\n            return ~i ? (curFields[i] = f2.clone({\n                metadata: mergeMaps(mergeMaps(new Map(), curFields[i].metadata), f2.metadata)\n            })) && false : true;\n        }) as Field[];\n\n        const newDictionaries = generateDictionaryMap(newFields, new Map());\n\n        return new Schema<T & R>(\n            [...curFields, ...newFields], metadata,\n            new Map([...this.dictionaries, ...newDictionaries])\n        );\n    }\n}\n\nexport class Field<T extends DataType = any> {\n\n    public static new<T extends DataType = any>(props: { name: string | number, type: T, nullable?: boolean, metadata?: Map<string, string> | null }): Field<T>;\n    public static new<T extends DataType = any>(name: string | number | Field<T>, type: T, nullable?: boolean, metadata?: Map<string, string> | null): Field<T>;\n    /** @nocollapse */\n    public static new<T extends DataType = any>(...args: any[]) {\n        let [name, type, nullable, metadata] = args;\n        if (args[0] && typeof args[0] === 'object') {\n            ({ name } = args[0]);\n            (type === undefined) && (type = args[0].type);\n            (nullable === undefined) && (nullable = args[0].nullable);\n            (metadata === undefined) && (metadata = args[0].metadata);\n        }\n        return new Field<T>(`${name}`, type, nullable, metadata);\n    }\n\n    public readonly type: T;\n    public readonly name: string;\n    public readonly nullable: boolean;\n    public readonly metadata: Map<string, string>;\n\n    constructor(name: string, type: T, nullable = false, metadata?: Map<string, string> | null) {\n        this.name = name;\n        this.type = type;\n        this.nullable = nullable;\n        this.metadata = metadata || new Map();\n    }\n\n    public get typeId() { return this.type.typeId; }\n    public get [Symbol.toStringTag]() { return 'Field'; }\n    public toString() { return `${this.name}: ${this.type}`; }\n    public compareTo(other?: Field | null): other is Field<T> {\n        return comparer.compareField(this, other);\n    }\n    public clone<R extends DataType = T>(props: { name?: string | number, type?: R, nullable?: boolean, metadata?: Map<string, string> | null }): Field<R>;\n    public clone<R extends DataType = T>(name?: string | number | Field<T>, type?: R, nullable?: boolean, metadata?: Map<string, string> | null): Field<R>;\n    public clone<R extends DataType = T>(...args: any[]) {\n        let [name, type, nullable, metadata] = args;\n        (!args[0] || typeof args[0] !== 'object')\n            ? ([name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata] = args)\n            : ({name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata} = args[0]);\n        return Field.new<R>(name, type, nullable, metadata);\n    }\n}\n\n/** @ignore */\nfunction mergeMaps<TKey, TVal>(m1?: Map<TKey, TVal> | null, m2?: Map<TKey, TVal> | null): Map<TKey, TVal> {\n    return new Map([...(m1 || new Map()), ...(m2 || new Map())]);\n}\n\n/** @ignore */\nfunction generateDictionaryMap(fields: Field[], dictionaries = new Map<number, DataType>()): Map<number, DataType> {\n\n    for (let i = -1, n = fields.length; ++i < n;) {\n        const field = fields[i];\n        const type = field.type;\n        if (DataType.isDictionary(type)) {\n            if (!dictionaries.has(type.id)) {\n                dictionaries.set(type.id, type.dictionary);\n            } else if (dictionaries.get(type.id) !== type.dictionary) {\n                throw new Error(`Cannot create Schema containing two different dictionaries with the same Id`);\n            }\n        }\n        if (type.children && type.children.length > 0) {\n            generateDictionaryMap(type.children, dictionaries);\n        }\n    }\n\n    return dictionaries;\n}\n\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\n(Schema.prototype as any).fields = null;\n(Schema.prototype as any).metadata = null;\n(Schema.prototype as any).dictionaries = null;\n\n(Field.prototype as any).type = null;\n(Field.prototype as any).name = null;\n(Field.prototype as any).nullable = null;\n(Field.prototype as any).metadata = null;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Run } from './run';\nimport { Field } from '../schema';\nimport { DataType, List } from '../type';\nimport { OffsetsBufferBuilder } from './buffer';\nimport { Builder, BuilderOptions, VariableWidthBuilder } from '../builder';\n\n/** @ignore */\nexport class ListBuilder<T extends DataType = any, TNull = any> extends VariableWidthBuilder<List<T>, TNull> {\n    protected _run = new Run<T, TNull>();\n    protected _offsets: OffsetsBufferBuilder;\n    constructor(opts: BuilderOptions<List<T>, TNull>) {\n        super(opts);\n        this._offsets = new OffsetsBufferBuilder();\n    }\n    public addChild(child: Builder<T>, name = '0') {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new List(new Field(name, child.type, true));\n        return this.numChildren - 1;\n    }\n    public clear() {\n        this._run.clear();\n        return super.clear();\n    }\n    protected _flushPending(pending: Map<number, T['TValue'] | undefined>) {\n        const run = this._run;\n        const offsets = this._offsets;\n        const setValue = this._setValue;\n        let index = 0, value: Uint8Array | undefined;\n        for ([index, value] of pending) {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            } else {\n                offsets.set(index, value.length);\n                setValue(this, index, run.bind(value));\n            }\n        }\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Run } from './run';\nimport { Field } from '../schema';\nimport { Builder } from '../builder';\nimport { DataType, FixedSizeList } from '../type';\n\n/** @ignore */\nexport class FixedSizeListBuilder<T extends DataType = any, TNull = any> extends Builder<FixedSizeList<T>, TNull> {\n    protected _run = new Run<T, TNull>();\n    public setValue(index: number, value: T['TValue']) {\n        super.setValue(index, this._run.bind(value));\n    }\n    public addChild(child: Builder<T>, name = '0') {\n        if (this.numChildren > 0) {\n            throw new Error('FixedSizeListBuilder can only have one child.');\n        }\n        const childIndex = this.children.push(child);\n        this.type = new FixedSizeList(this.type.listSize, new Field(name, child.type, true));\n        return childIndex;\n    }\n    public clear() {\n        this._run.clear();\n        return super.clear();\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { DataType, Map_, Struct } from '../type';\nimport { Builder, VariableWidthBuilder } from '../builder';\n\n/** @ignore */ type MapValue<K extends DataType = any, V extends DataType = any> = Map_<K, V>['TValue'];\n/** @ignore */ type MapValues<K extends DataType = any, V extends DataType = any> = Map<number, MapValue<K, V> | undefined>;\n/** @ignore */ type MapValueExt<K extends DataType = any, V extends DataType = any> = MapValue<K, V> | { [key: string]: V } | { [key: number]: V } ;\n\n/** @ignore */\nexport class MapBuilder<K extends DataType = any, V extends DataType = any, TNull = any> extends VariableWidthBuilder<Map_<K, V>, TNull> {\n\n    protected _pending: MapValues<K, V> | undefined;\n    public set(index: number, value: MapValueExt<K, V> | TNull) {\n        return super.set(index, value as MapValue<K, V> | TNull);\n    }\n\n    public setValue(index: number, value: MapValueExt<K, V>) {\n        value = value instanceof Map ? value : new Map(Object.entries(value));\n        const pending = this._pending || (this._pending = new Map() as MapValues<K, V>);\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.size);\n        this._pendingLength += value.size;\n        pending.set(index, value);\n    }\n\n    public addChild(child: Builder<Struct<{ key: K, value: V }>>, name = `${this.numChildren}`) {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new Map_<K, V>(new Field(name, child.type, true), this.type.keysSorted);\n        return this.numChildren - 1;\n    }\n\n    protected _flushPending(pending: MapValues<K, V>) {\n        const offsets = this._offsets;\n        const setValue = this._setValue;\n        pending.forEach((value, index) => {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            } else {\n                offsets.set(index, value.size);\n                setValue(this, index, value);\n            }\n        });\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { Builder } from '../builder';\nimport { DataType, Struct } from '../type';\n\n/** @ignore */\nexport class StructBuilder<T extends { [key: string]: DataType } = any, TNull = any> extends Builder<Struct<T>, TNull> {\n    public addChild(child: Builder, name = `${this.numChildren}`) {\n        const childIndex = this.children.push(child);\n        this.type = new Struct([...this.type.children, new Field(name, child.type, true)]);\n        return childIndex;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { DataBufferBuilder } from './buffer';\nimport { Builder, BuilderOptions } from '../builder';\nimport { Union, SparseUnion, DenseUnion } from '../type';\n\nexport interface UnionBuilderOptions<T extends Union = any, TNull = any> extends BuilderOptions<T, TNull> {\n    valueToChildTypeId?: (builder: UnionBuilder<T, TNull>, value: any, offset: number) => number;\n}\n\n/** @ignore */\nexport abstract class UnionBuilder<T extends Union, TNull = any> extends Builder<T, TNull> {\n\n    protected _typeIds: DataBufferBuilder<Int8Array>;\n\n    constructor(options: UnionBuilderOptions<T, TNull>) {\n        super(options);\n        this._typeIds = new DataBufferBuilder(new Int8Array(0), 1);\n        if (typeof options['valueToChildTypeId'] === 'function') {\n            this._valueToChildTypeId = options['valueToChildTypeId'];\n        }\n    }\n\n    public get typeIdToChildIndex() { return this.type.typeIdToChildIndex; }\n\n    public append(value: T['TValue'] | TNull, childTypeId?: number) {\n        return this.set(this.length, value, childTypeId);\n    }\n\n    public set(index: number, value: T['TValue'] | TNull, childTypeId?: number) {\n        if (childTypeId === undefined) {\n            childTypeId = this._valueToChildTypeId(this, value, index);\n        }\n        if (this.setValid(index, this.isValid(value))) {\n            this.setValue(index, value, childTypeId);\n        }\n        return this;\n    }\n\n    // @ts-ignore\n    public setValue(index: number, value: T['TValue'], childTypeId?: number) {\n        this._typeIds.set(index, childTypeId!);\n        super.setValue(index, value);\n    }\n\n    // @ts-ignore\n    public addChild(child: Builder, name = `${this.children.length}`) {\n        const childTypeId = this.children.push(child);\n        const { type: { children, mode, typeIds } } = this;\n        const fields = [...children, new Field(name, child.type)];\n        this.type = <T> new Union(mode, [...typeIds, childTypeId], fields);\n        return childTypeId;\n    }\n\n    /** @ignore */\n    // @ts-ignore\n    protected _valueToChildTypeId(builder: UnionBuilder<T, TNull>, value: any, offset: number): number {\n        throw new Error(`Cannot map UnionBuilder value to child typeId. \\\nPass the \\`childTypeId\\` as the second argument to unionBuilder.append(), \\\nor supply a \\`valueToChildTypeId\\` function as part of the UnionBuilder constructor options.`);\n    }\n}\n\n/** @ignore */\nexport class SparseUnionBuilder<T extends SparseUnion, TNull = any> extends UnionBuilder<T, TNull> {}\n/** @ignore */\nexport class DenseUnionBuilder<T extends DenseUnion, TNull = any> extends UnionBuilder<T, TNull> {\n\n    protected _offsets: DataBufferBuilder<Int32Array>;\n\n    constructor(options: UnionBuilderOptions<T, TNull>) {\n        super(options);\n        this._offsets = new DataBufferBuilder(new Int32Array(0));\n    }\n\n    /** @ignore */\n    public setValue(index: number, value: T['TValue'], childTypeId?: number) {\n        const childIndex = this.type.typeIdToChildIndex[childTypeId!];\n        this._offsets.set(index, this.getChildAt(childIndex)!.length);\n        return super.setValue(index, value, childTypeId);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { Visitor } from '../visitor';\nimport { encodeUtf8 } from '../util/utf8';\nimport { VectorType } from '../interfaces';\nimport { float64ToUint16 } from '../util/math';\nimport { toArrayBufferView } from '../util/buffer';\nimport { Type, UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface SetVisitor extends Visitor {\n    visit<T extends VectorType>(node: T, index: number, value: T['TValue']): void;\n    visitMany<T extends VectorType>(nodes: T[], indices: number[], values: T['TValue'][]): void[];\n    getVisitFn<T extends Type>(node: T): (vector: VectorType<T>, index: number, value: VectorType<T>['TValue']) => void;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>, index: number, value: VectorType<T>['TValue']) => void;\n    visitNull                 <T extends Null>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitBool                 <T extends Bool>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt                  <T extends Int>                 (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt8                 <T extends Int8>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt16                <T extends Int16>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt32                <T extends Int32>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt64                <T extends Int64>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint8                <T extends Uint8>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint16               <T extends Uint16>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint32               <T extends Uint32>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint64               <T extends Uint64>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat                <T extends Float>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat16              <T extends Float16>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat32              <T extends Float32>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat64              <T extends Float64>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUtf8                 <T extends Utf8>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitBinary               <T extends Binary>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDate                 <T extends Date_>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDateDay              <T extends DateDay>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDateMillisecond      <T extends DateMillisecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestamp            <T extends Timestamp>           (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampSecond      <T extends TimestampSecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampMillisecond <T extends TimestampMillisecond>(vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond>(vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampNanosecond  <T extends TimestampNanosecond> (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTime                 <T extends Time>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeSecond           <T extends TimeSecond>          (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeMillisecond      <T extends TimeMillisecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeNanosecond       <T extends TimeNanosecond>      (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDecimal              <T extends Decimal>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitList                 <T extends List>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitStruct               <T extends Struct>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUnion                <T extends Union>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDenseUnion           <T extends DenseUnion>          (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitSparseUnion          <T extends SparseUnion>         (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDictionary           <T extends Dictionary>          (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInterval             <T extends Interval>            (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitIntervalDayTime      <T extends IntervalDayTime>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>   (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFixedSizeList        <T extends FixedSizeList>       (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitMap                  <T extends Map_>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n}\n\n/** @ignore */\nexport class SetVisitor extends Visitor {}\n\n/** @ignore */\nconst setEpochMsToDays = (data: Int32Array, index: number, epochMs: number) => { data[index] = (epochMs / 86400000) | 0; };\n/** @ignore */\nconst setEpochMsToMillisecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = (epochMs % 4294967296) | 0;\n    data[index + 1] = (epochMs / 4294967296) | 0;\n};\n/** @ignore */\nconst setEpochMsToMicrosecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = ((epochMs * 1000) % 4294967296) | 0;\n    data[index + 1] = ((epochMs * 1000) / 4294967296) | 0;\n};\n/** @ignore */\nconst setEpochMsToNanosecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = ((epochMs * 1000000) % 4294967296) | 0;\n    data[index + 1] = ((epochMs * 1000000) / 4294967296) | 0;\n};\n\n/** @ignore */\nconst setVariableWidthBytes = (values: Uint8Array, valueOffsets: Int32Array, index: number, value: Uint8Array) => {\n    const { [index]: x, [index + 1]: y } = valueOffsets;\n    if (x != null && y != null) {\n        values.set(value.subarray(0, y - x), x);\n    }\n};\n\n/** @ignore */\nconst setBool = <T extends Bool>({ offset, values }: VectorType<T>, index: number, val: boolean) => {\n    const idx = offset + index;\n    val ? (values[idx >> 3] |=  (1 << (idx % 8)))  // true\n        : (values[idx >> 3] &= ~(1 << (idx % 8))); // false\n\n};\n\n/** @ignore */ type Numeric1X = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32 | Float32 | Float64;\n/** @ignore */ type Numeric2X = Int64 | Uint64;\n\n/** @ignore */\nconst setDateDay         = <T extends DateDay>        ({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { setEpochMsToDays(values, index, value.valueOf()); };\n/** @ignore */\nconst setDateMillisecond = <T extends DateMillisecond>({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { setEpochMsToMillisecondsLong(values, index * 2, value.valueOf()); };\n/** @ignore */\nconst setNumeric         = <T extends Numeric1X>      ({ stride, values }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = value; };\n/** @ignore */\nconst setFloat16         = <T extends Float16>        ({ stride, values }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = float64ToUint16(value); };\n/** @ignore */\nconst setNumericX2       = <T extends Numeric2X>      (vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    switch (typeof value) {\n        case 'bigint': vector.values64[index] = value; break;\n        case 'number': vector.values[index * vector.stride] = value; break;\n        default:\n            const val = value as T['TArray'];\n            const { stride, ArrayType } = vector;\n            const long = toArrayBufferView<T['TArray']>(ArrayType, val);\n            vector.values.set(long.subarray(0, stride), stride * index);\n    }\n};\n/** @ignore */\nconst setFixedSizeBinary = <T extends FixedSizeBinary>({ stride, values }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, stride), stride * index); };\n\n/** @ignore */\nconst setBinary = <T extends Binary>({ values, valueOffsets }: VectorType<T>, index: number, value: T['TValue']) => setVariableWidthBytes(values, valueOffsets, index, value);\n/** @ignore */\nconst setUtf8 = <T extends Utf8>({ values, valueOffsets }: VectorType<T>, index: number, value: T['TValue']) => {\n    setVariableWidthBytes(values, valueOffsets, index, encodeUtf8(value));\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setInt = <T extends Int>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    vector.type.bitWidth < 64\n        ? setNumeric(vector as VectorType<Numeric1X>, index, value as Numeric1X['TValue'])\n        : setNumericX2(vector as VectorType<Numeric2X>, index, value as Numeric2X['TValue']);\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setFloat = <T extends Float>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    vector.type.precision !== Precision.HALF\n        ? setNumeric(vector as VectorType<Numeric1X>, index, value)\n        : setFloat16(vector as VectorType<Float16>, index, value);\n};\n\n/* istanbul ignore next */\nconst setDate = <T extends Date_> (vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    vector.type.unit === DateUnit.DAY\n        ? setDateDay(vector as VectorType<DateDay>, index, value)\n        : setDateMillisecond(vector as VectorType<DateMillisecond>, index, value);\n};\n\n/** @ignore */\nconst setTimestampSecond      = <T extends TimestampSecond>     ({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToMillisecondsLong(values, index * 2, value / 1000);\n/** @ignore */\nconst setTimestampMillisecond = <T extends TimestampMillisecond>({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToMillisecondsLong(values, index * 2, value);\n/** @ignore */\nconst setTimestampMicrosecond = <T extends TimestampMicrosecond>({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToMicrosecondsLong(values, index * 2, value);\n/** @ignore */\nconst setTimestampNanosecond  = <T extends TimestampNanosecond> ({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToNanosecondsLong(values, index * 2, value);\n/* istanbul ignore next */\n/** @ignore */\nconst setTimestamp            = <T extends Timestamp>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      setTimestampSecond(vector as VectorType<TimestampSecond>, index, value);\n        case TimeUnit.MILLISECOND: return setTimestampMillisecond(vector as VectorType<TimestampMillisecond>, index, value);\n        case TimeUnit.MICROSECOND: return setTimestampMicrosecond(vector as VectorType<TimestampMicrosecond>, index, value);\n        case TimeUnit.NANOSECOND:  return  setTimestampNanosecond(vector as VectorType<TimestampNanosecond>, index, value);\n    }\n};\n\n/** @ignore */\nconst setTimeSecond      = <T extends TimeSecond>     ({ values, stride }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = value; };\n/** @ignore */\nconst setTimeMillisecond = <T extends TimeMillisecond>({ values, stride }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = value; };\n/** @ignore */\nconst setTimeMicrosecond = <T extends TimeMicrosecond>({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 2), 2 * index); };\n/** @ignore */\nconst setTimeNanosecond  = <T extends TimeNanosecond> ({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 2), 2 * index); };\n/* istanbul ignore next */\n/** @ignore */\nconst setTime            = <T extends Time>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      setTimeSecond(vector as VectorType<TimeSecond>, index, value as TimeSecond['TValue']);\n        case TimeUnit.MILLISECOND: return setTimeMillisecond(vector as VectorType<TimeMillisecond>, index, value as TimeMillisecond['TValue']);\n        case TimeUnit.MICROSECOND: return setTimeMicrosecond(vector as VectorType<TimeMicrosecond>, index, value as TimeMicrosecond['TValue']);\n        case TimeUnit.NANOSECOND:  return  setTimeNanosecond(vector as VectorType<TimeNanosecond>, index, value as TimeNanosecond['TValue']);\n    }\n};\n\n/** @ignore */\nconst setDecimal = <T extends Decimal>({ values }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 4), 4 * index); };\n\n/** @ignore */\nconst setList = <T extends List>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const values = vector.getChildAt(0)!, valueOffsets = vector.valueOffsets;\n    for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n        values.set(itr++, value.get(++idx));\n    }\n};\n\n/** @ignore */\nconst setMap = <T extends Map_>(vector: VectorType<T>, index: number, value: T['TValue']) => {\n    const values = vector.getChildAt(0)!, valueOffsets = vector.valueOffsets;\n    const entries = value instanceof Map ? [...value] : Object.entries(value);\n    for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n        values.set(itr++, entries[++idx]);\n    }\n};\n\n/** @ignore */ const _setStructArrayValue = (o: number, v: any[]) => (c: Vector | null, _: Field, i: number) => c && c.set(o, v[i]);\n/** @ignore */ const _setStructVectorValue = (o: number, v: Vector) => (c: Vector | null, _: Field, i: number) => c && c.set(o, v.get(i));\n/** @ignore */ const _setStructMapValue = (o: number, v: Map<string, any>) => (c: Vector | null, f: Field, _: number) => c && c.set(o, v.get(f.name));\n/** @ignore */ const _setStructObjectValue = (o: number, v: { [key: string]: any }) => (c: Vector | null, f: Field, _: number) => c && c.set(o, v[f.name]);\n/** @ignore */\nconst setStruct = <T extends Struct>(vector: VectorType<T>, index: number, value: T['TValue']) => {\n\n    const setValue = value instanceof Map    ? _setStructMapValue(index, value)    :\n                     value instanceof Vector ? _setStructVectorValue(index, value) :\n                     Array.isArray(value)    ? _setStructArrayValue(index, value)  :\n                                               _setStructObjectValue(index, value) ;\n\n    vector.type.children.forEach((f: Field, i: number) => setValue(vector.getChildAt(i), f, i));\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setUnion = <\n    V extends VectorType<Union> | VectorType<DenseUnion> | VectorType<SparseUnion>\n>(vector: V, index: number, value: V['TValue']) => {\n    vector.type.mode === UnionMode.Dense ?\n        setDenseUnion(vector as VectorType<DenseUnion>, index, value) :\n        setSparseUnion(vector as VectorType<SparseUnion>, index, value);\n};\n\n/** @ignore */\nconst setDenseUnion = <T extends DenseUnion>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    child && child.set(vector.valueOffsets[index], value);\n};\n\n/** @ignore */\nconst setSparseUnion = <T extends SparseUnion>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    child && child.set(index, value);\n};\n\n/** @ignore */\nconst setDictionary = <T extends Dictionary>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const key = vector.getKey(index);\n    if (key !== null) {\n        vector.setValue(key, value);\n    }\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setIntervalValue = <T extends Interval>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    (vector.type.unit === IntervalUnit.DAY_TIME)\n        ? setIntervalDayTime(vector as VectorType<IntervalDayTime>, index, value)\n        : setIntervalYearMonth(vector as VectorType<IntervalYearMonth>, index, value);\n};\n\n/** @ignore */\nconst setIntervalDayTime = <T extends IntervalDayTime>({ values }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 2), 2 * index); };\n/** @ignore */\nconst setIntervalYearMonth = <T extends IntervalYearMonth>({ values }: VectorType<T>, index: number, value: T['TValue']): void => { values[index] = (value[0] * 12) + (value[1] % 12); };\n\n/** @ignore */\nconst setFixedSizeList = <T extends FixedSizeList>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const child = vector.getChildAt(0)!, { stride } = vector;\n    for (let idx = -1, offset = index * stride; ++idx < stride;) {\n        child.set(offset + idx, value.get(idx));\n    }\n};\n\nSetVisitor.prototype.visitBool                 =                 setBool;\nSetVisitor.prototype.visitInt                  =                  setInt;\nSetVisitor.prototype.visitInt8                 =              setNumeric;\nSetVisitor.prototype.visitInt16                =              setNumeric;\nSetVisitor.prototype.visitInt32                =              setNumeric;\nSetVisitor.prototype.visitInt64                =            setNumericX2;\nSetVisitor.prototype.visitUint8                =              setNumeric;\nSetVisitor.prototype.visitUint16               =              setNumeric;\nSetVisitor.prototype.visitUint32               =              setNumeric;\nSetVisitor.prototype.visitUint64               =            setNumericX2;\nSetVisitor.prototype.visitFloat                =                setFloat;\nSetVisitor.prototype.visitFloat16              =              setFloat16;\nSetVisitor.prototype.visitFloat32              =              setNumeric;\nSetVisitor.prototype.visitFloat64              =              setNumeric;\nSetVisitor.prototype.visitUtf8                 =                 setUtf8;\nSetVisitor.prototype.visitBinary               =               setBinary;\nSetVisitor.prototype.visitFixedSizeBinary      =      setFixedSizeBinary;\nSetVisitor.prototype.visitDate                 =                 setDate;\nSetVisitor.prototype.visitDateDay              =              setDateDay;\nSetVisitor.prototype.visitDateMillisecond      =      setDateMillisecond;\nSetVisitor.prototype.visitTimestamp            =            setTimestamp;\nSetVisitor.prototype.visitTimestampSecond      =      setTimestampSecond;\nSetVisitor.prototype.visitTimestampMillisecond = setTimestampMillisecond;\nSetVisitor.prototype.visitTimestampMicrosecond = setTimestampMicrosecond;\nSetVisitor.prototype.visitTimestampNanosecond  =  setTimestampNanosecond;\nSetVisitor.prototype.visitTime                 =                 setTime;\nSetVisitor.prototype.visitTimeSecond           =           setTimeSecond;\nSetVisitor.prototype.visitTimeMillisecond      =      setTimeMillisecond;\nSetVisitor.prototype.visitTimeMicrosecond      =      setTimeMicrosecond;\nSetVisitor.prototype.visitTimeNanosecond       =       setTimeNanosecond;\nSetVisitor.prototype.visitDecimal              =              setDecimal;\nSetVisitor.prototype.visitList                 =                 setList;\nSetVisitor.prototype.visitStruct               =               setStruct;\nSetVisitor.prototype.visitUnion                =                setUnion;\nSetVisitor.prototype.visitDenseUnion           =           setDenseUnion;\nSetVisitor.prototype.visitSparseUnion          =          setSparseUnion;\nSetVisitor.prototype.visitDictionary           =           setDictionary;\nSetVisitor.prototype.visitInterval             =        setIntervalValue;\nSetVisitor.prototype.visitIntervalDayTime      =      setIntervalDayTime;\nSetVisitor.prototype.visitIntervalYearMonth    =    setIntervalYearMonth;\nSetVisitor.prototype.visitFixedSizeList        =        setFixedSizeList;\nSetVisitor.prototype.visitMap                  =                  setMap;\n\n/** @ignore */\nexport const instance = new SetVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { VectorType, BuilderCtor } from '../interfaces';\nimport { BinaryBuilder } from '../builder/binary';\nimport { BoolBuilder } from '../builder/bool';\nimport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from '../builder/date';\nimport { DecimalBuilder } from '../builder/decimal';\nimport { DictionaryBuilder } from '../builder/dictionary';\nimport { FixedSizeBinaryBuilder } from '../builder/fixedsizebinary';\nimport { FixedSizeListBuilder } from '../builder/fixedsizelist';\nimport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from '../builder/float';\nimport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from '../builder/interval';\nimport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from '../builder/int';\nimport { ListBuilder } from '../builder/list';\nimport { MapBuilder } from '../builder/map';\nimport { NullBuilder } from '../builder/null';\nimport { StructBuilder } from '../builder/struct';\nimport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from '../builder/timestamp';\nimport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from '../builder/time';\nimport { UnionBuilder, DenseUnionBuilder, SparseUnionBuilder } from '../builder/union';\nimport { Utf8Builder } from '../builder/utf8';\n\n/** @ignore */\nexport interface GetBuilderCtor extends Visitor {\n    visit<T extends Type>(type: T): BuilderCtor<T>;\n    visitMany<T extends Type>(types: T[]): BuilderCtor<T>[];\n    getVisitFn<T extends Type>(type: T): () => BuilderCtor<T>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): () => BuilderCtor<T>;\n}\n\n/** @ignore */\nexport class GetBuilderCtor extends Visitor {\n    public visitNull                 () { return NullBuilder;                 }\n    public visitBool                 () { return BoolBuilder;                 }\n    public visitInt                  () { return IntBuilder;                  }\n    public visitInt8                 () { return Int8Builder;                 }\n    public visitInt16                () { return Int16Builder;                }\n    public visitInt32                () { return Int32Builder;                }\n    public visitInt64                () { return Int64Builder;                }\n    public visitUint8                () { return Uint8Builder;                }\n    public visitUint16               () { return Uint16Builder;               }\n    public visitUint32               () { return Uint32Builder;               }\n    public visitUint64               () { return Uint64Builder;               }\n    public visitFloat                () { return FloatBuilder;                }\n    public visitFloat16              () { return Float16Builder;              }\n    public visitFloat32              () { return Float32Builder;              }\n    public visitFloat64              () { return Float64Builder;              }\n    public visitUtf8                 () { return Utf8Builder;                 }\n    public visitBinary               () { return BinaryBuilder;               }\n    public visitFixedSizeBinary      () { return FixedSizeBinaryBuilder;      }\n    public visitDate                 () { return DateBuilder;                 }\n    public visitDateDay              () { return DateDayBuilder;              }\n    public visitDateMillisecond      () { return DateMillisecondBuilder;      }\n    public visitTimestamp            () { return TimestampBuilder;            }\n    public visitTimestampSecond      () { return TimestampSecondBuilder;      }\n    public visitTimestampMillisecond () { return TimestampMillisecondBuilder; }\n    public visitTimestampMicrosecond () { return TimestampMicrosecondBuilder; }\n    public visitTimestampNanosecond  () { return TimestampNanosecondBuilder;  }\n    public visitTime                 () { return TimeBuilder;                 }\n    public visitTimeSecond           () { return TimeSecondBuilder;           }\n    public visitTimeMillisecond      () { return TimeMillisecondBuilder;      }\n    public visitTimeMicrosecond      () { return TimeMicrosecondBuilder;      }\n    public visitTimeNanosecond       () { return TimeNanosecondBuilder;       }\n    public visitDecimal              () { return DecimalBuilder;              }\n    public visitList                 () { return ListBuilder;                 }\n    public visitStruct               () { return StructBuilder;               }\n    public visitUnion                () { return UnionBuilder;                }\n    public visitDenseUnion           () { return DenseUnionBuilder;           }\n    public visitSparseUnion          () { return SparseUnionBuilder;          }\n    public visitDictionary           () { return DictionaryBuilder;           }\n    public visitInterval             () { return IntervalBuilder;             }\n    public visitIntervalDayTime      () { return IntervalDayTimeBuilder;      }\n    public visitIntervalYearMonth    () { return IntervalYearMonthBuilder;    }\n    public visitFixedSizeList        () { return FixedSizeListBuilder;        }\n    public visitMap                  () { return MapBuilder;                  }\n}\n\n/** @ignore */\nexport const instance = new GetBuilderCtor();\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as NS7624605610262437867 from './Schema';\n/**\n * ----------------------------------------------------------------------\n * Arrow File metadata\n *\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Footer {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Footer\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Footer {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Footer= obj\n         * @returns Footer\n         */\n        static getRootAsFooter(bb: flatbuffers.ByteBuffer, obj?: Footer): Footer {\n            return (obj || new Footer).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MetadataVersion\n         */\n        version(): NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n        }\n\n        /**\n         * @param org.apache.arrow.flatbuf.Schema= obj\n         * @returns org.apache.arrow.flatbuf.Schema|null\n         */\n        schema(obj?: NS7624605610262437867.org.apache.arrow.flatbuf.Schema): NS7624605610262437867.org.apache.arrow.flatbuf.Schema | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Schema).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Block= obj\n         * @returns org.apache.arrow.flatbuf.Block\n         */\n        dictionaries(index: number, obj?: org.apache.arrow.flatbuf.Block): org.apache.arrow.flatbuf.Block | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        dictionariesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Block= obj\n         * @returns org.apache.arrow.flatbuf.Block\n         */\n        recordBatches(index: number, obj?: org.apache.arrow.flatbuf.Block): org.apache.arrow.flatbuf.Block | null {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        recordBatchesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFooter(builder: flatbuffers.Builder) {\n            builder.startObject(4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MetadataVersion version\n         */\n        static addVersion(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion) {\n            builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset schemaOffset\n         */\n        static addSchema(builder: flatbuffers.Builder, schemaOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, schemaOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dictionariesOffset\n         */\n        static addDictionaries(builder: flatbuffers.Builder, dictionariesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, dictionariesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startDictionariesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(24, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset recordBatchesOffset\n         */\n        static addRecordBatches(builder: flatbuffers.Builder, recordBatchesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(3, recordBatchesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startRecordBatchesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(24, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFooter(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishFooterBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createFooter(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion, schemaOffset: flatbuffers.Offset, dictionariesOffset: flatbuffers.Offset, recordBatchesOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Footer.startFooter(builder);\n            Footer.addVersion(builder, version);\n            Footer.addSchema(builder, schemaOffset);\n            Footer.addDictionaries(builder, dictionariesOffset);\n            Footer.addRecordBatches(builder, recordBatchesOffset);\n            return Footer.endFooter(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Block {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Block\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Block {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * Index to the start of the RecordBlock (note this is past the Message header)\n         *\n         * @returns flatbuffers.Long\n         */\n        offset(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * Length of the metadata\n         *\n         * @returns number\n         */\n        metaDataLength(): number {\n            return this.bb!.readInt32(this.bb_pos + 8);\n        }\n\n        /**\n         * Length of the data (this is aligned so there can be a gap between this and\n         * the metatdata).\n         *\n         * @returns flatbuffers.Long\n         */\n        bodyLength(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 16);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long offset\n         * @param number metaDataLength\n         * @param flatbuffers.Long bodyLength\n         * @returns flatbuffers.Offset\n         */\n        static createBlock(builder: flatbuffers.Builder, offset: flatbuffers.Long, metaDataLength: number, bodyLength: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 24);\n            builder.writeInt64(bodyLength);\n            builder.pad(4);\n            builder.writeInt32(metaDataLength);\n            builder.writeInt64(offset);\n            return builder.offset();\n        }\n\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport { Builder, BuilderOptions } from '../builder';\nexport { BoolBuilder } from './bool';\nexport { NullBuilder } from './null';\nexport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from './date';\nexport { DecimalBuilder } from './decimal';\nexport { DictionaryBuilder } from './dictionary';\nexport { FixedSizeBinaryBuilder } from './fixedsizebinary';\nexport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from './float';\nexport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from './int';\nexport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from './time';\nexport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from './timestamp';\nexport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from './interval';\nexport { Utf8Builder } from './utf8';\nexport { BinaryBuilder } from './binary';\nexport { ListBuilder } from './list';\nexport { FixedSizeListBuilder } from './fixedsizelist';\nexport { MapBuilder } from './map';\nexport { StructBuilder } from './struct';\nexport { UnionBuilder, SparseUnionBuilder, DenseUnionBuilder } from './union';\n\nimport { Type } from '../enum';\nimport { Field } from '../schema';\nimport { DataType } from '../type';\nimport { Utf8Builder } from './utf8';\nimport { BuilderType as B } from '../interfaces';\nimport { Builder, BuilderOptions } from '../builder';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as getBuilderConstructor } from '../visitor/builderctor';\n\n/** @nocollapse */\nBuilder.new = newBuilder;\n\nfunction newBuilder<T extends DataType = any, TNull = any>(options: BuilderOptions<T, TNull>): B<T, TNull> {\n\n    const type = options.type;\n    const builder = new (getBuilderConstructor.getVisitFn<T>(type)())(options) as Builder<T, TNull>;\n\n    if (type.children && type.children.length > 0) {\n\n        const children = options['children'] || [] as BuilderOptions[];\n        const defaultOptions = { 'nullValues': options['nullValues'] };\n        const getChildOptions = Array.isArray(children)\n            ? ((_: Field, i: number) => children[i] || defaultOptions)\n            : (({ name }: Field) => children[name] || defaultOptions);\n\n        type.children.forEach((field, index) => {\n            const { type } = field;\n            const opts = getChildOptions(field, index);\n            builder.children.push(newBuilder({ ...opts, type }));\n        });\n    }\n\n    return builder as B<T, TNull>;\n}\n\n(Object.keys(Type) as any[])\n    .map((T: any) => Type[T] as any)\n    .filter((T: any): T is Type => typeof T === 'number' && T !== Type.NONE)\n    .forEach((typeId) => {\n        const BuilderCtor = getBuilderConstructor.visit(typeId);\n        BuilderCtor.prototype._setValue = setVisitor.getVisitFn(typeId);\n    });\n\n(Utf8Builder.prototype as any)._setValue = setVisitor.visitBinary;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/* tslint:disable:class-name */\n\nimport * as File_ from '../../fb/File';\nimport { flatbuffers } from 'flatbuffers';\n\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport _Block = File_.org.apache.arrow.flatbuf.Block;\nimport _Footer = File_.org.apache.arrow.flatbuf.Footer;\n\nimport { Schema } from '../../schema';\nimport { MetadataVersion } from '../../enum';\nimport { toUint8Array } from '../../util/buffer';\nimport { ArrayBufferViewInput } from '../../util/buffer';\n\n/** @ignore */\nclass Footer_ {\n\n    /** @nocollapse */\n    public static decode(buf: ArrayBufferViewInput) {\n        buf = new ByteBuffer(toUint8Array(buf));\n        const footer = _Footer.getRootAsFooter(buf);\n        const schema = Schema.decode(footer.schema()!);\n        return new OffHeapFooter(schema, footer) as Footer_;\n    }\n\n    /** @nocollapse */\n    public static encode(footer: Footer_) {\n\n        const b: Builder = new Builder();\n        const schemaOffset = Schema.encode(b, footer.schema);\n\n        _Footer.startRecordBatchesVector(b, footer.numRecordBatches);\n        [...footer.recordBatches()].slice().reverse().forEach((rb) => FileBlock.encode(b, rb));\n        const recordBatchesOffset = b.endVector();\n\n        _Footer.startDictionariesVector(b, footer.numDictionaries);\n        [...footer.dictionaryBatches()].slice().reverse().forEach((db) => FileBlock.encode(b, db));\n\n        const dictionaryBatchesOffset = b.endVector();\n\n        _Footer.startFooter(b);\n        _Footer.addSchema(b, schemaOffset);\n        _Footer.addVersion(b, MetadataVersion.V4);\n        _Footer.addRecordBatches(b, recordBatchesOffset);\n        _Footer.addDictionaries(b, dictionaryBatchesOffset);\n        _Footer.finishFooterBuffer(b, _Footer.endFooter(b));\n\n        return b.asUint8Array();\n    }\n\n    // @ts-ignore\n    protected _recordBatches: FileBlock[];\n    // @ts-ignore\n    protected _dictionaryBatches: FileBlock[];\n    public get numRecordBatches() { return this._recordBatches.length; }\n    public get numDictionaries() { return this._dictionaryBatches.length; }\n\n    constructor(public schema: Schema,\n                public version: MetadataVersion = MetadataVersion.V4,\n                recordBatches?: FileBlock[], dictionaryBatches?: FileBlock[]) {\n        recordBatches && (this._recordBatches = recordBatches);\n        dictionaryBatches && (this._dictionaryBatches = dictionaryBatches);\n    }\n\n    public *recordBatches(): Iterable<FileBlock> {\n        for (let block, i = -1, n = this.numRecordBatches; ++i < n;) {\n            if (block = this.getRecordBatch(i)) { yield block; }\n        }\n    }\n\n    public *dictionaryBatches(): Iterable<FileBlock> {\n        for (let block, i = -1, n = this.numDictionaries; ++i < n;) {\n            if (block = this.getDictionaryBatch(i)) { yield block; }\n        }\n    }\n\n    public getRecordBatch(index: number) {\n        return index >= 0\n            && index < this.numRecordBatches\n            && this._recordBatches[index] || null;\n    }\n\n    public getDictionaryBatch(index: number) {\n        return index >= 0\n            && index < this.numDictionaries\n            && this._dictionaryBatches[index] || null;\n    }\n}\n\nexport { Footer_ as Footer };\n\n/** @ignore */\nclass OffHeapFooter extends Footer_ {\n\n    public get numRecordBatches() { return this._footer.recordBatchesLength(); }\n    public get numDictionaries() { return this._footer.dictionariesLength(); }\n\n    constructor(schema: Schema, protected _footer: _Footer) {\n        super(schema, _footer.version());\n    }\n\n    public getRecordBatch(index: number) {\n        if (index >= 0 && index < this.numRecordBatches) {\n            const fileBlock = this._footer.recordBatches(index);\n            if (fileBlock) { return FileBlock.decode(fileBlock); }\n        }\n        return null;\n    }\n\n    public getDictionaryBatch(index: number) {\n        if (index >= 0 && index < this.numDictionaries) {\n            const fileBlock = this._footer.dictionaries(index);\n            if (fileBlock) { return FileBlock.decode(fileBlock); }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nexport class FileBlock {\n\n    /** @nocollapse */\n    public static decode(block: _Block) {\n        return new FileBlock(block.metaDataLength(), block.bodyLength(), block.offset());\n    }\n\n    /** @nocollapse */\n    public static encode(b: Builder, fileBlock: FileBlock) {\n        const { metaDataLength } = fileBlock;\n        const offset = new Long(fileBlock.offset, 0);\n        const bodyLength = new Long(fileBlock.bodyLength, 0);\n        return _Block.createBlock(b, offset, metaDataLength, bodyLength);\n    }\n\n    public offset: number;\n    public bodyLength: number;\n    public metaDataLength: number;\n\n    constructor(metaDataLength: number, bodyLength: Long | number, offset: Long | number) {\n        this.metaDataLength = metaDataLength;\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './adapters';\nimport { decodeUtf8 } from '../util/utf8';\nimport { ITERATOR_DONE, Readable, Writable, AsyncQueue } from './interfaces';\nimport { toUint8Array, joinUint8Arrays, ArrayBufferViewInput } from '../util/buffer';\n\nimport {\n    isPromise, isFetchResponse,\n    isIterable, isAsyncIterable,\n    isReadableDOMStream, isReadableNodeStream\n} from '../util/compat';\n\n/** @ignore */\nexport type WritableSink<T> = Writable<T> | WritableStream<T> | NodeJS.WritableStream | null;\n/** @ignore */\nexport type ReadableSource<T> = Readable<T> | PromiseLike<T> | AsyncIterable<T> | ReadableStream<T> | NodeJS.ReadableStream | null;\n\n/** @ignore */\nexport class AsyncByteQueue<T extends ArrayBufferViewInput = Uint8Array> extends AsyncQueue<Uint8Array, T> {\n    public write(value: ArrayBufferViewInput | Uint8Array) {\n        if ((value = toUint8Array(value)).byteLength > 0) {\n            return super.write(value as T);\n        }\n    }\n    public toString(sync: true): string;\n    public toString(sync?: false): Promise<string>;\n    public toString(sync = false) {\n        return sync\n            ? decodeUtf8(this.toUint8Array(true))\n            : this.toUint8Array(false).then(decodeUtf8);\n    }\n    public toUint8Array(sync: true): Uint8Array;\n    public toUint8Array(sync?: false): Promise<Uint8Array>;\n    public toUint8Array(sync = false) {\n        return sync ? joinUint8Arrays(this._values as any[])[0] : (async () => {\n            let buffers = [], byteLength = 0;\n            for await (const chunk of this) {\n                buffers.push(chunk);\n                byteLength += chunk.byteLength;\n            }\n            return joinUint8Arrays(buffers, byteLength)[0];\n        })();\n    }\n}\n\n/** @ignore */\nexport class ByteStream implements IterableIterator<Uint8Array> {\n    // @ts-ignore\n    private source: ByteStreamSource<Uint8Array>;\n    constructor(source?: Iterable<ArrayBufferViewInput> | ArrayBufferViewInput) {\n        if (source) {\n            this.source = new ByteStreamSource(streamAdapters.fromIterable(source));\n        }\n    }\n    [Symbol.iterator]() { return this; }\n    public next(value?: any) { return this.source.next(value); }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public peek(size?: number | null) { return this.source.peek(size); }\n    public read(size?: number | null) { return this.source.read(size); }\n}\n\n/** @ignore */\nexport class AsyncByteStream implements Readable<Uint8Array>, AsyncIterableIterator<Uint8Array> {\n    // @ts-ignore\n    private source: AsyncByteStreamSource<Uint8Array>;\n    constructor(source?: PromiseLike<ArrayBufferViewInput> | Response | ReadableStream<ArrayBufferViewInput> | NodeJS.ReadableStream | AsyncIterable<ArrayBufferViewInput> | Iterable<ArrayBufferViewInput>) {\n        if (source instanceof AsyncByteStream) {\n            this.source = (source as AsyncByteStream).source;\n        } else if (source instanceof AsyncByteQueue) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        } else if (isReadableNodeStream(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromNodeStream(source));\n        } else if (isReadableDOMStream<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source));\n        } else if (isFetchResponse(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source.body!));\n        } else if (isIterable<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromIterable(source));\n        } else if (isPromise<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        } else if (isAsyncIterable<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        }\n    }\n    [Symbol.asyncIterator]() { return this; }\n    public next(value?: any) { return this.source.next(value); }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public get closed(): Promise<void> { return this.source.closed; }\n    public cancel(reason?: any) { return this.source.cancel(reason); }\n    public peek(size?: number | null) { return this.source.peek(size); }\n    public read(size?: number | null) { return this.source.read(size); }\n}\n\n/** @ignore */\ninterface ByteStreamSourceIterator<T> extends IterableIterator<T> {\n    next(value?: { cmd: 'peek' | 'read', size?: number | null }): IteratorResult<T>;\n}\n\n/** @ignore */\ninterface AsyncByteStreamSourceIterator<T> extends AsyncIterableIterator<T> {\n    next(value?: { cmd: 'peek' | 'read', size?: number | null }): Promise<IteratorResult<T>>;\n}\n\n/** @ignore */\nclass ByteStreamSource<T> {\n    constructor(protected source: ByteStreamSourceIterator<T>) {}\n    public cancel(reason?: any) { this.return(reason); }\n    public peek(size?: number | null): T | null { return this.next(size, 'peek').value; }\n    public read(size?: number | null): T | null { return this.next(size, 'read').value; }\n    public next(size?: number | null, cmd: 'peek' | 'read' = 'read') { return this.source.next({ cmd, size }); }\n    public throw(value?: any) { return Object.create((this.source.throw && this.source.throw(value)) || ITERATOR_DONE); }\n    public return(value?: any) { return Object.create((this.source.return && this.source.return(value)) || ITERATOR_DONE); }\n}\n\n/** @ignore */\nclass AsyncByteStreamSource<T> implements Readable<T> {\n\n    private _closedPromise: Promise<void>;\n    private _closedPromiseResolve?: (value?: any) => void;\n    constructor (protected source: ByteStreamSourceIterator<T> | AsyncByteStreamSourceIterator<T>) {\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n    public async cancel(reason?: any) { await this.return(reason); }\n    public get closed(): Promise<void> { return this._closedPromise; }\n    public async read(size?: number | null): Promise<T | null> { return (await this.next(size, 'read')).value; }\n    public async peek(size?: number | null): Promise<T | null> { return (await this.next(size, 'peek')).value; }\n    public async next(size?: number | null, cmd: 'peek' | 'read' = 'read') { return (await this.source.next({ cmd, size })); }\n    public async throw(value?: any) {\n        const result = (this.source.throw && await this.source.throw(value)) || ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n    public async return(value?: any) {\n        const result = (this.source.return && await this.source.return(value)) || ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FileHandle } from './interfaces';\nimport { ByteStream, AsyncByteStream } from './stream';\nimport { ArrayBufferViewInput, toUint8Array } from '../util/buffer';\n\n/** @ignore */\nexport class RandomAccessFile extends ByteStream {\n    public size: number;\n    public position: number = 0;\n    protected buffer: Uint8Array | null;\n    constructor(buffer: ArrayBufferViewInput, byteLength?: number) {\n        super();\n        this.buffer = toUint8Array(buffer);\n        this.size = typeof byteLength === 'undefined' ? this.buffer.byteLength : byteLength;\n    }\n    public readInt32(position: number) {\n        const { buffer, byteOffset } = this.readAt(position, 4);\n        return new DataView(buffer, byteOffset).getInt32(0, true);\n    }\n    public seek(position: number) {\n        this.position = Math.min(position, this.size);\n        return position < this.size;\n    }\n    public read(nBytes?: number | null) {\n        const { buffer, size, position } = this;\n        if (buffer && position < size) {\n            if (typeof nBytes !== 'number') { nBytes = Infinity; }\n            this.position = Math.min(size,\n                 position + Math.min(size - position, nBytes));\n            return buffer.subarray(position, this.position);\n        }\n        return null;\n    }\n    public readAt(position: number, nBytes: number) {\n        const buf = this.buffer;\n        const end = Math.min(this.size, position + nBytes);\n        return buf ? buf.subarray(position, end) : new Uint8Array(nBytes);\n    }\n    public close() { this.buffer && (this.buffer = null); }\n    public throw(value?: any) { this.close(); return { done: true, value }; }\n    public return(value?: any) { this.close(); return { done: true, value }; }\n}\n\n/** @ignore */\nexport class AsyncRandomAccessFile extends AsyncByteStream {\n    // @ts-ignore\n    public size: number;\n    public position: number = 0;\n    public _pending?: Promise<void>;\n    protected _handle: FileHandle | null;\n    constructor(file: FileHandle, byteLength?: number) {\n        super();\n        this._handle = file;\n        if (typeof byteLength === 'number') {\n            this.size = byteLength;\n        } else {\n            this._pending = (async () => {\n                this.size = (await file.stat()).size;\n                delete this._pending;\n            })();\n        }\n    }\n    public async readInt32(position: number) {\n        const { buffer, byteOffset } = await this.readAt(position, 4);\n        return new DataView(buffer, byteOffset).getInt32(0, true);\n    }\n    public async seek(position: number) {\n        this._pending && await this._pending;\n        this.position = Math.min(position, this.size);\n        return position < this.size;\n    }\n    public async read(nBytes?: number | null) {\n        this._pending && await this._pending;\n        const { _handle: file, size, position } = this;\n        if (file && position < size) {\n            if (typeof nBytes !== 'number') { nBytes = Infinity; }\n            let pos = position, offset = 0, bytesRead = 0;\n            let end = Math.min(size, pos + Math.min(size - pos, nBytes));\n            let buffer = new Uint8Array(Math.max(0, (this.position = end) - pos));\n            while ((pos += bytesRead) < end && (offset += bytesRead) < buffer.byteLength) {\n                ({ bytesRead } = await file.read(buffer, offset, buffer.byteLength - offset, pos));\n            }\n            return buffer;\n        }\n        return null;\n    }\n    public async readAt(position: number, nBytes: number) {\n        this._pending && await this._pending;\n        const { _handle: file, size } = this;\n        if (file && (position + nBytes) < size) {\n            const end = Math.min(size, position + nBytes);\n            const buffer = new Uint8Array(end - position);\n            return (await file.read(buffer, 0, nBytes, position)).buffer;\n        }\n        return new Uint8Array(nBytes);\n    }\n    public async close() { const f = this._handle; this._handle = null; f && await f.close(); }\n    public async throw(value?: any) { await this.close(); return { done: true, value }; }\n    public async return(value?: any) { await this.close(); return { done: true, value }; }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nconst carryBit16 = 1 << 16;\n\n/** @ignore */\nfunction intAsHex(value: number): string {\n    if (value < 0) {\n        value = 0xFFFFFFFF + value + 1;\n    }\n    return `0x${value.toString(16)}`;\n}\n\n/** @ignore */\nconst kInt32DecimalDigits = 8;\n/** @ignore */\nconst kPowersOfTen = [1,\n                      10,\n                      100,\n                      1000,\n                      10000,\n                      100000,\n                      1000000,\n                      10000000,\n                      100000000];\n\n/** @ignore */\nexport class BaseInt64 {\n    constructor (protected buffer: Uint32Array) {}\n\n    public high(): number { return this.buffer[1]; }\n    public low (): number { return this.buffer[0]; }\n\n    protected _times(other: BaseInt64) {\n        // Break the left and right numbers into 16 bit chunks\n        // so that we can multiply them without overflow.\n        const L = new Uint32Array([\n            this.buffer[1] >>> 16,\n            this.buffer[1] & 0xFFFF,\n            this.buffer[0] >>> 16,\n            this.buffer[0] & 0xFFFF\n        ]);\n\n        const R = new Uint32Array([\n            other.buffer[1] >>> 16,\n            other.buffer[1] & 0xFFFF,\n            other.buffer[0] >>> 16,\n            other.buffer[0] & 0xFFFF\n        ]);\n\n        let product = L[3] * R[3];\n        this.buffer[0] = product & 0xFFFF;\n\n        let sum = product >>> 16;\n\n        product = L[2] * R[3];\n        sum += product;\n\n        product = (L[3] * R[2]) >>> 0;\n        sum += product;\n\n        this.buffer[0] += sum << 16;\n\n        this.buffer[1] = (sum >>> 0 < product ? carryBit16 : 0);\n\n        this.buffer[1] += sum >>> 16;\n        this.buffer[1] += L[1] * R[3] + L[2] * R[2] + L[3] * R[1];\n        this.buffer[1] += (L[0] * R[3] + L[1] * R[2] + L[2] * R[1] + L[3] * R[0]) << 16;\n\n        return this;\n      }\n\n    protected _plus(other: BaseInt64) {\n        const sum = (this.buffer[0] + other.buffer[0]) >>> 0;\n        this.buffer[1] += other.buffer[1];\n        if (sum < (this.buffer[0] >>> 0)) {\n          ++this.buffer[1];\n        }\n        this.buffer[0] = sum;\n    }\n\n    public lessThan(other: BaseInt64): boolean {\n        return this.buffer[1] < other.buffer[1] ||\n            (this.buffer[1] === other.buffer[1] && this.buffer[0] < other.buffer[0]);\n    }\n\n    public equals(other: BaseInt64): boolean {\n        return this.buffer[1] === other.buffer[1] && this.buffer[0] == other.buffer[0];\n    }\n\n    public greaterThan(other: BaseInt64): boolean {\n        return other.lessThan(this);\n    }\n\n    public hex(): string {\n        return `${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n}\n\n/** @ignore */\nexport class Uint64 extends BaseInt64 {\n    public times(other: Uint64): Uint64 {\n        this._times(other);\n        return this;\n    }\n\n    public plus(other: Uint64): Uint64 {\n        this._plus(other);\n        return this;\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(2)): Uint64 {\n        return Uint64.fromString(\n            typeof(val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(2)): Uint64 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Uint64.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(2)): Uint64 {\n        const length = str.length;\n\n        let out = new Uint64(out_buffer);\n        for (let posn = 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                          kInt32DecimalDigits : length - posn;\n            const chunk = new Uint64(new Uint32Array([parseInt(str.substr(posn, group), 10), 0]));\n            const multiple = new Uint64(new Uint32Array([kPowersOfTen[group], 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n\n        return out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string|number)[]): Uint32Array {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Uint64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Uint64, right: Uint64): Uint64 {\n        let rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Uint64, right: Uint64): Uint64 {\n        let rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\n\n/** @ignore */\nexport class Int64 extends BaseInt64 {\n    public negate(): Int64 {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n\n        if (this.buffer[0] == 0) { ++this.buffer[1]; }\n        return this;\n    }\n\n    public times(other: Int64): Int64 {\n        this._times(other);\n        return this;\n    }\n\n    public plus(other: Int64): Int64 {\n        this._plus(other);\n        return this;\n    }\n\n    public lessThan(other: Int64): boolean {\n        // force high bytes to be signed\n        const this_high = this.buffer[1] << 0;\n        const other_high = other.buffer[1] << 0;\n        return this_high < other_high ||\n            (this_high === other_high && this.buffer[0] < other.buffer[0]);\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(2)): Int64 {\n        return Int64.fromString(\n            typeof(val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(2)): Int64 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int64.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(2)): Int64 {\n        // TODO: Assert that out_buffer is 0 and length = 2\n        const negate = str.startsWith('-');\n        const length = str.length;\n\n        let out = new Int64(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                          kInt32DecimalDigits : length - posn;\n            const chunk = new Int64(new Uint32Array([parseInt(str.substr(posn, group), 10), 0]));\n            const multiple = new Int64(new Uint32Array([kPowersOfTen[group], 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n        return negate ? out.negate() : out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string|number)[]): Uint32Array {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Int64, right: Int64): Int64 {\n        let rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Int64, right: Int64): Int64 {\n        let rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\n\n/** @ignore */\nexport class Int128 {\n    constructor (private buffer: Uint32Array) {\n        // buffer[3] MSB (high)\n        // buffer[2]\n        // buffer[1]\n        // buffer[0] LSB (low)\n    }\n\n    public high(): Int64 {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n    }\n\n    public low(): Int64 {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset, 2));\n    }\n\n    public negate(): Int128 {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n        this.buffer[2] = ~this.buffer[2];\n        this.buffer[3] = ~this.buffer[3];\n\n        if (this.buffer[0] == 0) { ++this.buffer[1]; }\n        if (this.buffer[1] == 0) { ++this.buffer[2]; }\n        if (this.buffer[2] == 0) { ++this.buffer[3]; }\n        return this;\n    }\n\n    public times(other: Int128): Int128 {\n        // Break the left and right numbers into 32 bit chunks\n        // so that we can multiply them without overflow.\n        const L0 = new Uint64(new Uint32Array([this.buffer[3],  0]));\n        const L1 = new Uint64(new Uint32Array([this.buffer[2],  0]));\n        const L2 = new Uint64(new Uint32Array([this.buffer[1],  0]));\n        const L3 = new Uint64(new Uint32Array([this.buffer[0],  0]));\n\n        const R0 = new Uint64(new Uint32Array([other.buffer[3], 0]));\n        const R1 = new Uint64(new Uint32Array([other.buffer[2], 0]));\n        const R2 = new Uint64(new Uint32Array([other.buffer[1], 0]));\n        const R3 = new Uint64(new Uint32Array([other.buffer[0], 0]));\n\n        let product = Uint64.multiply(L3, R3);\n        this.buffer[0] = product.low();\n\n        let sum = new Uint64(new Uint32Array([product.high(), 0]));\n\n        product = Uint64.multiply(L2, R3);\n        sum.plus(product);\n\n        product = Uint64.multiply(L3, R2);\n        sum.plus(product);\n\n        this.buffer[1] = sum.low();\n\n        this.buffer[3] = (sum.lessThan(product) ? 1 : 0);\n\n        this.buffer[2] = sum.high();\n        let high = new Uint64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n\n        high.plus(Uint64.multiply(L1, R3))\n            .plus(Uint64.multiply(L2, R2))\n            .plus(Uint64.multiply(L3, R1));\n        this.buffer[3] += Uint64.multiply(L0, R3)\n                        .plus(Uint64.multiply(L1, R2))\n                        .plus(Uint64.multiply(L2, R1))\n                        .plus(Uint64.multiply(L3, R0)).low();\n\n        return this;\n    }\n\n    public plus(other: Int128): Int128 {\n        let sums = new Uint32Array(4);\n        sums[3] = (this.buffer[3] + other.buffer[3]) >>> 0;\n        sums[2] = (this.buffer[2] + other.buffer[2]) >>> 0;\n        sums[1] = (this.buffer[1] + other.buffer[1]) >>> 0;\n        sums[0] = (this.buffer[0] + other.buffer[0]) >>> 0;\n\n        if (sums[0] < (this.buffer[0] >>> 0)) {\n            ++sums[1];\n        }\n        if (sums[1] < (this.buffer[1] >>> 0)) {\n            ++sums[2];\n        }\n        if (sums[2] < (this.buffer[2] >>> 0)) {\n            ++sums[3];\n        }\n\n        this.buffer[3] = sums[3];\n        this.buffer[2] = sums[2];\n        this.buffer[1] = sums[1];\n        this.buffer[0] = sums[0];\n\n        return this;\n    }\n\n    public hex(): string {\n        return `${intAsHex(this.buffer[3])} ${intAsHex(this.buffer[2])} ${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Int128, right: Int128): Int128 {\n        let rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Int128, right: Int128): Int128 {\n        let rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(4)): Int128 {\n        return Int128.fromString(\n            typeof(val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(4)): Int128 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int128.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(4)): Int128 {\n        // TODO: Assert that out_buffer is 0 and length = 4\n        const negate = str.startsWith('-');\n        const length = str.length;\n\n        let out = new Int128(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                          kInt32DecimalDigits : length - posn;\n            const chunk = new Int128(new Uint32Array([parseInt(str.substr(posn, group), 10), 0, 0, 0]));\n            const multiple = new Int128(new Uint32Array([kPowersOfTen[group], 0, 0, 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n\n        return negate ? out.negate() : out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string|number)[]): Uint32Array {\n        // TODO: Distinguish between string and number at compile-time\n        const data = new Uint32Array(values.length * 4);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int128.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 4 * 4 * i, 4));\n        }\n        return data;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport * as type from '../type';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { packBools } from '../util/bit';\nimport { encodeUtf8 } from '../util/utf8';\nimport { Int64, Int128 } from '../util/int';\nimport { UnionMode, DateUnit } from '../enum';\nimport { toArrayBufferView } from '../util/buffer';\nimport { BufferRegion, FieldNode } from '../ipc/metadata/message';\n\n/** @ignore */\nexport interface VectorLoader extends Visitor {\n    visit<T extends DataType>(node: Field<T> | T): Data<T>;\n    visitMany<T extends DataType>(nodes: (Field<T> | T)[]): Data<T>[];\n}\n\n/** @ignore */\nexport class VectorLoader extends Visitor {\n    private bytes: Uint8Array;\n    private nodes: FieldNode[];\n    private nodesIndex: number = -1;\n    private buffers: BufferRegion[];\n    private buffersIndex: number = -1;\n    private dictionaries: Map<number, Vector<any>>;\n    constructor(bytes: Uint8Array, nodes: FieldNode[], buffers: BufferRegion[], dictionaries: Map<number, Vector<any>>) {\n        super();\n        this.bytes = bytes;\n        this.nodes = nodes;\n        this.buffers = buffers;\n        this.dictionaries = dictionaries;\n    }\n\n    public visit<T extends DataType>(node: Field<T> | T): Data<T> {\n        return super.visit(node instanceof Field ? node.type : node);\n    }\n\n    public visitNull            <T extends type.Null>            (type: T, { length,           } = this.nextFieldNode()) { return            Data.Null(type, 0, length);                                                                                                                                 }\n    public visitBool            <T extends type.Bool>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Bool(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitInt             <T extends type.Int>             (type: T, { length, nullCount } = this.nextFieldNode()) { return             Data.Int(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitFloat           <T extends type.Float>           (type: T, { length, nullCount } = this.nextFieldNode()) { return           Data.Float(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitUtf8            <T extends type.Utf8>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Utf8(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.readData(type));                                   }\n    public visitBinary          <T extends type.Binary>          (type: T, { length, nullCount } = this.nextFieldNode()) { return          Data.Binary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.readData(type));                                   }\n    public visitFixedSizeBinary <T extends type.FixedSizeBinary> (type: T, { length, nullCount } = this.nextFieldNode()) { return Data.FixedSizeBinary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitDate            <T extends type.Date_>           (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Date(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitTimestamp       <T extends type.Timestamp>       (type: T, { length, nullCount } = this.nextFieldNode()) { return       Data.Timestamp(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitTime            <T extends type.Time>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Time(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitDecimal         <T extends type.Decimal>         (type: T, { length, nullCount } = this.nextFieldNode()) { return         Data.Decimal(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitList            <T extends type.List>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.List(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.visit(type.children[0]));                          }\n    public visitStruct          <T extends type.Struct>          (type: T, { length, nullCount } = this.nextFieldNode()) { return          Data.Struct(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.visitMany(type.children));                                                 }\n    public visitUnion           <T extends type.Union>           (type: T                                              ) { return type.mode === UnionMode.Sparse ? this.visitSparseUnion(type as type.SparseUnion) : this.visitDenseUnion(type as type.DenseUnion);                                      }\n    public visitDenseUnion      <T extends type.DenseUnion>      (type: T, { length, nullCount } = this.nextFieldNode()) { return           Data.Union(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readTypeIds(type), this.readOffsets(type), this.visitMany(type.children)); }\n    public visitSparseUnion     <T extends type.SparseUnion>     (type: T, { length, nullCount } = this.nextFieldNode()) { return           Data.Union(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readTypeIds(type), this.visitMany(type.children));                         }\n    public visitDictionary      <T extends type.Dictionary>      (type: T, { length, nullCount } = this.nextFieldNode()) { return      Data.Dictionary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type.indices), this.readDictionary(type));                        }\n    public visitInterval        <T extends type.Interval>        (type: T, { length, nullCount } = this.nextFieldNode()) { return        Data.Interval(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitFixedSizeList   <T extends type.FixedSizeList>   (type: T, { length, nullCount } = this.nextFieldNode()) { return   Data.FixedSizeList(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.visit(type.children[0]));                                                  }\n    public visitMap             <T extends type.Map_>            (type: T, { length, nullCount } = this.nextFieldNode()) { return             Data.Map(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.visit(type.children[0]));                          }\n\n    protected nextFieldNode() { return this.nodes[++this.nodesIndex]; }\n    protected nextBufferRange() { return this.buffers[++this.buffersIndex]; }\n    protected readNullBitmap<T extends DataType>(type: T, nullCount: number, buffer = this.nextBufferRange()) {\n        return nullCount > 0 && this.readData(type, buffer) || new Uint8Array(0);\n    }\n    protected readOffsets<T extends DataType>(type: T, buffer?: BufferRegion) { return this.readData(type, buffer); }\n    protected readTypeIds<T extends DataType>(type: T, buffer?: BufferRegion) { return this.readData(type, buffer); }\n    protected readData<T extends DataType>(_type: T, { length, offset } = this.nextBufferRange()) {\n        return this.bytes.subarray(offset, offset + length);\n    }\n    protected readDictionary<T extends type.Dictionary>(type: T): Vector<T['dictionary']> {\n        return this.dictionaries.get(type.id)!;\n    }\n}\n\n/** @ignore */\nexport class JSONVectorLoader extends VectorLoader {\n    private sources: any[][];\n    constructor(sources: any[][], nodes: FieldNode[], buffers: BufferRegion[], dictionaries: Map<number, Vector<any>>) {\n        super(new Uint8Array(0), nodes, buffers, dictionaries);\n        this.sources = sources;\n    }\n    protected readNullBitmap<T extends DataType>(_type: T, nullCount: number, { offset } = this.nextBufferRange()) {\n        return nullCount <= 0 ? new Uint8Array(0) : packBools(this.sources[offset]);\n    }\n    protected readOffsets<T extends DataType>(_type: T, { offset } = this.nextBufferRange()) {\n        return toArrayBufferView(Uint8Array, toArrayBufferView(Int32Array, this.sources[offset]));\n    }\n    protected readTypeIds<T extends DataType>(type: T, { offset } = this.nextBufferRange()) {\n        return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, this.sources[offset]));\n    }\n    protected readData<T extends DataType>(type: T, { offset } = this.nextBufferRange()) {\n        const { sources } = this;\n        if (DataType.isTimestamp(type)) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if ((DataType.isInt(type) || DataType.isTime(type)) && type.bitWidth === 64) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if (DataType.isDate(type) && type.unit === DateUnit.MILLISECOND) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if (DataType.isDecimal(type)) {\n            return toArrayBufferView(Uint8Array, Int128.convertArray(sources[offset] as string[]));\n        } else if (DataType.isBinary(type) || DataType.isFixedSizeBinary(type)) {\n            return binaryDataFromJSON(sources[offset] as string[]);\n        } else if (DataType.isBool(type)) {\n            return packBools(sources[offset] as number[]);\n        } else if (DataType.isUtf8(type)) {\n            return encodeUtf8((sources[offset] as string[]).join(''));\n        }\n        return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, sources[offset].map((x) => +x)));\n    }\n}\n\n/** @ignore */\nfunction binaryDataFromJSON(values: string[]) {\n    // \"DATA\": [\"49BC7D5B6C47D2\",\"3F5FB6D9322026\"]\n    // There are definitely more efficient ways to do this... but it gets the\n    // job done.\n    const joined = values.join('');\n    const data = new Uint8Array(joined.length / 2);\n    for (let i = 0; i < joined.length; i += 2) {\n        data[i >> 1] = parseInt(joined.substr(i, 2), 16);\n    }\n    return data;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { flatbuffers } from 'flatbuffers';\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport * as Schema_ from '../fb/Schema';\n\nimport * as type from '../type';\nimport { Visitor } from '../visitor';\n\nimport Null = Schema_.org.apache.arrow.flatbuf.Null;\nimport Int = Schema_.org.apache.arrow.flatbuf.Int;\nimport FloatingPoint = Schema_.org.apache.arrow.flatbuf.FloatingPoint;\nimport Binary = Schema_.org.apache.arrow.flatbuf.Binary;\nimport Bool = Schema_.org.apache.arrow.flatbuf.Bool;\nimport Utf8 = Schema_.org.apache.arrow.flatbuf.Utf8;\nimport Decimal = Schema_.org.apache.arrow.flatbuf.Decimal;\nimport Date = Schema_.org.apache.arrow.flatbuf.Date;\nimport Time = Schema_.org.apache.arrow.flatbuf.Time;\nimport Timestamp = Schema_.org.apache.arrow.flatbuf.Timestamp;\nimport Interval = Schema_.org.apache.arrow.flatbuf.Interval;\nimport List = Schema_.org.apache.arrow.flatbuf.List;\nimport Struct = Schema_.org.apache.arrow.flatbuf.Struct_;\nimport Union = Schema_.org.apache.arrow.flatbuf.Union;\nimport DictionaryEncoding = Schema_.org.apache.arrow.flatbuf.DictionaryEncoding;\nimport FixedSizeBinary = Schema_.org.apache.arrow.flatbuf.FixedSizeBinary;\nimport FixedSizeList = Schema_.org.apache.arrow.flatbuf.FixedSizeList;\nimport Map_ = Schema_.org.apache.arrow.flatbuf.Map;\n\n/** @ignore */\nexport interface TypeAssembler extends Visitor {\n    visit<T extends type.DataType>(node: T, builder: Builder): number | undefined;\n}\n\n/** @ignore */\nexport class TypeAssembler extends Visitor {\n    public visit<T extends type.DataType>(node: T, builder: Builder): number | undefined {\n        return (node == null || builder == null) ? undefined : super.visit(node, builder);\n    }\n    public visitNull<T extends type.Null>(_node: T, b: Builder) {\n        Null.startNull(b);\n        return Null.endNull(b);\n    }\n    public visitInt<T extends type.Int>(node: T, b: Builder) {\n        Int.startInt(b);\n        Int.addBitWidth(b, node.bitWidth);\n        Int.addIsSigned(b, node.isSigned);\n        return Int.endInt(b);\n    }\n    public visitFloat<T extends type.Float>(node: T, b: Builder) {\n        FloatingPoint.startFloatingPoint(b);\n        FloatingPoint.addPrecision(b, node.precision);\n        return FloatingPoint.endFloatingPoint(b);\n    }\n    public visitBinary<T extends type.Binary>(_node: T, b: Builder) {\n        Binary.startBinary(b);\n        return Binary.endBinary(b);\n    }\n    public visitBool<T extends type.Bool>(_node: T, b: Builder) {\n        Bool.startBool(b);\n        return Bool.endBool(b);\n    }\n    public visitUtf8<T extends type.Utf8>(_node: T, b: Builder) {\n        Utf8.startUtf8(b);\n        return Utf8.endUtf8(b);\n    }\n    public visitDecimal<T extends type.Decimal>(node: T, b: Builder) {\n        Decimal.startDecimal(b);\n        Decimal.addScale(b, node.scale);\n        Decimal.addPrecision(b, node.precision);\n        return Decimal.endDecimal(b);\n    }\n    public visitDate<T extends type.Date_>(node: T, b: Builder) {\n        Date.startDate(b);\n        Date.addUnit(b, node.unit);\n        return Date.endDate(b);\n    }\n    public visitTime<T extends type.Time>(node: T, b: Builder) {\n        Time.startTime(b);\n        Time.addUnit(b, node.unit);\n        Time.addBitWidth(b, node.bitWidth);\n        return Time.endTime(b);\n    }\n    public visitTimestamp<T extends type.Timestamp>(node: T, b: Builder) {\n        const timezone = (node.timezone && b.createString(node.timezone)) || undefined;\n        Timestamp.startTimestamp(b);\n        Timestamp.addUnit(b, node.unit);\n        if (timezone !== undefined) {\n            Timestamp.addTimezone(b, timezone);\n        }\n        return Timestamp.endTimestamp(b);\n    }\n    public visitInterval<T extends type.Interval>(node: T, b: Builder) {\n        Interval.startInterval(b);\n        Interval.addUnit(b, node.unit);\n        return Interval.endInterval(b);\n    }\n    public visitList<T extends type.List>(_node: T, b: Builder) {\n        List.startList(b);\n        return List.endList(b);\n    }\n    public visitStruct<T extends type.Struct>(_node: T, b: Builder) {\n        Struct.startStruct_(b);\n        return Struct.endStruct_(b);\n    }\n    public visitUnion<T extends type.Union>(node: T, b: Builder) {\n        Union.startTypeIdsVector(b, node.typeIds.length);\n        const typeIds = Union.createTypeIdsVector(b, node.typeIds);\n        Union.startUnion(b);\n        Union.addMode(b, node.mode);\n        Union.addTypeIds(b, typeIds);\n        return Union.endUnion(b);\n    }\n    public visitDictionary<T extends type.Dictionary>(node: T, b: Builder) {\n        const indexType = this.visit(node.indices, b);\n        DictionaryEncoding.startDictionaryEncoding(b);\n        DictionaryEncoding.addId(b, new Long(node.id, 0));\n        DictionaryEncoding.addIsOrdered(b, node.isOrdered);\n        if (indexType !== undefined) {\n            DictionaryEncoding.addIndexType(b, indexType);\n        }\n        return DictionaryEncoding.endDictionaryEncoding(b);\n    }\n    public visitFixedSizeBinary<T extends type.FixedSizeBinary>(node: T, b: Builder) {\n        FixedSizeBinary.startFixedSizeBinary(b);\n        FixedSizeBinary.addByteWidth(b, node.byteWidth);\n        return FixedSizeBinary.endFixedSizeBinary(b);\n    }\n    public visitFixedSizeList<T extends type.FixedSizeList>(node: T, b: Builder) {\n        FixedSizeList.startFixedSizeList(b);\n        FixedSizeList.addListSize(b, node.listSize);\n        return FixedSizeList.endFixedSizeList(b);\n    }\n    public visitMap<T extends type.Map_>(node: T, b: Builder) {\n        Map_.startMap(b);\n        Map_.addKeysSorted(b, node.keysSorted);\n        return Map_.endMap(b);\n    }\n}\n\n/** @ignore */\nexport const instance = new TypeAssembler();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Schema, Field } from '../../schema';\nimport {\n    DataType, Dictionary, TimeBitWidth,\n    Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n    Bool, Null, Int, Float, Date_, Time, Interval, Timestamp, IntBitWidth, Int32, TKeys,\n} from '../../type';\n\nimport { DictionaryBatch, RecordBatch, FieldNode, BufferRegion } from './message';\nimport { TimeUnit, Precision, IntervalUnit, UnionMode, DateUnit } from '../../enum';\n\n/** @ignore */\nexport function schemaFromJSON(_schema: any, dictionaries: Map<number, DataType> = new Map()) {\n    return new Schema(\n        schemaFieldsFromJSON(_schema, dictionaries),\n        customMetadataFromJSON(_schema['customMetadata']),\n        dictionaries\n    );\n}\n\n/** @ignore */\nexport function recordBatchFromJSON(b: any) {\n    return new RecordBatch(\n        b['count'],\n        fieldNodesFromJSON(b['columns']),\n        buffersFromJSON(b['columns'])\n    );\n}\n\n/** @ignore */\nexport function dictionaryBatchFromJSON(b: any) {\n    return new DictionaryBatch(\n        recordBatchFromJSON(b['data']),\n        b['id'], b['isDelta']\n    );\n}\n\n/** @ignore */\nfunction schemaFieldsFromJSON(_schema: any, dictionaries?: Map<number, DataType>) {\n    return (_schema['fields'] || []).filter(Boolean).map((f: any) => Field.fromJSON(f, dictionaries));\n}\n\n/** @ignore */\nfunction fieldChildrenFromJSON(_field: any, dictionaries?: Map<number, DataType>): Field[] {\n    return (_field['children'] || []).filter(Boolean).map((f: any) => Field.fromJSON(f, dictionaries));\n}\n\n/** @ignore */\nfunction fieldNodesFromJSON(xs: any[]): FieldNode[] {\n    return (xs || []).reduce<FieldNode[]>((fieldNodes, column: any) => [\n        ...fieldNodes,\n        new FieldNode(\n            column['count'],\n            nullCountFromJSON(column['VALIDITY'])\n        ),\n        ...fieldNodesFromJSON(column['children'])\n    ], [] as FieldNode[]);\n}\n\n/** @ignore */\nfunction buffersFromJSON(xs: any[], buffers: BufferRegion[] = []): BufferRegion[] {\n    for (let i = -1, n = (xs || []).length; ++i < n;) {\n        const column = xs[i];\n        column['VALIDITY'] && buffers.push(new BufferRegion(buffers.length, column['VALIDITY'].length));\n        column['TYPE'] && buffers.push(new BufferRegion(buffers.length, column['TYPE'].length));\n        column['OFFSET'] && buffers.push(new BufferRegion(buffers.length, column['OFFSET'].length));\n        column['DATA'] && buffers.push(new BufferRegion(buffers.length, column['DATA'].length));\n        buffers = buffersFromJSON(column['children'], buffers);\n    }\n    return buffers;\n}\n\n/** @ignore */\nfunction nullCountFromJSON(validity: number[]) {\n    return (validity || []).reduce((sum, val) => sum + +(val === 0), 0);\n}\n\n/** @ignore */\nexport function fieldFromJSON(_field: any, dictionaries?: Map<number, DataType>) {\n\n    let id: number;\n    let keys: TKeys | null;\n    let field: Field | void;\n    let dictMeta: any;\n    let type: DataType<any>;\n    let dictType: Dictionary;\n\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = _field['dictionary'])) {\n        type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries));\n        field = new Field(_field['name'], type, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // tslint:disable\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta['id'])) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) as TKeys : new Int32();\n        dictionaries.set(id, type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries)));\n        dictType = new Dictionary(type, keys, id, dictMeta['isOrdered']);\n        field = new Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) as TKeys : new Int32();\n        dictType = new Dictionary(dictionaries.get(id)!, keys, id, dictMeta['isOrdered']);\n        field = new Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    return field || null;\n}\n\n/** @ignore */\nfunction customMetadataFromJSON(_metadata?: object) {\n    return new Map<string, string>(Object.entries(_metadata || {}));\n}\n\n/** @ignore */\nfunction indexTypeFromJSON(_type: any) {\n    return new Int(_type['isSigned'], _type['bitWidth']);\n}\n\n/** @ignore */\nfunction typeFromJSON(f: any, children?: Field[]): DataType<any> {\n\n    const typeId = f['type']['name'];\n\n    switch (typeId) {\n        case 'NONE':   return new Null();\n        case 'null':   return new Null();\n        case 'binary': return new Binary();\n        case 'utf8':   return new Utf8();\n        case 'bool':   return new Bool();\n        case 'list':   return new List((children || [])[0]);\n        case 'struct': return new Struct(children || []);\n        case 'struct_': return new Struct(children || []);\n    }\n\n    switch (typeId) {\n        case 'int': {\n            const t = f['type'];\n            return new Int(t['isSigned'], t['bitWidth'] as IntBitWidth);\n        }\n        case 'floatingpoint': {\n            const t = f['type'];\n            return new Float(Precision[t['precision']] as any);\n        }\n        case 'decimal': {\n            const t = f['type'];\n            return new Decimal(t['scale'], t['precision']);\n        }\n        case 'date': {\n            const t = f['type'];\n            return new Date_(DateUnit[t['unit']] as any);\n        }\n        case 'time': {\n            const t = f['type'];\n            return new Time(TimeUnit[t['unit']] as any, t['bitWidth'] as TimeBitWidth);\n        }\n        case 'timestamp': {\n            const t = f['type'];\n            return new Timestamp(TimeUnit[t['unit']] as any, t['timezone']);\n        }\n        case 'interval': {\n            const t = f['type'];\n            return new Interval(IntervalUnit[t['unit']] as any);\n        }\n        case 'union': {\n            const t = f['type'];\n            return new Union(UnionMode[t['mode']] as any, (t['typeIds'] || []), children || []);\n        }\n        case 'fixedsizebinary': {\n            const t = f['type'];\n            return new FixedSizeBinary(t['byteWidth']);\n        }\n        case 'fixedsizelist': {\n            const t = f['type'];\n            return new FixedSizeList(t['listSize'], (children || [])[0]);\n        }\n        case 'map': {\n            const t = f['type'];\n            return new Map_((children || [])[0], t['keysSorted']);\n        }\n    }\n    throw new Error(`Unrecognized type: \"${typeId}\"`);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as Schema_ from '../../fb/Schema';\nimport * as Message_ from '../../fb/Message';\n\nimport { Schema, Field } from '../../schema';\nimport { toUint8Array } from '../../util/buffer';\nimport { ArrayBufferViewInput } from '../../util/buffer';\nimport { MessageHeader, MetadataVersion } from '../../enum';\nimport { instance as typeAssembler } from '../../visitor/typeassembler';\nimport { fieldFromJSON, schemaFromJSON, recordBatchFromJSON, dictionaryBatchFromJSON } from './json';\n\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport _Int = Schema_.org.apache.arrow.flatbuf.Int;\nimport Type = Schema_.org.apache.arrow.flatbuf.Type;\nimport _Field = Schema_.org.apache.arrow.flatbuf.Field;\nimport _Schema = Schema_.org.apache.arrow.flatbuf.Schema;\nimport _Buffer = Schema_.org.apache.arrow.flatbuf.Buffer;\nimport _Message = Message_.org.apache.arrow.flatbuf.Message;\nimport _KeyValue = Schema_.org.apache.arrow.flatbuf.KeyValue;\nimport _FieldNode = Message_.org.apache.arrow.flatbuf.FieldNode;\nimport _Endianness = Schema_.org.apache.arrow.flatbuf.Endianness;\nimport _RecordBatch = Message_.org.apache.arrow.flatbuf.RecordBatch;\nimport _DictionaryBatch = Message_.org.apache.arrow.flatbuf.DictionaryBatch;\nimport _DictionaryEncoding = Schema_.org.apache.arrow.flatbuf.DictionaryEncoding;\n\nimport {\n    DataType, Dictionary, TimeBitWidth,\n    Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n    Bool, Null, Int, Float, Date_, Time, Interval, Timestamp, IntBitWidth, Int32, TKeys,\n} from '../../type';\n\n/**\n * @ignore\n * @private\n **/\nexport class Message<T extends MessageHeader = any> {\n\n    /** @nocollapse */\n    public static fromJSON<T extends MessageHeader>(msg: any, headerType: T): Message<T> {\n        const message = new Message(0, MetadataVersion.V4, headerType);\n        message._createHeader = messageHeaderFromJSON(msg, headerType);\n        return message;\n    }\n\n    /** @nocollapse */\n    public static decode(buf: ArrayBufferViewInput) {\n        buf = new ByteBuffer(toUint8Array(buf));\n        const _message = _Message.getRootAsMessage(buf);\n        const bodyLength: Long = _message.bodyLength()!;\n        const version: MetadataVersion = _message.version();\n        const headerType: MessageHeader = _message.headerType();\n        const message = new Message(bodyLength, version, headerType);\n        message._createHeader = decodeMessageHeader(_message, headerType);\n        return message;\n    }\n\n    /** @nocollapse */\n    public static encode<T extends MessageHeader>(message: Message<T>) {\n        let b = new Builder(), headerOffset = -1;\n        if (message.isSchema()) {\n            headerOffset = Schema.encode(b, message.header() as Schema);\n        } else if (message.isRecordBatch()) {\n            headerOffset = RecordBatch.encode(b, message.header() as RecordBatch);\n        } else if (message.isDictionaryBatch()) {\n            headerOffset = DictionaryBatch.encode(b, message.header() as DictionaryBatch);\n        }\n        _Message.startMessage(b);\n        _Message.addVersion(b, MetadataVersion.V4);\n        _Message.addHeader(b, headerOffset);\n        _Message.addHeaderType(b, message.headerType);\n        _Message.addBodyLength(b, new Long(message.bodyLength, 0));\n        _Message.finishMessageBuffer(b, _Message.endMessage(b));\n        return b.asUint8Array();\n    }\n\n    /** @nocollapse */\n    public static from(header: Schema | RecordBatch | DictionaryBatch, bodyLength = 0) {\n        if (header instanceof Schema) {\n            return new Message(0, MetadataVersion.V4, MessageHeader.Schema, header);\n        }\n        if (header instanceof RecordBatch) {\n            return new Message(bodyLength, MetadataVersion.V4, MessageHeader.RecordBatch, header);\n        }\n        if (header instanceof DictionaryBatch) {\n            return new Message(bodyLength, MetadataVersion.V4, MessageHeader.DictionaryBatch, header);\n        }\n        throw new Error(`Unrecognized Message header: ${header}`);\n    }\n\n    // @ts-ignore\n    public body: Uint8Array;\n    protected _headerType: T;\n    protected _bodyLength: number;\n    protected _version: MetadataVersion;\n    public get type() { return this.headerType; }\n    public get version() { return this._version; }\n    public get headerType() { return this._headerType; }\n    public get bodyLength() { return this._bodyLength; }\n    // @ts-ignore\n    protected _createHeader: MessageHeaderDecoder;\n    public header() { return this._createHeader<T>(); }\n    public isSchema(): this is Message<MessageHeader.Schema> { return this.headerType === MessageHeader.Schema; }\n    public isRecordBatch(): this is Message<MessageHeader.RecordBatch> { return this.headerType === MessageHeader.RecordBatch; }\n    public isDictionaryBatch(): this is Message<MessageHeader.DictionaryBatch> { return this.headerType === MessageHeader.DictionaryBatch; }\n\n    constructor(bodyLength: Long | number, version: MetadataVersion, headerType: T, header?: any) {\n        this._version = version;\n        this._headerType = headerType;\n        this.body = new Uint8Array(0);\n        header && (this._createHeader = () => header);\n        this._bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class RecordBatch {\n    protected _length: number;\n    protected _nodes: FieldNode[];\n    protected _buffers: BufferRegion[];\n    public get nodes() { return this._nodes; }\n    public get length() { return this._length; }\n    public get buffers() { return this._buffers; }\n    constructor(length: Long | number, nodes: FieldNode[], buffers: BufferRegion[]) {\n        this._nodes = nodes;\n        this._buffers = buffers;\n        this._length = typeof length === 'number' ? length : length.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class DictionaryBatch {\n\n    protected _id: number;\n    protected _isDelta: boolean;\n    protected _data: RecordBatch;\n    public get id() { return this._id; }\n    public get data() { return this._data; }\n    public get isDelta() { return this._isDelta; }\n    public get length(): number { return this.data.length; }\n    public get nodes(): FieldNode[] { return this.data.nodes; }\n    public get buffers(): BufferRegion[] { return this.data.buffers; }\n\n    constructor(data: RecordBatch, id: Long | number, isDelta: boolean = false) {\n        this._data = data;\n        this._isDelta = isDelta;\n        this._id = typeof id === 'number' ? id : id.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class BufferRegion {\n    public offset: number;\n    public length: number;\n    constructor(offset: Long | number, length: Long | number) {\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.length = typeof length === 'number' ? length : length.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class FieldNode {\n    public length: number;\n    public nullCount: number;\n    constructor(length: Long | number, nullCount: Long | number) {\n        this.length = typeof length === 'number' ? length : length.low;\n        this.nullCount = typeof nullCount === 'number' ? nullCount : nullCount.low;\n    }\n}\n\n/** @ignore */\nfunction messageHeaderFromJSON(message: any, type: MessageHeader) {\n    return (() => {\n        switch (type) {\n            case MessageHeader.Schema: return Schema.fromJSON(message);\n            case MessageHeader.RecordBatch: return RecordBatch.fromJSON(message);\n            case MessageHeader.DictionaryBatch: return DictionaryBatch.fromJSON(message);\n        }\n        throw new Error(`Unrecognized Message type: { name: ${MessageHeader[type]}, type: ${type} }`);\n    }) as MessageHeaderDecoder;\n}\n\n/** @ignore */\nfunction decodeMessageHeader(message: _Message, type: MessageHeader) {\n    return (() => {\n        switch (type) {\n            case MessageHeader.Schema: return Schema.decode(message.header(new _Schema())!);\n            case MessageHeader.RecordBatch: return RecordBatch.decode(message.header(new _RecordBatch())!, message.version());\n            case MessageHeader.DictionaryBatch: return DictionaryBatch.decode(message.header(new _DictionaryBatch())!, message.version());\n        }\n        throw new Error(`Unrecognized Message type: { name: ${MessageHeader[type]}, type: ${type} }`);\n    }) as MessageHeaderDecoder;\n}\n\nField['encode'] = encodeField;\nField['decode'] = decodeField;\nField['fromJSON'] = fieldFromJSON;\n\nSchema['encode'] = encodeSchema;\nSchema['decode'] = decodeSchema;\nSchema['fromJSON'] = schemaFromJSON;\n\nRecordBatch['encode'] = encodeRecordBatch;\nRecordBatch['decode'] = decodeRecordBatch;\nRecordBatch['fromJSON'] = recordBatchFromJSON;\n\nDictionaryBatch['encode'] = encodeDictionaryBatch;\nDictionaryBatch['decode'] = decodeDictionaryBatch;\nDictionaryBatch['fromJSON'] = dictionaryBatchFromJSON;\n\nFieldNode['encode'] = encodeFieldNode;\nFieldNode['decode'] = decodeFieldNode;\n\nBufferRegion['encode'] = encodeBufferRegion;\nBufferRegion['decode'] = decodeBufferRegion;\n\ndeclare module '../../schema' {\n    namespace Field {\n        export { encodeField as encode };\n        export { decodeField as decode };\n        export { fieldFromJSON as fromJSON };\n    }\n    namespace Schema {\n        export { encodeSchema as encode };\n        export { decodeSchema as decode };\n        export { schemaFromJSON as fromJSON };\n    }\n}\n\ndeclare module './message' {\n    namespace RecordBatch {\n        export { encodeRecordBatch as encode };\n        export { decodeRecordBatch as decode };\n        export { recordBatchFromJSON as fromJSON };\n    }\n    namespace DictionaryBatch {\n        export { encodeDictionaryBatch as encode };\n        export { decodeDictionaryBatch as decode };\n        export { dictionaryBatchFromJSON as fromJSON };\n    }\n    namespace FieldNode {\n        export { encodeFieldNode as encode };\n        export { decodeFieldNode as decode };\n    }\n    namespace BufferRegion {\n        export { encodeBufferRegion as encode };\n        export { decodeBufferRegion as decode };\n    }\n}\n\n/** @ignore */\nfunction decodeSchema(_schema: _Schema, dictionaries: Map<number, DataType> = new Map()) {\n    const fields = decodeSchemaFields(_schema, dictionaries);\n    return new Schema(fields, decodeCustomMetadata(_schema), dictionaries);\n}\n\n/** @ignore */\nfunction decodeRecordBatch(batch: _RecordBatch, version = MetadataVersion.V4) {\n    return new RecordBatch(batch.length(), decodeFieldNodes(batch), decodeBuffers(batch, version));\n}\n\n/** @ignore */\nfunction decodeDictionaryBatch(batch: _DictionaryBatch, version = MetadataVersion.V4) {\n    return new DictionaryBatch(RecordBatch.decode(batch.data()!, version), batch.id(), batch.isDelta());\n}\n\n/** @ignore */\nfunction decodeBufferRegion(b: _Buffer) {\n    return new BufferRegion(b.offset(), b.length());\n}\n\n/** @ignore */\nfunction decodeFieldNode(f: _FieldNode) {\n    return new FieldNode(f.length(), f.nullCount());\n}\n\n/** @ignore */\nfunction decodeFieldNodes(batch: _RecordBatch) {\n    const nodes = [] as FieldNode[];\n    for (let f, i = -1, j = -1, n = batch.nodesLength(); ++i < n;) {\n        if (f = batch.nodes(i)) {\n            nodes[++j] = FieldNode.decode(f);\n        }\n    }\n    return nodes;\n}\n\n/** @ignore */\nfunction decodeBuffers(batch: _RecordBatch, version: MetadataVersion) {\n    const bufferRegions = [] as BufferRegion[];\n    for (let b, i = -1, j = -1, n = batch.buffersLength(); ++i < n;) {\n        if (b = batch.buffers(i)) {\n        // If this Arrow buffer was written before version 4,\n        // advance the buffer's bb_pos 8 bytes to skip past\n        // the now-removed page_id field\n        if (version < MetadataVersion.V4) {\n                b.bb_pos += (8 * (i + 1));\n            }\n            bufferRegions[++j] = BufferRegion.decode(b);\n        }\n    }\n    return bufferRegions;\n}\n\n/** @ignore */\nfunction decodeSchemaFields(schema: _Schema, dictionaries?: Map<number, DataType>) {\n    const fields = [] as Field[];\n    for (let f, i = -1, j = -1, n = schema.fieldsLength(); ++i < n;) {\n        if (f = schema.fields(i)) {\n            fields[++j] = Field.decode(f, dictionaries);\n        }\n    }\n    return fields;\n}\n\n/** @ignore */\nfunction decodeFieldChildren(field: _Field, dictionaries?: Map<number, DataType>): Field[] {\n    const children = [] as Field[];\n    for (let f, i = -1, j = -1, n = field.childrenLength(); ++i < n;) {\n        if (f = field.children(i)) {\n            children[++j] = Field.decode(f, dictionaries);\n        }\n    }\n    return children;\n}\n\n/** @ignore */\nfunction decodeField(f: _Field, dictionaries?: Map<number, DataType>) {\n\n    let id: number;\n    let field: Field | void;\n    let type: DataType<any>;\n    let keys: _Int | TKeys | null;\n    let dictType: Dictionary;\n    let dictMeta: _DictionaryEncoding | null;\n\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = f.dictionary())) {\n        type = decodeFieldType(f, decodeFieldChildren(f, dictionaries));\n        field = new Field(f.name()!, type, f.nullable(), decodeCustomMetadata(f));\n    }\n    // tslint:disable\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta.id().low)) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) as TKeys : new Int32();\n        dictionaries.set(id, type = decodeFieldType(f, decodeFieldChildren(f, dictionaries)));\n        dictType = new Dictionary(type, keys, id, dictMeta.isOrdered());\n        field = new Field(f.name()!, dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) as TKeys : new Int32();\n        dictType = new Dictionary(dictionaries.get(id)!, keys, id, dictMeta.isOrdered());\n        field = new Field(f.name()!, dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    return field || null;\n}\n\n/** @ignore */\nfunction decodeCustomMetadata(parent?: _Schema | _Field | null) {\n    const data = new Map<string, string>();\n    if (parent) {\n        for (let entry, key, i = -1, n = parent.customMetadataLength() | 0; ++i < n;) {\n            if ((entry = parent.customMetadata(i)) && (key = entry.key()) != null) {\n                data.set(key, entry.value()!);\n            }\n        }\n    }\n    return data;\n}\n\n/** @ignore */\nfunction decodeIndexType(_type: _Int) {\n    return new Int(_type.isSigned(), _type.bitWidth() as IntBitWidth);\n}\n\n/** @ignore */\nfunction decodeFieldType(f: _Field, children?: Field[]): DataType<any> {\n\n    const typeId = f.typeType();\n\n    switch (typeId) {\n        case Type.NONE:    return new Null();\n        case Type.Null:    return new Null();\n        case Type.Binary:  return new Binary();\n        case Type.Utf8:    return new Utf8();\n        case Type.Bool:    return new Bool();\n        case Type.List:    return new List((children || [])[0]);\n        case Type.Struct_: return new Struct(children || []);\n    }\n\n    switch (typeId) {\n        case Type.Int: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Int())!;\n            return new Int(t.isSigned(), t.bitWidth());\n        }\n        case Type.FloatingPoint: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FloatingPoint())!;\n            return new Float(t.precision());\n        }\n        case Type.Decimal: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Decimal())!;\n            return new Decimal(t.scale(), t.precision());\n        }\n        case Type.Date: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Date())!;\n            return new Date_(t.unit());\n        }\n        case Type.Time: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Time())!;\n            return new Time(t.unit(), t.bitWidth() as TimeBitWidth);\n        }\n        case Type.Timestamp: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Timestamp())!;\n            return new Timestamp(t.unit(), t.timezone());\n        }\n        case Type.Interval: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Interval())!;\n            return new Interval(t.unit());\n        }\n        case Type.Union: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Union())!;\n            return new Union(t.mode(), t.typeIdsArray() || [], children || []);\n        }\n        case Type.FixedSizeBinary: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FixedSizeBinary())!;\n            return new FixedSizeBinary(t.byteWidth());\n        }\n        case Type.FixedSizeList: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FixedSizeList())!;\n            return new FixedSizeList(t.listSize(), (children || [])[0]);\n        }\n        case Type.Map: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Map())!;\n            return new Map_((children || [])[0], t.keysSorted());\n        }\n    }\n    throw new Error(`Unrecognized type: \"${Type[typeId]}\" (${typeId})`);\n}\n\n/** @ignore */\nfunction encodeSchema(b: Builder, schema: Schema) {\n\n    const fieldOffsets = schema.fields.map((f) => Field.encode(b, f));\n\n    _Schema.startFieldsVector(b, fieldOffsets.length);\n\n    const fieldsVectorOffset = _Schema.createFieldsVector(b, fieldOffsets);\n\n    const metadataOffset = !(schema.metadata && schema.metadata.size > 0) ? -1 :\n        _Schema.createCustomMetadataVector(b, [...schema.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n\n    _Schema.startSchema(b);\n    _Schema.addFields(b, fieldsVectorOffset);\n    _Schema.addEndianness(b, platformIsLittleEndian ? _Endianness.Little : _Endianness.Big);\n\n    if (metadataOffset !== -1) { _Schema.addCustomMetadata(b, metadataOffset); }\n\n    return _Schema.endSchema(b);\n}\n\n/** @ignore */\nfunction encodeField(b: Builder, field: Field) {\n\n    let nameOffset = -1;\n    let typeOffset = -1;\n    let dictionaryOffset = -1;\n\n    let type = field.type;\n    let typeId: Type = <any> field.typeId;\n\n    if (!DataType.isDictionary(type)) {\n        typeOffset = typeAssembler.visit(type, b)!;\n    } else {\n        typeId = type.dictionary.typeId;\n        dictionaryOffset = typeAssembler.visit(type, b)!;\n        typeOffset = typeAssembler.visit(type.dictionary, b)!;\n    }\n\n    const childOffsets = (type.children || []).map((f: Field) => Field.encode(b, f));\n    const childrenVectorOffset = _Field.createChildrenVector(b, childOffsets);\n\n    const metadataOffset = !(field.metadata && field.metadata.size > 0) ? -1 :\n        _Field.createCustomMetadataVector(b, [...field.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n\n    if (field.name) {\n        nameOffset = b.createString(field.name);\n    }\n\n    _Field.startField(b);\n    _Field.addType(b, typeOffset);\n    _Field.addTypeType(b, typeId);\n    _Field.addChildren(b, childrenVectorOffset);\n    _Field.addNullable(b, !!field.nullable);\n\n    if (nameOffset !== -1) { _Field.addName(b, nameOffset); }\n    if (dictionaryOffset !== -1) { _Field.addDictionary(b, dictionaryOffset); }\n    if (metadataOffset !== -1) { _Field.addCustomMetadata(b, metadataOffset); }\n\n    return _Field.endField(b);\n}\n\n/** @ignore */\nfunction encodeRecordBatch(b: Builder, recordBatch: RecordBatch) {\n\n    const nodes = recordBatch.nodes || [];\n    const buffers = recordBatch.buffers || [];\n\n    _RecordBatch.startNodesVector(b, nodes.length);\n    nodes.slice().reverse().forEach((n) => FieldNode.encode(b, n));\n\n    const nodesVectorOffset = b.endVector();\n\n    _RecordBatch.startBuffersVector(b, buffers.length);\n    buffers.slice().reverse().forEach((b_) => BufferRegion.encode(b, b_));\n\n    const buffersVectorOffset = b.endVector();\n\n    _RecordBatch.startRecordBatch(b);\n    _RecordBatch.addLength(b, new Long(recordBatch.length, 0));\n    _RecordBatch.addNodes(b, nodesVectorOffset);\n    _RecordBatch.addBuffers(b, buffersVectorOffset);\n    return _RecordBatch.endRecordBatch(b);\n}\n\n/** @ignore */\nfunction encodeDictionaryBatch(b: Builder, dictionaryBatch: DictionaryBatch) {\n    const dataOffset = RecordBatch.encode(b, dictionaryBatch.data);\n    _DictionaryBatch.startDictionaryBatch(b);\n    _DictionaryBatch.addId(b, new Long(dictionaryBatch.id, 0));\n    _DictionaryBatch.addIsDelta(b, dictionaryBatch.isDelta);\n    _DictionaryBatch.addData(b, dataOffset);\n    return _DictionaryBatch.endDictionaryBatch(b);\n}\n\n/** @ignore */\nfunction encodeFieldNode(b: Builder, node: FieldNode) {\n    return _FieldNode.createFieldNode(b, new Long(node.length, 0), new Long(node.nullCount, 0));\n}\n\n/** @ignore */\nfunction encodeBufferRegion(b: Builder, node: BufferRegion) {\n    return _Buffer.createBuffer(b, new Long(node.offset, 0), new Long(node.length, 0));\n}\n\n/** @ignore */\nconst platformIsLittleEndian = (function() {\n    const buffer = new ArrayBuffer(2);\n    new DataView(buffer).setInt16(0, 256, true /* littleEndian */);\n    // Int16Array uses the platform's endianness.\n    return new Int16Array(buffer)[0] === 256;\n})();\n\n/** @ignore */\ntype MessageHeaderDecoder = <T extends MessageHeader>() => T extends MessageHeader.Schema ? Schema\n                                                         : T extends MessageHeader.RecordBatch ? RecordBatch\n                                                         : T extends MessageHeader.DictionaryBatch ? DictionaryBatch : never;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { MessageHeader } from '../enum';\nimport { flatbuffers } from 'flatbuffers';\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport { Message } from './metadata/message';\nimport { isFileHandle } from '../util/compat';\nimport { AsyncRandomAccessFile } from '../io/file';\nimport { toUint8Array, ArrayBufferViewInput } from '../util/buffer';\nimport { ByteStream, ReadableSource, AsyncByteStream } from '../io/stream';\nimport { ArrowJSON, ArrowJSONLike, ITERATOR_DONE, FileHandle } from '../io/interfaces';\n\n/** @ignore */ const invalidMessageType       = (type: MessageHeader) => `Expected ${MessageHeader[type]} Message in stream, but was null or length 0.`;\n/** @ignore */ const nullMessage              = (type: MessageHeader) => `Header pointer of flatbuffer-encoded ${MessageHeader[type]} Message is null or length 0.`;\n/** @ignore */ const invalidMessageMetadata   = (expected: number, actual: number) => `Expected to read ${expected} metadata bytes, but only read ${actual}.`;\n/** @ignore */ const invalidMessageBodyLength = (expected: number, actual: number) => `Expected to read ${expected} bytes for message body, but only read ${actual}.`;\n\n/** @ignore */\nexport class MessageReader implements IterableIterator<Message> {\n    protected source: ByteStream;\n    constructor(source: ByteStream | ArrayBufferViewInput | Iterable<ArrayBufferViewInput>) {\n        this.source = source instanceof ByteStream ? source : new ByteStream(source);\n    }\n    public [Symbol.iterator](): IterableIterator<Message> { return this as IterableIterator<Message>; }\n    public next(): IteratorResult<Message> {\n        let r;\n        if ((r = this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n        // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n        // pre-v0.15 message, where the first 4 bytes are the metadata length.\n        if ((r.value === -1) &&\n            (r = this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        if ((r = this.readMetadata(r.value)).done) { return ITERATOR_DONE; }\n        return (<any> r) as IteratorResult<Message>;\n    }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public readMessageBody(bodyLength: number): Uint8Array {\n        if (bodyLength <= 0) { return new Uint8Array(0); }\n        const buf = toUint8Array(this.source.read(bodyLength));\n        if (buf.byteLength < bodyLength) {\n            throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n        }\n        // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n        // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n        return /* 1. */ (buf.byteOffset % 8 === 0) &&\n               /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n    }\n    public readSchema(throwIfNull = false) {\n        const type = MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message && message.header();\n        if (throwIfNull && !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n    protected readMetadataLength(): IteratorResult<number> {\n        const buf = this.source.read(PADDING);\n        const bb = buf && new ByteBuffer(buf);\n        const len = bb && bb.readInt32(0) || 0;\n        return { done: len === 0, value: len };\n    }\n    protected readMetadata(metadataLength: number): IteratorResult<Message> {\n        const buf = this.source.read(metadataLength);\n        if (!buf) { return ITERATOR_DONE; }\n        if (buf.byteLength < metadataLength) {\n            throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n        }\n        return { done: false, value: Message.decode(buf) };\n    }\n}\n\n/** @ignore */\nexport class AsyncMessageReader implements AsyncIterableIterator<Message> {\n    protected source: AsyncByteStream;\n    constructor(source: ReadableSource<Uint8Array>);\n    constructor(source: FileHandle, byteLength?: number);\n    constructor(source: any, byteLength?: number) {\n        this.source = source instanceof AsyncByteStream ? source\n            : isFileHandle(source)\n            ? new AsyncRandomAccessFile(source, byteLength!)\n            : new AsyncByteStream(source);\n    }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<Message> { return this as AsyncIterableIterator<Message>; }\n    public async next(): Promise<IteratorResult<Message>> {\n        let r;\n        if ((r = await this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n        // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n        // pre-v0.15 message, where the first 4 bytes are the metadata length.\n        if ((r.value === -1) &&\n            (r = await this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        if ((r = await this.readMetadata(r.value)).done) { return ITERATOR_DONE; }\n        return (<any> r) as IteratorResult<Message>;\n    }\n    public async throw(value?: any) { return await this.source.throw(value); }\n    public async return(value?: any) { return await this.source.return(value); }\n    public async readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = await this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public async readMessageBody(bodyLength: number): Promise<Uint8Array> {\n        if (bodyLength <= 0) { return new Uint8Array(0); }\n        const buf = toUint8Array(await this.source.read(bodyLength));\n        if (buf.byteLength < bodyLength) {\n            throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n        }\n        // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n        // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n        return /* 1. */ (buf.byteOffset % 8 === 0) &&\n               /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n    }\n    public async readSchema(throwIfNull = false) {\n        const type = MessageHeader.Schema;\n        const message = await this.readMessage(type);\n        const schema = message && message.header();\n        if (throwIfNull && !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n    protected async readMetadataLength(): Promise<IteratorResult<number>> {\n        const buf = await this.source.read(PADDING);\n        const bb = buf && new ByteBuffer(buf);\n        const len = bb && bb.readInt32(0) || 0;\n        return { done: len === 0, value: len };\n    }\n    protected async readMetadata(metadataLength: number): Promise<IteratorResult<Message>> {\n        const buf = await this.source.read(metadataLength);\n        if (!buf) { return ITERATOR_DONE; }\n        if (buf.byteLength < metadataLength) {\n            throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n        }\n        return { done: false, value: Message.decode(buf) };\n    }\n}\n\n/** @ignore */\nexport class JSONMessageReader extends MessageReader {\n    private _schema = false;\n    private _json: ArrowJSON;\n    private _body: any[] = [];\n    private _batchIndex = 0;\n    private _dictionaryIndex = 0;\n    constructor(source: ArrowJSON | ArrowJSONLike) {\n        super(new Uint8Array(0));\n        this._json = source instanceof ArrowJSON ? source : new ArrowJSON(source);\n    }\n    public next() {\n        const { _json } = this;\n        if (!this._schema) {\n            this._schema = true;\n            const message = Message.fromJSON(_json.schema, MessageHeader.Schema);\n            return { done: false, value: message };\n        }\n        if (this._dictionaryIndex < _json.dictionaries.length) {\n            const batch = _json.dictionaries[this._dictionaryIndex++];\n            this._body = batch['data']['columns'];\n            const message = Message.fromJSON(batch, MessageHeader.DictionaryBatch);\n            return { done: false, value: message };\n        }\n        if (this._batchIndex < _json.batches.length) {\n            const batch = _json.batches[this._batchIndex++];\n            this._body = batch['columns'];\n            const message = Message.fromJSON(batch, MessageHeader.RecordBatch);\n            return { done: false, value: message };\n        }\n        this._body = [];\n        return ITERATOR_DONE;\n    }\n    public readMessageBody(_bodyLength?: number) {\n        return flattenDataSources(this._body) as any;\n        function flattenDataSources(xs: any[]): any[][] {\n            return (xs || []).reduce<any[][]>((buffers, column: any) => [\n                ...buffers,\n                ...(column['VALIDITY'] && [column['VALIDITY']] || []),\n                ...(column['TYPE'] && [column['TYPE']] || []),\n                ...(column['OFFSET'] && [column['OFFSET']] || []),\n                ...(column['DATA'] && [column['DATA']] || []),\n                ...flattenDataSources(column['children'])\n            ], [] as any[][]);\n        }\n    }\n    public readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public readSchema() {\n        const type = MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message && message.header();\n        if (!message || !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n}\n\n/** @ignore */\nexport const PADDING = 4;\n/** @ignore */\nexport const MAGIC_STR = 'ARROW1';\n/** @ignore */\nexport const MAGIC = new Uint8Array(MAGIC_STR.length);\n\nfor (let i = 0; i < MAGIC_STR.length; i += 1 | 0) {\n    MAGIC[i] = MAGIC_STR.charCodeAt(i);\n}\n\n/** @ignore */\nexport function checkForMagicArrowString(buffer: Uint8Array, index = 0) {\n    for (let i = -1, n = MAGIC.length; ++i < n;) {\n        if (MAGIC[i] !== buffer[index + i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/** @ignore */\nexport const magicLength = MAGIC.length;\n/** @ignore */\nexport const magicAndPadding = magicLength + PADDING;\n/** @ignore */\nexport const magicX2AndPadding = magicLength * 2 + PADDING;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { Visitor } from '../visitor';\nimport { Type, UnionMode } from '../enum';\nimport { RecordBatch } from '../recordbatch';\nimport { VectorType as V } from '../interfaces';\nimport { rebaseValueOffsets } from '../util/buffer';\nimport { packBools, truncateBitmap } from '../util/bit';\nimport { selectVectorChildrenArgs } from '../util/args';\nimport { BufferRegion, FieldNode } from '../ipc/metadata/message';\nimport {\n    DataType, Dictionary,\n    Float, Int, Date_, Interval, Time, Timestamp, Union,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n} from '../type';\n\n/** @ignore */\nexport interface VectorAssembler extends Visitor {\n    visit<T extends Vector>(node: T): this;\n    visitMany<T extends Vector>(nodes: T[]): this[];\n    getVisitFn<T extends Type>(node: T): (vector: V<T>) => this;\n    getVisitFn<T extends DataType>(node: V<T> | Data<T> | T): (vector: V<T>) => this;\n\n    visitBool                 <T extends Bool>            (vector: V<T>): this;\n    visitInt                  <T extends Int>             (vector: V<T>): this;\n    visitFloat                <T extends Float>           (vector: V<T>): this;\n    visitUtf8                 <T extends Utf8>            (vector: V<T>): this;\n    visitBinary               <T extends Binary>          (vector: V<T>): this;\n    visitFixedSizeBinary      <T extends FixedSizeBinary> (vector: V<T>): this;\n    visitDate                 <T extends Date_>           (vector: V<T>): this;\n    visitTimestamp            <T extends Timestamp>       (vector: V<T>): this;\n    visitTime                 <T extends Time>            (vector: V<T>): this;\n    visitDecimal              <T extends Decimal>         (vector: V<T>): this;\n    visitList                 <T extends List>            (vector: V<T>): this;\n    visitStruct               <T extends Struct>          (vector: V<T>): this;\n    visitUnion                <T extends Union>           (vector: V<T>): this;\n    visitInterval             <T extends Interval>        (vector: V<T>): this;\n    visitFixedSizeList        <T extends FixedSizeList>   (vector: V<T>): this;\n    visitMap                  <T extends Map_>            (vector: V<T>): this;\n}\n\n/** @ignore */\nexport class VectorAssembler extends Visitor {\n\n    /** @nocollapse */\n    public static assemble<T extends Vector | RecordBatch>(...args: (T | T[])[]) {\n        const assembler = new VectorAssembler();\n        const vectorChildren = selectVectorChildrenArgs(RecordBatch, args);\n        const [assembleResult = assembler] = assembler.visitMany(vectorChildren);\n        return assembleResult;\n    }\n\n    private constructor() { super(); }\n\n    public visit<T extends Vector>(vector: T): this {\n        if (!DataType.isDictionary(vector.type)) {\n            const { data, length, nullCount } = vector;\n            if (length > 2147483647) {\n                /* istanbul ignore next */\n                throw new RangeError('Cannot write arrays larger than 2^31 - 1 in length');\n            }\n            if (!DataType.isNull(vector.type)) {\n                addBuffer.call(this, nullCount <= 0\n                    ? new Uint8Array(0) // placeholder validity buffer\n                    : truncateBitmap(data.offset, length, data.nullBitmap)\n                );\n            }\n            this.nodes.push(new FieldNode(length, nullCount));\n        }\n        return super.visit(vector);\n    }\n\n    public visitNull<T extends Null>(_nullV: V<T>) {\n        return this;\n    }\n    public visitDictionary<T extends Dictionary>(vector: V<T>) {\n        // Assemble the indices here, Dictionary assembled separately.\n        return this.visit(vector.indices);\n    }\n\n    public get nodes() { return this._nodes; }\n    public get buffers() { return this._buffers; }\n    public get byteLength() { return this._byteLength; }\n    public get bufferRegions() { return this._bufferRegions; }\n\n    protected _byteLength = 0;\n    protected _nodes: FieldNode[] = [];\n    protected _buffers: ArrayBufferView[] = [];\n    protected _bufferRegions: BufferRegion[] = [];\n}\n\n/** @ignore */\nfunction addBuffer(this: VectorAssembler, values: ArrayBufferView) {\n    const byteLength = (values.byteLength + 7) & ~7; // Round up to a multiple of 8\n    this.buffers.push(values);\n    this.bufferRegions.push(new BufferRegion(this._byteLength, byteLength));\n    this._byteLength += byteLength;\n    return this;\n}\n\n/** @ignore */\nfunction assembleUnion<T extends Union>(this: VectorAssembler, vector: V<T>) {\n    const { type, length, typeIds, valueOffsets } = vector;\n    // All Union Vectors have a typeIds buffer\n    addBuffer.call(this, typeIds);\n    // If this is a Sparse Union, treat it like all other Nested types\n    if (type.mode === UnionMode.Sparse) {\n        return assembleNestedVector.call(this, vector);\n    } else if (type.mode === UnionMode.Dense) {\n        // If this is a Dense Union, add the valueOffsets buffer and potentially slice the children\n        if (vector.offset <= 0) {\n            // If the Vector hasn't been sliced, write the existing valueOffsets\n            addBuffer.call(this, valueOffsets);\n            // We can treat this like all other Nested types\n            return assembleNestedVector.call(this, vector);\n        } else {\n            // A sliced Dense Union is an unpleasant case. Because the offsets are different for\n            // each child vector, we need to \"rebase\" the valueOffsets for each child\n            // Union typeIds are not necessary 0-indexed\n            const maxChildTypeId = typeIds.reduce((x, y) => Math.max(x, y), typeIds[0]);\n            const childLengths = new Int32Array(maxChildTypeId + 1);\n            // Set all to -1 to indicate that we haven't observed a first occurrence of a particular child yet\n            const childOffsets = new Int32Array(maxChildTypeId + 1).fill(-1);\n            const shiftedOffsets = new Int32Array(length);\n            // If we have a non-zero offset, then the value offsets do not start at\n            // zero. We must a) create a new offsets array with shifted offsets and\n            // b) slice the values array accordingly\n            const unshiftedOffsets = rebaseValueOffsets(-valueOffsets[0], length, valueOffsets);\n            for (let typeId, shift, index = -1; ++index < length;) {\n                if ((shift = childOffsets[typeId = typeIds[index]]) === -1) {\n                    shift = childOffsets[typeId] = unshiftedOffsets[typeId];\n                }\n                shiftedOffsets[index] = unshiftedOffsets[index] - shift;\n                ++childLengths[typeId];\n            }\n            addBuffer.call(this, shiftedOffsets);\n            // Slice and visit children accordingly\n            for (let child: Vector | null, childIndex = -1, numChildren = type.children.length; ++childIndex < numChildren;) {\n                if (child = vector.getChildAt(childIndex)) {\n                    const typeId = type.typeIds[childIndex];\n                    const childLength = Math.min(length, childLengths[typeId]);\n                    this.visit(child.slice(childOffsets[typeId], childLength));\n                }\n            }\n        }\n    }\n    return this;\n}\n\n/** @ignore */\nfunction assembleBoolVector<T extends Bool>(this: VectorAssembler, vector: V<T>) {\n    // Bool vector is a special case of FlatVector, as its data buffer needs to stay packed\n    let values: Uint8Array;\n    if (vector.nullCount >= vector.length) {\n        // If all values are null, just insert a placeholder empty data buffer (fastest path)\n        return addBuffer.call(this, new Uint8Array(0));\n    } else if ((values = vector.values) instanceof Uint8Array) {\n        // If values is already a Uint8Array, slice the bitmap (fast path)\n        return addBuffer.call(this, truncateBitmap(vector.offset, vector.length, values));\n    }\n    // Otherwise if the underlying data *isn't* a Uint8Array, enumerate the\n    // values as bools and re-pack them into a Uint8Array. This code isn't\n    // reachable unless you're trying to manipulate the Data internals,\n    // we we're only doing this for safety.\n    /* istanbul ignore next */\n    return addBuffer.call(this, packBools(vector));\n}\n\n/** @ignore */\nfunction assembleFlatVector<T extends Int | Float | FixedSizeBinary | Date_ | Timestamp | Time | Decimal | Interval>(this: VectorAssembler, vector: V<T>) {\n    return addBuffer.call(this, vector.values.subarray(0, vector.length * vector.stride));\n}\n\n/** @ignore */\nfunction assembleFlatListVector<T extends Utf8 | Binary>(this: VectorAssembler, vector: V<T>) {\n    const { length, values, valueOffsets } = vector;\n    const firstOffset = valueOffsets[0];\n    const lastOffset = valueOffsets[length];\n    const byteLength = Math.min(lastOffset - firstOffset, values.byteLength - firstOffset);\n    // Push in the order FlatList types read their buffers\n    addBuffer.call(this, rebaseValueOffsets(-valueOffsets[0], length, valueOffsets)); // valueOffsets buffer first\n    addBuffer.call(this, values.subarray(firstOffset, firstOffset + byteLength)); // sliced values buffer second\n    return this;\n}\n\n/** @ignore */\nfunction assembleListVector<T extends Map_ | List | FixedSizeList>(this: VectorAssembler, vector: V<T>) {\n    const { length, valueOffsets } = vector;\n    // If we have valueOffsets (MapVector, ListVector), push that buffer first\n    if (valueOffsets) {\n        addBuffer.call(this, rebaseValueOffsets(valueOffsets[0], length, valueOffsets));\n    }\n    // Then insert the List's values child\n    return this.visit(vector.getChildAt(0)!);\n}\n\n/** @ignore */\nfunction assembleNestedVector<T extends Struct | Union>(this: VectorAssembler, vector: V<T>) {\n    return this.visitMany(vector.type.children.map((_, i) => vector.getChildAt(i)!).filter(Boolean))[0];\n}\n\nVectorAssembler.prototype.visitBool            =     assembleBoolVector;\nVectorAssembler.prototype.visitInt             =     assembleFlatVector;\nVectorAssembler.prototype.visitFloat           =     assembleFlatVector;\nVectorAssembler.prototype.visitUtf8            = assembleFlatListVector;\nVectorAssembler.prototype.visitBinary          = assembleFlatListVector;\nVectorAssembler.prototype.visitFixedSizeBinary =     assembleFlatVector;\nVectorAssembler.prototype.visitDate            =     assembleFlatVector;\nVectorAssembler.prototype.visitTimestamp       =     assembleFlatVector;\nVectorAssembler.prototype.visitTime            =     assembleFlatVector;\nVectorAssembler.prototype.visitDecimal         =     assembleFlatVector;\nVectorAssembler.prototype.visitList            =     assembleListVector;\nVectorAssembler.prototype.visitStruct          =   assembleNestedVector;\nVectorAssembler.prototype.visitUnion           =          assembleUnion;\nVectorAssembler.prototype.visitInterval        =     assembleFlatVector;\nVectorAssembler.prototype.visitFixedSizeList   =     assembleListVector;\nVectorAssembler.prototype.visitMap             =     assembleListVector;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Table } from '../table';\nimport { MAGIC } from './message';\nimport { Vector } from '../vector';\nimport { Column } from '../column';\nimport { DataType } from '../type';\nimport { Schema, Field } from '../schema';\nimport { Message } from './metadata/message';\nimport * as metadata from './metadata/message';\nimport { FileBlock, Footer } from './metadata/file';\nimport { MessageHeader, MetadataVersion } from '../enum';\nimport { WritableSink, AsyncByteQueue } from '../io/stream';\nimport { VectorAssembler } from '../visitor/vectorassembler';\nimport { JSONTypeAssembler } from '../visitor/jsontypeassembler';\nimport { JSONVectorAssembler } from '../visitor/jsonvectorassembler';\nimport { ArrayBufferViewInput, toUint8Array } from '../util/buffer';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from '../recordbatch';\nimport { Writable, ReadableInterop, ReadableDOMStreamOptions } from '../io/interfaces';\nimport { isPromise, isAsyncIterable, isWritableDOMStream, isWritableNodeStream, isIterable, isObject } from '../util/compat';\n\nexport interface RecordBatchStreamWriterOptions {\n    /**\n     *\n     */\n    autoDestroy?: boolean;\n    /**\n     * A flag indicating whether the RecordBatchWriter should construct pre-0.15.0\n     * encapsulated IPC Messages, which reserves  4 bytes for the Message metadata\n     * length instead of 8.\n     * @see https://issues.apache.org/jira/browse/ARROW-6313\n     */\n    writeLegacyIpcFormat?: boolean;\n}\n\nexport class RecordBatchWriter<T extends { [key: string]: DataType } = any> extends ReadableInterop<Uint8Array> implements Writable<RecordBatch<T>> {\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode(options?: import('stream').DuplexOptions & { autoDestroy: boolean }): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    public static throughDOM<T extends { [key: string]: DataType }>(\n        // @ts-ignore\n        writableStrategy?: QueuingStrategy<RecordBatch<T>> & { autoDestroy: boolean },\n        // @ts-ignore\n        readableStrategy?: { highWaterMark?: number, size?: any }\n    ): { writable: WritableStream<Table<T> | RecordBatch<T>>, readable: ReadableStream<Uint8Array> } {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    constructor(options?: RecordBatchStreamWriterOptions) {\n        super();\n        isObject(options) || (options = { autoDestroy: true, writeLegacyIpcFormat: false });\n        this._autoDestroy = (typeof options.autoDestroy === 'boolean') ? options.autoDestroy : true;\n        this._writeLegacyIpcFormat = (typeof options.writeLegacyIpcFormat === 'boolean') ? options.writeLegacyIpcFormat : false;\n    }\n\n    protected _position = 0;\n    protected _started = false;\n    protected _autoDestroy: boolean;\n    protected _writeLegacyIpcFormat: boolean;\n    // @ts-ignore\n    protected _sink = new AsyncByteQueue();\n    protected _schema: Schema | null = null;\n    protected _dictionaryBlocks: FileBlock[] = [];\n    protected _recordBatchBlocks: FileBlock[] = [];\n    protected _dictionaryDeltaOffsets = new Map<number, number>();\n\n    public toString(sync: true): string;\n    public toString(sync?: false): Promise<string>;\n    public toString(sync: any = false) {\n        return this._sink.toString(sync) as Promise<string> | string;\n    }\n    public toUint8Array(sync: true): Uint8Array;\n    public toUint8Array(sync?: false): Promise<Uint8Array>;\n    public toUint8Array(sync: any = false) {\n        return this._sink.toUint8Array(sync) as Promise<Uint8Array> | Uint8Array;\n    }\n\n    public writeAll(input: Table<T> | Iterable<RecordBatch<T>>): this;\n    public writeAll(input: AsyncIterable<RecordBatch<T>>): Promise<this>;\n    public writeAll(input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<this>;\n    public writeAll(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<this>;\n    public writeAll(input: PromiseLike<any> | Table<T> | Iterable<RecordBatch<T>> | AsyncIterable<RecordBatch<T>>) {\n        if (isPromise<any>(input)) {\n            return input.then((x) => this.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(this, input);\n        }\n        return writeAll(this, <any> input);\n    }\n\n    public get closed() { return this._sink.closed; }\n    public [Symbol.asyncIterator]() { return this._sink[Symbol.asyncIterator](); }\n    public toDOMStream(options?: ReadableDOMStreamOptions) { return this._sink.toDOMStream(options); }\n    public toNodeStream(options?: import('stream').ReadableOptions) { return this._sink.toNodeStream(options); }\n\n    public close() {\n        return this.reset()._sink.close();\n    }\n    public abort(reason?: any) {\n        return this.reset()._sink.abort(reason);\n    }\n    public finish() {\n        this._autoDestroy ? this.close() : this.reset(this._sink, this._schema);\n        return this;\n    }\n    public reset(sink: WritableSink<ArrayBufferViewInput> = this._sink, schema: Schema<T> | null = null) {\n\n        if ((sink === this._sink) || (sink instanceof AsyncByteQueue)) {\n            this._sink = sink as AsyncByteQueue;\n        } else {\n            this._sink = new AsyncByteQueue();\n            if (sink && isWritableDOMStream(sink)) {\n                this.toDOMStream({ type: 'bytes' }).pipeTo(sink);\n            } else if (sink && isWritableNodeStream(sink)) {\n                this.toNodeStream({ objectMode: false }).pipe(sink);\n            }\n        }\n\n        if (this._started && this._schema) {\n            this._writeFooter(this._schema);\n        }\n\n        this._started = false;\n        this._dictionaryBlocks = [];\n        this._recordBatchBlocks = [];\n        this._dictionaryDeltaOffsets = new Map();\n\n        if (!schema || !(schema.compareTo(this._schema))) {\n            if (schema === null) {\n                this._position = 0;\n                this._schema = null;\n            } else {\n                this._started = true;\n                this._schema = schema;\n                this._writeSchema(schema);\n            }\n        }\n\n        return this;\n    }\n\n    public write(payload?: Table<T> | RecordBatch<T> | Iterable<RecordBatch<T>> | null) {\n\n        let schema: Schema<T> | null = null;\n\n        if (!this._sink) {\n            throw new Error(`RecordBatchWriter is closed`);\n        } else if (payload === null || payload === undefined) {\n            return this.finish() && undefined;\n        } else if (payload instanceof Table && !(schema = payload.schema)) {\n            return this.finish() && undefined;\n        } else if (payload instanceof RecordBatch && !(schema = payload.schema)) {\n            return this.finish() && undefined;\n        }\n\n        if (schema && !schema.compareTo(this._schema)) {\n            if (this._started && this._autoDestroy) {\n                return this.close();\n            }\n            this.reset(this._sink, schema);\n        }\n\n        if (payload instanceof RecordBatch) {\n            if (!(payload instanceof _InternalEmptyPlaceholderRecordBatch)) {\n                this._writeRecordBatch(payload);\n            }\n        } else if (payload instanceof Table) {\n            this.writeAll(payload.chunks);\n        } else if (isIterable(payload)) {\n            this.writeAll(payload);\n        }\n    }\n\n    protected _writeMessage<T extends MessageHeader>(message: Message<T>, alignment = 8) {\n\n        const a = alignment - 1;\n        const buffer = Message.encode(message);\n        const flatbufferSize = buffer.byteLength;\n        const prefixSize = !this._writeLegacyIpcFormat ? 8 : 4;\n        const alignedSize = (flatbufferSize + prefixSize + a) & ~a;\n        const nPaddingBytes = alignedSize - flatbufferSize - prefixSize;\n\n        if (message.headerType === MessageHeader.RecordBatch) {\n            this._recordBatchBlocks.push(new FileBlock(alignedSize, message.bodyLength, this._position));\n        } else if (message.headerType === MessageHeader.DictionaryBatch) {\n            this._dictionaryBlocks.push(new FileBlock(alignedSize, message.bodyLength, this._position));\n        }\n\n        // If not in legacy pre-0.15.0 mode, write the stream continuation indicator\n        if (!this._writeLegacyIpcFormat) {\n            this._write(Int32Array.of(-1));\n        }\n        // Write the flatbuffer size prefix including padding\n        this._write(Int32Array.of(alignedSize - prefixSize));\n        // Write the flatbuffer\n        if (flatbufferSize > 0) { this._write(buffer); }\n        // Write any padding\n        return this._writePadding(nPaddingBytes);\n    }\n\n    protected _write(chunk: ArrayBufferViewInput) {\n        if (this._started) {\n            const buffer = toUint8Array(chunk);\n            if (buffer && buffer.byteLength > 0) {\n                this._sink.write(buffer);\n                this._position += buffer.byteLength;\n            }\n        }\n        return this;\n    }\n\n    protected _writeSchema(schema: Schema<T>) {\n        return this._writeMessage(Message.from(schema));\n    }\n\n    // @ts-ignore\n    protected _writeFooter(schema: Schema<T>) {\n        // eos bytes\n        return this._writeLegacyIpcFormat\n            ? this._write(Int32Array.of(0))\n            : this._write(Int32Array.of(-1, 0));\n    }\n\n    protected _writeMagic() {\n        return this._write(MAGIC);\n    }\n\n    protected _writePadding(nBytes: number) {\n        return nBytes > 0 ? this._write(new Uint8Array(nBytes)) : this;\n    }\n\n    protected _writeRecordBatch(batch: RecordBatch<T>) {\n        const { byteLength, nodes, bufferRegions, buffers } = VectorAssembler.assemble(batch);\n        const recordBatch = new metadata.RecordBatch(batch.length, nodes, bufferRegions);\n        const message = Message.from(recordBatch, byteLength);\n        return this\n            ._writeDictionaries(batch)\n            ._writeMessage(message)\n            ._writeBodyBuffers(buffers);\n    }\n\n    protected _writeDictionaryBatch(dictionary: Vector, id: number, isDelta = false) {\n        this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n        const { byteLength, nodes, bufferRegions, buffers } = VectorAssembler.assemble(dictionary);\n        const recordBatch = new metadata.RecordBatch(dictionary.length, nodes, bufferRegions);\n        const dictionaryBatch = new metadata.DictionaryBatch(recordBatch, id, isDelta);\n        const message = Message.from(dictionaryBatch, byteLength);\n        return this\n            ._writeMessage(message)\n            ._writeBodyBuffers(buffers);\n    }\n\n    protected _writeBodyBuffers(buffers: ArrayBufferView[]) {\n        let buffer: ArrayBufferView;\n        let size: number, padding: number;\n        for (let i = -1, n = buffers.length; ++i < n;) {\n            if ((buffer = buffers[i]) && (size = buffer.byteLength) > 0) {\n                this._write(buffer);\n                if ((padding = ((size + 7) & ~7) - size) > 0) {\n                    this._writePadding(padding);\n                }\n            }\n        }\n        return this;\n    }\n\n    protected _writeDictionaries(batch: RecordBatch<T>) {\n        for (let [id, dictionary] of batch.dictionaries) {\n            let offset = this._dictionaryDeltaOffsets.get(id) || 0;\n            if (offset === 0 || (dictionary = dictionary.slice(offset)).length > 0) {\n                const chunks = 'chunks' in dictionary ? (dictionary as any).chunks : [dictionary];\n                for (const chunk of chunks) {\n                    this._writeDictionaryBatch(chunk, id, offset > 0);\n                    offset += chunk.length;\n                }\n            }\n        }\n        return this;\n    }\n}\n\n/** @ignore */\nexport class RecordBatchStreamWriter<T extends { [key: string]: DataType } = any> extends RecordBatchWriter<T> {\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: Table<T> | Iterable<RecordBatch<T>>, options?: RecordBatchStreamWriterOptions): RecordBatchStreamWriter<T>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: AsyncIterable<RecordBatch<T>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<AsyncIterable<RecordBatch<T>>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: any, options?: RecordBatchStreamWriterOptions) {\n        const writer = new RecordBatchStreamWriter<T>(options);\n        if (isPromise<any>(input)) {\n            return input.then((x) => writer.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(writer, input);\n        }\n        return writeAll(writer, input);\n    }\n}\n\n/** @ignore */\nexport class RecordBatchFileWriter<T extends { [key: string]: DataType } = any> extends RecordBatchWriter<T> {\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: Table<T> | Iterable<RecordBatch<T>>): RecordBatchFileWriter<T>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: AsyncIterable<RecordBatch<T>>): Promise<RecordBatchFileWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<RecordBatchFileWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<RecordBatchFileWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: any) {\n        const writer = new RecordBatchFileWriter<T>();\n        if (isPromise<any>(input)) {\n            return input.then((x) => writer.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(writer, input);\n        }\n        return writeAll(writer, input);\n    }\n\n    constructor() {\n        super();\n        this._autoDestroy = true;\n    }\n\n    // @ts-ignore\n    protected _writeSchema(schema: Schema<T>) {\n        return this._writeMagic()._writePadding(2);\n    }\n\n    protected _writeFooter(schema: Schema<T>) {\n        const buffer = Footer.encode(new Footer(\n            schema, MetadataVersion.V4,\n            this._recordBatchBlocks, this._dictionaryBlocks\n        ));\n        return super\n            ._writeFooter(schema) // EOS bytes for sequential readers\n            ._write(buffer) // Write the flatbuffer\n            ._write(Int32Array.of(buffer.byteLength)) // then the footer size suffix\n            ._writeMagic(); // then the magic suffix\n    }\n}\n\n/** @ignore */\nexport class RecordBatchJSONWriter<T extends { [key: string]: DataType } = any> extends RecordBatchWriter<T> {\n\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: Table<T> | Iterable<RecordBatch<T>>): RecordBatchJSONWriter<T>;\n    // @ts-ignore\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: AsyncIterable<RecordBatch<T>>): Promise<RecordBatchJSONWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<RecordBatchJSONWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<RecordBatchJSONWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: any) {\n        return new RecordBatchJSONWriter<T>().writeAll(input as any);\n    }\n\n    private _recordBatches: RecordBatch[];\n    private _dictionaries: RecordBatch[];\n\n    constructor() {\n        super();\n        this._autoDestroy = true;\n        this._recordBatches = [];\n        this._dictionaries = [];\n    }\n\n    protected _writeMessage() { return this; }\n    // @ts-ignore\n    protected _writeFooter(schema: Schema<T>) { return this; }\n    protected _writeSchema(schema: Schema<T>) {\n        return this._write(`{\\n  \"schema\": ${\n            JSON.stringify({ fields: schema.fields.map(fieldToJSON) }, null, 2)\n        }`);\n    }\n    protected _writeDictionaries(batch: RecordBatch<T>) {\n        if (batch.dictionaries.size > 0) {\n            this._dictionaries.push(batch);\n        }\n        return this;\n    }\n    protected _writeDictionaryBatch(dictionary: Vector, id: number, isDelta = false) {\n        this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n        this._write(this._dictionaryBlocks.length === 0 ? `    ` : `,\\n    `);\n        this._write(`${dictionaryBatchToJSON(dictionary, id, isDelta)}`);\n        this._dictionaryBlocks.push(new FileBlock(0, 0, 0));\n        return this;\n    }\n    protected _writeRecordBatch(batch: RecordBatch<T>) {\n        this._writeDictionaries(batch);\n        this._recordBatches.push(batch);\n        return this;\n    }\n    public close() {\n\n        if (this._dictionaries.length > 0) {\n            this._write(`,\\n  \"dictionaries\": [\\n`);\n            for (const batch of this._dictionaries) {\n                super._writeDictionaries(batch);\n            }\n            this._write(`\\n  ]`);\n        }\n\n        if (this._recordBatches.length > 0) {\n            for (let i = -1, n = this._recordBatches.length; ++i < n;) {\n                this._write(i === 0 ? `,\\n  \"batches\": [\\n    ` : `,\\n    `);\n                this._write(`${recordBatchToJSON(this._recordBatches[i])}`);\n                this._recordBatchBlocks.push(new FileBlock(0, 0, 0));\n            }\n            this._write(`\\n  ]`);\n        }\n\n        if (this._schema) {\n            this._write(`\\n}`);\n        }\n\n        this._dictionaries = [];\n        this._recordBatches = [];\n\n        return super.close();\n    }\n}\n\n/** @ignore */\nfunction writeAll<T extends { [key: string]: DataType } = any>(writer: RecordBatchWriter<T>, input: Table<T> | Iterable<RecordBatch<T>>) {\n    let chunks = input as Iterable<RecordBatch<T>>;\n    if (input instanceof Table) {\n        chunks = input.chunks;\n        writer.reset(undefined, input.schema);\n    }\n    for (const batch of chunks) {\n        writer.write(batch);\n    }\n    return writer.finish();\n}\n\n/** @ignore */\nasync function writeAllAsync<T extends { [key: string]: DataType } = any>(writer: RecordBatchWriter<T>, batches: AsyncIterable<RecordBatch<T>>) {\n    for await (const batch of batches) {\n        writer.write(batch);\n    }\n    return writer.finish();\n}\n\n/** @ignore */\nfunction fieldToJSON({ name, type, nullable }: Field): object {\n    const assembler = new JSONTypeAssembler();\n    return {\n        'name': name, 'nullable': nullable,\n        'type': assembler.visit(type),\n        'children': (type.children || []).map(fieldToJSON),\n        'dictionary': !DataType.isDictionary(type) ? undefined : {\n            'id': type.id,\n            'isOrdered': type.isOrdered,\n            'indexType': assembler.visit(type.indices)\n        }\n    };\n}\n\n/** @ignore */\nfunction dictionaryBatchToJSON(dictionary: Vector, id: number, isDelta = false) {\n    const field = new Field(`${id}`, dictionary.type, dictionary.nullCount > 0);\n    const columns = JSONVectorAssembler.assemble(new Column(field, [dictionary]));\n    return JSON.stringify({\n        'id': id,\n        'isDelta': isDelta,\n        'data': {\n            'count': dictionary.length,\n            'columns': columns\n        }\n    }, null, 2);\n}\n\n/** @ignore */\nfunction recordBatchToJSON(records: RecordBatch) {\n    return JSON.stringify({\n        'count': records.length,\n        'columns': JSONVectorAssembler.assemble(records)\n    }, null, 2);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Column } from '../column';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Data, Buffers } from '../data';\nimport { Schema, Field } from '../schema';\nimport { Chunked } from '../vector/chunked';\nimport { RecordBatch } from '../recordbatch';\n\nconst noopBuf = new Uint8Array(0);\nconst nullBufs = (bitmapLength: number) => <unknown> [\n    noopBuf, noopBuf, new Uint8Array(bitmapLength), noopBuf\n] as Buffers<any>;\n\n/** @ignore */\nexport function ensureSameLengthData<T extends { [key: string]: DataType } = any>(\n    schema: Schema<T>,\n    chunks: Data<T[keyof T]>[],\n    batchLength = chunks.reduce((l, c) => Math.max(l, c.length), 0)\n) {\n    let data: Data<T[keyof T]>;\n    let field: Field<T[keyof T]>;\n    let i = -1, n = chunks.length;\n    const fields = [...schema.fields];\n    const batchData = [] as Data<T[keyof T]>[];\n    const bitmapLength = ((batchLength + 63) & ~63) >> 3;\n    while (++i < n) {\n        if ((data = chunks[i]) && data.length === batchLength) {\n            batchData[i] = data;\n        } else {\n            (field = fields[i]).nullable || (fields[i] = fields[i].clone({ nullable: true }) as Field<T[keyof T]>);\n            batchData[i] = data ? data._changeLengthAndBackfillNullBitmap(batchLength)\n                : Data.new(field.type, 0, batchLength, batchLength, nullBufs(bitmapLength)) as Data<T[keyof T]>;\n        }\n    }\n    return [new Schema<T>(fields), batchLength, batchData] as [Schema<T>, number, Data<T[keyof T]>[]];\n}\n\n/** @ignore */\nexport function distributeColumnsIntoRecordBatches<T extends { [key: string]: DataType } = any>(columns: Column<T[keyof T]>[]): [Schema<T>, RecordBatch<T>[]] {\n    return distributeVectorsIntoRecordBatches<T>(new Schema<T>(columns.map(({ field }) => field)), columns);\n}\n\n/** @ignore */\nexport function distributeVectorsIntoRecordBatches<T extends { [key: string]: DataType } = any>(schema: Schema<T>, vecs: (Vector<T[keyof T]> | Chunked<T[keyof T]>)[]): [Schema<T>, RecordBatch<T>[]] {\n    return uniformlyDistributeChunksAcrossRecordBatches<T>(schema, vecs.map((v) => v instanceof Chunked ? v.chunks.map((c) => c.data) : [v.data]));\n}\n\n/** @ignore */\nfunction uniformlyDistributeChunksAcrossRecordBatches<T extends { [key: string]: DataType } = any>(schema: Schema<T>, columns: Data<T[keyof T]>[][]): [Schema<T>, RecordBatch<T>[]] {\n\n    const fields = [...schema.fields];\n    const batchArgs = [] as [number, Data<T[keyof T]>[]][];\n    const memo = { numBatches: columns.reduce((n, c) => Math.max(n, c.length), 0) };\n\n    let numBatches = 0, batchLength = 0;\n    let i: number = -1, numColumns = columns.length;\n    let child: Data<T[keyof T]>, childData: Data<T[keyof T]>[] = [];\n\n    while (memo.numBatches-- > 0) {\n\n        for (batchLength = Number.POSITIVE_INFINITY, i = -1; ++i < numColumns;) {\n            childData[i] = child = columns[i].shift()!;\n            batchLength = Math.min(batchLength, child ? child.length : batchLength);\n        }\n\n        if (isFinite(batchLength)) {\n            childData = distributeChildData(fields, batchLength, childData, columns, memo);\n            if (batchLength > 0) {\n                batchArgs[numBatches++] = [batchLength, childData.slice()];\n            }\n        }\n    }\n    return [\n        schema = new Schema<T>(fields, schema.metadata),\n        batchArgs.map((xs) => new RecordBatch(schema, ...xs))\n    ];\n}\n\n/** @ignore */\nfunction distributeChildData<T extends { [key: string]: DataType } = any>(fields: Field<T[keyof T]>[], batchLength: number, childData: Data<T[keyof T]>[], columns: Data<T[keyof T]>[][], memo: { numBatches: number }) {\n    let data: Data<T[keyof T]>;\n    let field: Field<T[keyof T]>;\n    let length = 0, i = -1, n = columns.length;\n    const bitmapLength = ((batchLength + 63) & ~63) >> 3;\n    while (++i < n) {\n        if ((data = childData[i]) && ((length = data.length) >= batchLength)) {\n            if (length === batchLength) {\n                childData[i] = data;\n            } else {\n                childData[i] = data.slice(0, batchLength);\n                data = data.slice(batchLength, length - batchLength);\n                memo.numBatches = Math.max(memo.numBatches, columns[i].unshift(data));\n            }\n        } else {\n            (field = fields[i]).nullable || (fields[i] = field.clone({ nullable: true }) as Field<T[keyof T]>);\n            childData[i] = data ? data._changeLengthAndBackfillNullBitmap(batchLength)\n                : Data.new(field.type, 0, batchLength, batchLength, nullBufs(bitmapLength)) as Data<T[keyof T]>;\n        }\n    }\n    return childData;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Chunked } from './chunked';\nimport { clampRange } from '../util/vector';\nimport { VectorType as V } from '../interfaces';\nimport { AbstractVector, Vector, Clonable, Sliceable, Applicative } from '../vector';\n\n/** @ignore */\nexport interface BaseVector<T extends DataType = any> extends Clonable<V<T>>, Sliceable<V<T>>, Applicative<T, Chunked<T>> {\n    slice(begin?: number, end?: number): V<T>;\n    concat(...others: Vector<T>[]): Chunked<T>;\n    clone<R extends DataType = T>(data: Data<R>, children?: Vector<R>[]): V<R>;\n}\n\n/** @ignore */\nexport abstract class BaseVector<T extends DataType = any> extends AbstractVector<T>\n    implements Clonable<V<T>>, Sliceable<V<T>>, Applicative<T, Chunked<T>> {\n\n    protected _children?: Vector[];\n\n    constructor(data: Data<T>, children?: Vector[]) {\n        super();\n        this._children = children;\n        this.numChildren = data.childData.length;\n        this._bindDataAccessors(this.data = data);\n    }\n\n    public readonly data: Data<T>;\n    public readonly numChildren: number;\n\n    public get type() { return this.data.type; }\n    public get typeId() { return this.data.typeId; }\n    public get length() { return this.data.length; }\n    public get offset() { return this.data.offset; }\n    public get stride() { return this.data.stride; }\n    public get nullCount() { return this.data.nullCount; }\n    public get byteLength() { return this.data.byteLength; }\n    public get VectorName() { return `${Type[this.typeId]}Vector`; }\n\n    public get ArrayType(): T['ArrayType'] { return this.type.ArrayType; }\n\n    public get values() { return this.data.values; }\n    public get typeIds() { return this.data.typeIds; }\n    public get nullBitmap() { return this.data.nullBitmap; }\n    public get valueOffsets() { return this.data.valueOffsets; }\n\n    public get [Symbol.toStringTag]() { return `${this.VectorName}<${this.type[Symbol.toStringTag]}>`; }\n\n    public clone<R extends DataType = T>(data: Data<R>, children = this._children) {\n        return Vector.new<R>(data, children) as any;\n    }\n\n    public concat(...others: Vector<T>[]) {\n        return Chunked.concat<T>(this, ...others);\n    }\n\n    public slice(begin?: number, end?: number) {\n        // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n        // clamp between 0 and length, and wrap around on negative indices, e.g.\n        // slice(-1, 5) or slice(5, -1)\n        return clampRange(this, begin, end, this._sliceInternal);\n    }\n\n    public isValid(index: number): boolean {\n        if (this.nullCount > 0) {\n            const idx = this.offset + index;\n            const val = this.nullBitmap[idx >> 3];\n            const mask = (val & (1 << (idx % 8)));\n            return mask !== 0;\n        }\n        return true;\n    }\n\n    public getChildAt<R extends DataType = any>(index: number): Vector<R> | null {\n        return index < 0 || index >= this.numChildren ? null : (\n            (this._children || (this._children = []))[index] ||\n            (this._children[index] = Vector.new<R>(this.data.childData[index] as Data<R>))\n        ) as Vector<R>;\n    }\n\n    public toJSON(): any { return [...this]; }\n\n    protected _sliceInternal(self: this, begin: number, end: number) {\n        return self.clone(self.data.slice(begin, end - begin), null!);\n    }\n\n    // @ts-ignore\n    protected _bindDataAccessors(data: Data<T>) {\n        // Implementation in src/vectors/index.ts due to circular dependency/packaging shenanigans\n    }\n}\n\n(BaseVector.prototype as any)[Symbol.isConcatSpreadable] = true;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { Binary, Utf8 } from '../type';\n\n/** @ignore */\nexport class BinaryVector extends BaseVector<Binary> {\n    public asUtf8() {\n        return Vector.new(this.data.clone(new Utf8()));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Bool } from '../type';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\n\n/** @ignore */\nexport class BoolVector extends BaseVector<Bool> {\n    public static from<TNull = any>(input: Iterable<boolean | TNull>): BoolVector;\n    public static from<TNull = any>(input: AsyncIterable<boolean | TNull>): Promise<BoolVector>;\n    public static from<TNull = any>(input: VectorBuilderOptions<Bool, TNull>): Chunked<Bool>;\n    public static from<TNull = any>(input: VectorBuilderOptionsAsync<Bool, TNull>): Promise<Chunked<Bool>>;\n    /** @nocollapse */\n    public static from<TNull = any>(input: Iterable<boolean | TNull> | AsyncIterable<boolean | TNull> | VectorBuilderOptions<Bool, TNull> | VectorBuilderOptionsAsync<Bool, TNull>) {\n        return vectorFromValuesWithType(() => new Bool(), input);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DateUnit } from '../enum';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorType as V } from '../interfaces';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { Date_, DateDay, DateMillisecond  } from '../type';\n\n/** @ignore */\ntype FromArgs<T extends Date_> = [Iterable<Date>, T['unit']];\n\n/** @ignore */\nexport class DateVector<T extends Date_ = Date_> extends BaseVector<T> {\n    public static from<T extends DateUnit.DAY>(...args: FromArgs<DateDay>): V<DateDay>;\n    public static from<T extends DateUnit.MILLISECOND>(...args: FromArgs<DateMillisecond>): V<DateMillisecond>;\n    public static from<T extends Date_, TNull = any>(input: Iterable<Date | TNull>): V<T>;\n    public static from<T extends Date_, TNull = any>(input: AsyncIterable<Date | TNull>): Promise<V<T>>;\n    public static from<T extends Date_, TNull = any>(input: VectorBuilderOptions<T, TNull>): Chunked<T>;\n    public static from<T extends Date_, TNull = any>(input: VectorBuilderOptionsAsync<T, TNull>): Promise<Chunked<T>>;\n    /** @nocollapse */\n    public static from<T extends Date_, TNull = any>(...args: FromArgs<T> | [Iterable<Date | TNull> | AsyncIterable<Date | TNull> | VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>]) {\n        if (args.length === 2) {\n            return vectorFromValuesWithType(() => args[1] === DateUnit.DAY ? new DateDay() : new DateMillisecond() as T, args[0]);\n        }\n        return vectorFromValuesWithType(() => new DateMillisecond() as T, args[0]);\n    }\n}\n\n/** @ignore */\nexport class DateDayVector extends DateVector<DateDay> {}\n\n/** @ignore */\nexport class DateMillisecondVector extends DateVector<DateMillisecond> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Decimal } from '../type';\nimport { BaseVector } from './base';\n\n/** @ignore */\nexport class DecimalVector extends BaseVector<Decimal> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { VectorType as V } from '../interfaces';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { DataType, Dictionary, TKeys } from '../type';\n\n/** @ignore */\ntype FromArgs<T extends DataType = any, TKey extends TKeys = TKeys> = [Vector<T>, TKey, ArrayLike<number> | TKey['TArray']];\n\n/** @ignore */\nexport class DictionaryVector<T extends DataType = any, TKey extends TKeys = TKeys> extends BaseVector<Dictionary<T, TKey>> {\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(...args: FromArgs<T, TKey>): V<Dictionary<T, TKey>>;\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(input: VectorBuilderOptions<Dictionary<T, TKey>>): Vector<Dictionary<T, TKey>>;\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(input: VectorBuilderOptionsAsync<Dictionary<T, TKey>>): Promise<Vector<Dictionary<T, TKey>>>;\n    /** @nocollapse */\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(...args: any[]) {\n        if (args.length === 3) {\n            const [values, indices, keys] = args as FromArgs<T, TKey>;\n            const type = new Dictionary(values.type, indices, null, null);\n            return Vector.new(Data.Dictionary(type, 0, keys.length, 0, null, keys, values));\n        }\n        return vectorFromValuesWithType(() => args[0].type, args[0]);\n    }\n\n    constructor(data: Data<Dictionary<T, TKey>>) {\n        super(data);\n        this.indices = Vector.new(data.clone(this.type.indices));\n    }\n\n    public readonly indices: V<TKey>;\n\n    public get dictionary() { return <Vector<T>> this.data.dictionary; }\n    public reverseLookup(value: T) { return this.dictionary.indexOf(value); }\n    public getKey(idx: number): TKey['TValue'] | null { return this.indices.get(idx); }\n    public getValue(key: number): T['TValue'] | null { return this.dictionary.get(key); }\n    public setKey(idx: number, key: TKey['TValue'] | null) { return this.indices.set(idx, key); }\n    public setValue(key: number, value: T['TValue'] | null) { return this.dictionary.set(key, value); }\n}\n\n(DictionaryVector.prototype as any).indices = null;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { FixedSizeBinary } from '../type';\n\n/** @ignore */\nexport class FixedSizeBinaryVector extends BaseVector<FixedSizeBinary> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { DataType, FixedSizeList } from '../type';\n\n/** @ignore */\nexport class FixedSizeListVector<T extends DataType = any> extends BaseVector<FixedSizeList<T>> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { Float, Float16, Float32, Float64, FloatArray } from '../type';\nimport { VectorType as V, TypedArrayConstructor } from '../interfaces';\n\n/** @ignore */\ntype FloatVectorConstructors =\n    typeof FloatVector   |\n    typeof Float16Vector |\n    typeof Float32Vector |\n    typeof Float64Vector ;\n\n/** @ignore */\ntype FromInput<T extends Float, TNull = any> =\n    FloatArray                          |\n    Iterable<T['TValue'] | TNull>       |\n    AsyncIterable<T['TValue'] | TNull>  |\n    VectorBuilderOptions<T, TNull>      |\n    VectorBuilderOptionsAsync<T, TNull> ;\n\n/** @ignore */\ntype FloatArrayCtor = TypedArrayConstructor<FloatArray>;\n\n/** @ignore */\nexport class FloatVector<T extends Float = Float> extends BaseVector<T> {\n\n    // Guaranteed zero-copy variants\n    public static from(this: typeof FloatVector, input: Uint16Array): Float16Vector;\n    public static from(this: typeof FloatVector, input: Float32Array): Float32Vector;\n    public static from(this: typeof FloatVector, input: Float64Array): Float64Vector;\n\n    // Zero-copy if input is a TypedArray of the same type as the\n    // Vector that from is called on, otherwise uses the Builders\n    public static from<TNull = any>(this: typeof Float16Vector,  input: FromInput<Float16, TNull>): Float16Vector;\n    public static from<TNull = any>(this: typeof Float32Vector,  input: FromInput<Float32, TNull>): Float32Vector;\n    public static from<TNull = any>(this: typeof Float64Vector,  input: FromInput<Float64, TNull>): Float64Vector;\n\n    // Not zero-copy\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: Iterable<T['TValue'] | TNull>): V<T>;\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: AsyncIterable<T['TValue'] | TNull>): Promise<V<T>>;\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: VectorBuilderOptions<T, TNull>): Chunked<T>;\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: VectorBuilderOptionsAsync<T, TNull>): Promise<Chunked<T>>;\n    /** @nocollapse */\n    public static from<T extends Float, TNull = any>(this: FloatVectorConstructors, input: FromInput<T, TNull>) {\n\n        let ArrowType = vectorTypeToDataType(this);\n\n        if ((input instanceof ArrayBuffer) || ArrayBuffer.isView(input)) {\n            let InputType = arrayTypeToDataType(input.constructor as FloatArrayCtor) || ArrowType;\n            // Special case, infer the Arrow DataType from the input if calling the base\n            // FloatVector.from with a TypedArray, e.g. `FloatVector.from(new Float32Array())`\n            if (ArrowType === null) {\n                ArrowType = InputType;\n            }\n            // If the DataType inferred from the Vector constructor matches the\n            // DataType inferred from the input arguments, return zero-copy view\n            if (ArrowType && ArrowType === InputType) {\n                let type = new ArrowType();\n                let length = input.byteLength / type.ArrayType.BYTES_PER_ELEMENT;\n                // If the ArrowType is Float16 but the input type isn't a Uint16Array,\n                // let the Float16Builder handle casting the input values to Uint16s.\n                if (!convertTo16Bit(ArrowType, input.constructor)) {\n                    return Vector.new(Data.Float(type, 0, length, 0, null, input as FloatArray));\n                }\n            }\n        }\n\n        if (ArrowType) {\n            // If the DataType inferred from the Vector constructor is different than\n            // the DataType inferred from the input TypedArray, or if input isn't a\n            // TypedArray, use the Builders to construct the result Vector\n            return vectorFromValuesWithType(() => new ArrowType!() as T, input);\n        }\n\n        if ((input instanceof DataView) || (input instanceof ArrayBuffer)) {\n            throw new TypeError(`Cannot infer float type from instance of ${input.constructor.name}`);\n        }\n\n        throw new TypeError('Unrecognized FloatVector input');\n    }\n}\n\n/** @ignore */\nexport class Float16Vector extends FloatVector<Float16> {\n    // Since JS doesn't have half floats, `toArray()` returns a zero-copy slice\n    // of the underlying Uint16Array data. This behavior ensures we don't incur\n    // extra compute or copies if you're calling `toArray()` in order to create\n    // a buffer for something like WebGL. Buf if you're using JS and want typed\n    // arrays of 4-to-8-byte precision, these methods will enumerate the values\n    // and clamp to the desired byte lengths.\n    public toFloat32Array() { return new Float32Array(this as Iterable<number>); }\n    public toFloat64Array() { return new Float64Array(this as Iterable<number>); }\n}\n\n/** @ignore */\nexport class Float32Vector extends FloatVector<Float32> {}\n/** @ignore */\nexport class Float64Vector extends FloatVector<Float64> {}\n\nconst convertTo16Bit = (typeCtor: any, dataCtor: any) => {\n    return (typeCtor === Float16) && (dataCtor !== Uint16Array);\n};\n\n/** @ignore */\nconst arrayTypeToDataType = (ctor: FloatArrayCtor) => {\n    switch (ctor) {\n        case Uint16Array:    return Float16;\n        case Float32Array:   return Float32;\n        case Float64Array:   return Float64;\n        default: return null;\n    }\n};\n\n/** @ignore */\nconst vectorTypeToDataType = (ctor: FloatVectorConstructors) => {\n    switch (ctor) {\n        case Float16Vector: return Float16;\n        case Float32Vector: return Float32;\n        case Float64Vector: return Float64;\n        default: return null;\n    }\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Interval, IntervalDayTime, IntervalYearMonth } from '../type';\n\n/** @ignore */\nexport class IntervalVector<T extends Interval = Interval> extends BaseVector<T> {}\n/** @ignore */\nexport class IntervalDayTimeVector extends IntervalVector<IntervalDayTime> {}\n/** @ignore */\nexport class IntervalYearMonthVector extends IntervalVector<IntervalYearMonth> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { BigInt64Array, BigUint64Array } from '../util/compat';\nimport { toBigInt64Array, toBigUint64Array } from '../util/buffer';\nimport { Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64, IntArray } from '../type';\nimport { VectorType as V, TypedArrayConstructor, BigIntArrayConstructor, BigIntArray } from '../interfaces';\n\n/** @ignore */\ntype IntVectorConstructors =\n    typeof IntVector    |\n    typeof Int8Vector   |\n    typeof Int16Vector  |\n    typeof Int32Vector  |\n    typeof Uint8Vector  |\n    typeof Uint16Vector |\n    typeof Uint32Vector |\n    typeof Int64Vector  |\n    typeof Uint64Vector ;\n\n/** @ignore */\ntype FromInput<T extends Int, TNull = any> =\n    IntArray | BigIntArray              |\n    Iterable<T['TValue'] | TNull>       |\n    AsyncIterable<T['TValue'] | TNull>  |\n    VectorBuilderOptions<T, TNull>      |\n    VectorBuilderOptionsAsync<T, TNull> ;\n\n/** @ignore */\ntype FromArgs<T extends Int, TNull = any> = [FromInput<T, TNull>, boolean?];\n\n/** @ignore */\ntype IntArrayCtor = TypedArrayConstructor<IntArray> | BigIntArrayConstructor<BigIntArray>;\n\n/** @ignore */\nexport class IntVector<T extends Int = Int> extends BaseVector<T> {\n\n    // Guaranteed zero-copy variants\n    public static from(this: typeof IntVector, input: Int8Array): Int8Vector;\n    public static from(this: typeof IntVector, input: Int16Array): Int16Vector;\n    public static from(this: typeof IntVector, input: Int32Array): Int32Vector;\n    public static from(this: typeof IntVector, input: BigInt64Array): Int64Vector;\n    public static from(this: typeof IntVector, input: Int32Array, is64bit: true): Int64Vector;\n    public static from(this: typeof IntVector, input: Uint8Array): Uint8Vector;\n    public static from(this: typeof IntVector, input: Uint16Array): Uint16Vector;\n    public static from(this: typeof IntVector, input: Uint32Array): Uint32Vector;\n    public static from(this: typeof IntVector, input: BigUint64Array): Uint64Vector;\n    public static from(this: typeof IntVector, input: Uint32Array, is64bit: true): Uint64Vector;\n\n    // Zero-copy if input is a TypedArray of the same type as the\n    // Vector that from is called on, otherwise uses the Builders\n    public static from<TNull = any>(this: typeof Int8Vector,   input: FromInput<Int8, TNull>): Int8Vector;\n    public static from<TNull = any>(this: typeof Int16Vector,  input: FromInput<Int16, TNull>): Int16Vector;\n    public static from<TNull = any>(this: typeof Int32Vector,  input: FromInput<Int32, TNull>): Int32Vector;\n    public static from<TNull = any>(this: typeof Int64Vector,  input: FromInput<Int64, TNull>): Int64Vector;\n    public static from<TNull = any>(this: typeof Uint8Vector,  input: FromInput<Uint8, TNull>): Uint8Vector;\n    public static from<TNull = any>(this: typeof Uint16Vector, input: FromInput<Uint16, TNull>): Uint16Vector;\n    public static from<TNull = any>(this: typeof Uint32Vector, input: FromInput<Uint32, TNull>): Uint32Vector;\n    public static from<TNull = any>(this: typeof Uint64Vector, input: FromInput<Uint64, TNull>): Uint64Vector;\n\n    // Not zero-copy\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: Iterable<T['TValue'] | TNull>): V<T>;\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: AsyncIterable<T['TValue'] | TNull>): Promise<V<T>>;\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: VectorBuilderOptions<T, TNull>): Chunked<T>;\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: VectorBuilderOptionsAsync<T, TNull>): Promise<Chunked<T>>;\n    /** @nocollapse */\n    public static from<T extends Int, TNull = any>(this: IntVectorConstructors, ...args: FromArgs<T, TNull>) {\n\n        let [input, is64bit = false] = args;\n        let ArrowType = vectorTypeToDataType(this, is64bit);\n\n        if ((input instanceof ArrayBuffer) || ArrayBuffer.isView(input)) {\n            let InputType = arrayTypeToDataType(input.constructor as IntArrayCtor, is64bit) || ArrowType;\n            // Special case, infer the Arrow DataType from the input if calling the base\n            // IntVector.from with a TypedArray, e.g. `IntVector.from(new Int32Array())`\n            if (ArrowType === null) {\n                ArrowType = InputType;\n            }\n            // If the DataType inferred from the Vector constructor matches the\n            // DataType inferred from the input arguments, return zero-copy view\n            if (ArrowType && ArrowType === InputType) {\n                let type = new ArrowType();\n                let length = input.byteLength / type.ArrayType.BYTES_PER_ELEMENT;\n                // If the ArrowType is 64bit but the input type is 32bit pairs, update the logical length\n                if (convert32To64Bit(ArrowType, input.constructor)) {\n                    length *= 0.5;\n                }\n                return Vector.new(Data.Int(type, 0, length, 0, null, input as IntArray));\n            }\n        }\n\n        if (ArrowType) {\n            // If the DataType inferred from the Vector constructor is different than\n            // the DataType inferred from the input TypedArray, or if input isn't a\n            // TypedArray, use the Builders to construct the result Vector\n            return vectorFromValuesWithType(() => new ArrowType!() as T, input);\n        }\n\n        if ((input instanceof DataView) || (input instanceof ArrayBuffer)) {\n            throw new TypeError(`Cannot infer integer type from instance of ${input.constructor.name}`);\n        }\n\n        throw new TypeError('Unrecognized IntVector input');\n    }\n}\n\n/** @ignore */\nexport class Int8Vector extends IntVector<Int8> {}\n/** @ignore */\nexport class Int16Vector extends IntVector<Int16> {}\n/** @ignore */\nexport class Int32Vector extends IntVector<Int32> {}\n/** @ignore */\nexport class Int64Vector extends IntVector<Int64> {\n    public toBigInt64Array() {\n        return toBigInt64Array(this.values);\n    }\n    // @ts-ignore\n    private _values64: BigInt64Array;\n    public get values64(): BigInt64Array {\n        return this._values64 || (this._values64 = this.toBigInt64Array());\n    }\n}\n\n/** @ignore */\nexport class Uint8Vector extends IntVector<Uint8> {}\n/** @ignore */\nexport class Uint16Vector extends IntVector<Uint16> {}\n/** @ignore */\nexport class Uint32Vector extends IntVector<Uint32> {}\n/** @ignore */\nexport class Uint64Vector extends IntVector<Uint64> {\n    public toBigUint64Array() {\n        return toBigUint64Array(this.values);\n    }\n    // @ts-ignore\n    private _values64: BigUint64Array;\n    public get values64(): BigUint64Array {\n        return this._values64 || (this._values64 = this.toBigUint64Array());\n    }\n}\n\nconst convert32To64Bit = (typeCtor: any, dataCtor: any) => {\n    return (typeCtor === Int64 || typeCtor === Uint64) &&\n           (dataCtor === Int32Array || dataCtor === Uint32Array);\n};\n\n/** @ignore */\nconst arrayTypeToDataType = (ctor: IntArrayCtor, is64bit: boolean) => {\n    switch (ctor) {\n        case Int8Array:      return Int8;\n        case Int16Array:     return Int16;\n        case Int32Array:     return is64bit ? Int64 : Int32;\n        case BigInt64Array:  return Int64;\n        case Uint8Array:     return Uint8;\n        case Uint16Array:    return Uint16;\n        case Uint32Array:    return is64bit ? Uint64 : Uint32;\n        case BigUint64Array: return Uint64;\n        default: return null;\n    }\n};\n\n/** @ignore */\nconst vectorTypeToDataType = (ctor: IntVectorConstructors, is64bit: boolean) => {\n    switch (ctor) {\n        case Int8Vector:   return Int8;\n        case Int16Vector:  return Int16;\n        case Int32Vector:  return is64bit ? Int64 : Int32;\n        case Int64Vector:  return Int64;\n        case Uint8Vector:  return Uint8;\n        case Uint16Vector: return Uint16;\n        case Uint32Vector: return is64bit ? Uint64 : Uint32;\n        case Uint64Vector: return Uint64;\n        default: return null;\n    }\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { DataType, List } from '../type';\n\n/** @ignore */\nexport class ListVector<T extends DataType = any> extends BaseVector<List<T>> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { MapRow } from './row';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { DataType, Map_, Struct, List } from '../type';\n\n/** @ignore */\nexport class MapVector<K extends DataType = any, V extends DataType = any> extends BaseVector<Map_<K, V>> {\n    public asList() {\n        const child = this.type.children[0] as Field<Struct<{ key: K, value: V }>>;\n        return Vector.new(this.data.clone(new List<Struct<{ key: K, value: V }>>(child)));\n    }\n    public bind(index: number): Map_<K, V>['TValue'] {\n        const child = this.getChildAt<Struct<{ key: K, value: V }>>(0);\n        const { [index]: begin, [index + 1]: end } = this.valueOffsets;\n        return new MapRow(child!.slice(begin, end));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Null } from '../type';\nimport { BaseVector } from './base';\n\n/** @ignore */\nexport class NullVector extends BaseVector<Null> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { StructRow } from './row';\nimport { BaseVector } from './base';\nimport { DataType, Struct } from '../type';\n\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n/** @ignore */\nexport class StructVector<T extends { [key: string]: DataType } = any> extends BaseVector<Struct<T>> {\n    // @ts-ignore\n    private _row: StructRow<T>;\n    public bind(index: number): Struct<T>['TValue'] {\n        const proto = this._row || (this._row = new StructRow<T>(this));\n        const bound = Object.create(proto);\n        bound[kRowIndex] = index;\n        return bound;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond } from '../type';\n\n/** @ignore */\nexport class TimestampVector<T extends Timestamp = Timestamp> extends BaseVector<T> {}\n/** @ignore */\nexport class TimestampSecondVector extends TimestampVector<TimestampSecond> {}\n/** @ignore */\nexport class TimestampMillisecondVector extends TimestampVector<TimestampMillisecond> {}\n/** @ignore */\nexport class TimestampMicrosecondVector extends TimestampVector<TimestampMicrosecond> {}\n/** @ignore */\nexport class TimestampNanosecondVector extends TimestampVector<TimestampNanosecond> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond } from '../type';\n\n/** @ignore */\nexport class TimeVector<T extends Time = Time> extends BaseVector<T> {}\n/** @ignore */\nexport class TimeSecondVector extends TimeVector<TimeSecond> {}\n/** @ignore */\nexport class TimeMillisecondVector extends TimeVector<TimeMillisecond> {}\n/** @ignore */\nexport class TimeMicrosecondVector extends TimeVector<TimeMicrosecond> {}\n/** @ignore */\nexport class TimeNanosecondVector extends TimeVector<TimeNanosecond> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Union, DenseUnion, SparseUnion} from '../type';\n\n/** @ignore */\nexport class UnionVector<T extends Union = Union> extends BaseVector<T> {\n    public get typeIdToChildIndex() { return this.data.type.typeIdToChildIndex; }\n}\n\n/** @ignore */\nexport class DenseUnionVector extends UnionVector<DenseUnion> {\n    public get valueOffsets() { return this.data.valueOffsets!; }\n}\n\n/** @ignore */\nexport class SparseUnionVector extends UnionVector<SparseUnion> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { Binary, Utf8 } from '../type';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\n\n/** @ignore */\nexport class Utf8Vector extends BaseVector<Utf8> {\n    public static from<TNull = any>(input: Iterable<string | TNull>): Utf8Vector;\n    public static from<TNull = any>(input: AsyncIterable<string | TNull>): Promise<Utf8Vector>;\n    public static from<TNull = any>(input: VectorBuilderOptions<Utf8, TNull>): Chunked<Utf8>;\n    public static from<TNull = any>(input: VectorBuilderOptionsAsync<Utf8, TNull>): Promise<Chunked<Utf8>>;\n    /** @nocollapse */\n    public static from<TNull = any>(input: Iterable<string | TNull> | AsyncIterable<string | TNull> | VectorBuilderOptions<Utf8, TNull> | VectorBuilderOptionsAsync<Utf8, TNull>) {\n        return vectorFromValuesWithType(() => new Utf8(), input);\n    }\n    public asBinary() {\n        return Vector.new(this.data.clone(new Binary()));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport function partial0<T>(visit: (node: T) => any) {\n    return function(this: T) { return visit(this); };\n}\n\n/** @ignore */\nexport function partial1<T>(visit: (node: T, a: any) => any) {\n    return function(this: T, a: any) { return visit(this, a); };\n}\n\n/** @ignore */\nexport function partial2<T>(visit: (node: T, a: any, b: any) => any) {\n    return function(this: T, a: any, b: any) { return visit(this, a, b); };\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { BN } from '../util/bn';\nimport { Visitor } from '../visitor';\nimport { decodeUtf8 } from '../util/utf8';\nimport { VectorType } from '../interfaces';\nimport { uint16ToFloat64 } from '../util/math';\nimport { Type, UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface GetVisitor extends Visitor {\n    visit<T extends VectorType>  (node: T, index: number): T['TValue'];\n    visitMany<T extends VectorType>  (nodes: T[], indices: number[]): T['TValue'][];\n    getVisitFn<T extends Type>    (node: T): (vector: VectorType<T>, index: number) => VectorType<T>['TValue'];\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>, index: number) => VectorType<T>['TValue'];\n    visitNull                 <T extends Null>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitBool                 <T extends Bool>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt                  <T extends Int>                  (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt8                 <T extends Int8>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt16                <T extends Int16>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt32                <T extends Int32>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt64                <T extends Int64>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint8                <T extends Uint8>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint16               <T extends Uint16>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint32               <T extends Uint32>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint64               <T extends Uint64>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat                <T extends Float>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat16              <T extends Float16>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat32              <T extends Float32>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat64              <T extends Float64>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitUtf8                 <T extends Utf8>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitBinary               <T extends Binary>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitFixedSizeBinary      <T extends FixedSizeBinary>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitDate                 <T extends Date_>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitDateDay              <T extends DateDay>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitDateMillisecond      <T extends DateMillisecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestamp            <T extends Timestamp>            (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampSecond      <T extends TimestampSecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampMillisecond <T extends TimestampMillisecond> (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampMicrosecond <T extends TimestampMicrosecond> (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampNanosecond  <T extends TimestampNanosecond>  (vector: VectorType<T>, index: number): T['TValue'];\n    visitTime                 <T extends Time>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeSecond           <T extends TimeSecond>           (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeMillisecond      <T extends TimeMillisecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeMicrosecond      <T extends TimeMicrosecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeNanosecond       <T extends TimeNanosecond>       (vector: VectorType<T>, index: number): T['TValue'];\n    visitDecimal              <T extends Decimal>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitList                 <T extends List>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitStruct               <T extends Struct>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitUnion                <T extends Union>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitDenseUnion           <T extends DenseUnion>           (vector: VectorType<T>, index: number): T['TValue'];\n    visitSparseUnion          <T extends SparseUnion>          (vector: VectorType<T>, index: number): T['TValue'];\n    visitDictionary           <T extends Dictionary>           (vector: VectorType<T>, index: number): T['TValue'];\n    visitInterval             <T extends Interval>             (vector: VectorType<T>, index: number): T['TValue'];\n    visitIntervalDayTime      <T extends IntervalDayTime>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitIntervalYearMonth    <T extends IntervalYearMonth>    (vector: VectorType<T>, index: number): T['TValue'];\n    visitFixedSizeList        <T extends FixedSizeList>        (vector: VectorType<T>, index: number): T['TValue'];\n    visitMap                  <T extends Map_>                 (vector: VectorType<T>, index: number): T['TValue'];\n}\n\n/** @ignore */\nexport class GetVisitor extends Visitor {}\n\n/** @ignore */const epochDaysToMs = (data: Int32Array, index: number) => 86400000 * data[index];\n/** @ignore */const epochMillisecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1]) + (data[index] >>> 0);\n/** @ignore */const epochMicrosecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1] / 1000) + ((data[index] >>> 0) / 1000);\n/** @ignore */const epochNanosecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1] / 1000000) + ((data[index] >>> 0) / 1000000);\n\n/** @ignore */const epochMillisecondsToDate = (epochMs: number) => new Date(epochMs);\n/** @ignore */const epochDaysToDate = (data: Int32Array, index: number) => epochMillisecondsToDate(epochDaysToMs(data, index));\n/** @ignore */const epochMillisecondsLongToDate = (data: Int32Array, index: number) => epochMillisecondsToDate(epochMillisecondsLongToMs(data, index));\n\n/** @ignore */\nconst getNull = <T extends Null>(_vector: VectorType<T>, _index: number): T['TValue'] => null;\n/** @ignore */\nconst getVariableWidthBytes = (values: Uint8Array, valueOffsets: Int32Array, index: number) => {\n    const { [index]: x, [index + 1]: y } = valueOffsets;\n    return x != null && y != null ? values.subarray(x, y) : null as any;\n};\n\n/** @ignore */\nconst getBool = <T extends Bool>({ offset, values }: VectorType<T>, index: number): T['TValue'] => {\n    const idx = offset + index;\n    const byte = values[idx >> 3];\n    return (byte & 1 << (idx % 8)) !== 0;\n};\n\n/** @ignore */\ntype Numeric1X = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32 | Float32 | Float64;\n/** @ignore */\ntype Numeric2X = Int64 | Uint64;\n\n/** @ignore */\nconst getDateDay         = <T extends DateDay>        ({ values         }: VectorType<T>, index: number): T['TValue'] => epochDaysToDate(values, index);\n/** @ignore */\nconst getDateMillisecond = <T extends DateMillisecond>({ values         }: VectorType<T>, index: number): T['TValue'] => epochMillisecondsLongToDate(values, index * 2);\n/** @ignore */\nconst getNumeric         = <T extends Numeric1X>      ({ stride, values }: VectorType<T>, index: number): T['TValue'] => values[stride * index];\n/** @ignore */\nconst getFloat16         = <T extends Float16>        ({ stride, values }: VectorType<T>, index: number): T['TValue'] => uint16ToFloat64(values[stride * index]);\n/** @ignore */\nconst getBigInts         = <T extends Numeric2X>({ stride, values, type }: VectorType<T>, index: number): T['TValue'] => <any> BN.new(values.subarray(stride * index, stride * (index + 1)), type.isSigned);\n/** @ignore */\nconst getFixedSizeBinary = <T extends FixedSizeBinary>({ stride, values }: VectorType<T>, index: number): T['TValue'] => values.subarray(stride * index, stride * (index + 1));\n\n/** @ignore */\nconst getBinary = <T extends Binary>({ values, valueOffsets }: VectorType<T>, index: number): T['TValue'] => getVariableWidthBytes(values, valueOffsets, index);\n/** @ignore */\nconst getUtf8 = <T extends Utf8>({ values, valueOffsets }: VectorType<T>, index: number): T['TValue'] => {\n    const bytes = getVariableWidthBytes(values, valueOffsets, index);\n    return bytes !== null ? decodeUtf8(bytes) : null as any;\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getInt = <T extends Int>(vector: VectorType<T>, index: number): T['TValue'] => (\n    vector.type.bitWidth < 64\n        ? getNumeric(vector as VectorType<Numeric1X>, index)\n        : getBigInts(vector as VectorType<Numeric2X>, index)\n);\n\n/* istanbul ignore next */\n/** @ignore */\nconst getFloat = <T extends Float> (vector: VectorType<T>, index: number): T['TValue'] => (\n    vector.type.precision !== Precision.HALF\n        ? getNumeric(vector as VectorType<Numeric1X>, index)\n        : getFloat16(vector as VectorType<Float16>, index)\n);\n\n/* istanbul ignore next */\n/** @ignore */\nconst getDate = <T extends Date_> (vector: VectorType<T>, index: number): T['TValue'] => (\n    vector.type.unit === DateUnit.DAY\n        ? getDateDay(vector as VectorType<DateDay>, index)\n        : getDateMillisecond(vector as VectorType<DateMillisecond>, index)\n);\n\n/** @ignore */\nconst getTimestampSecond      = <T extends TimestampSecond>     ({ values }: VectorType<T>, index: number): T['TValue'] => 1000 * epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMillisecond = <T extends TimestampMillisecond>({ values }: VectorType<T>, index: number): T['TValue'] => epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMicrosecond = <T extends TimestampMicrosecond>({ values }: VectorType<T>, index: number): T['TValue'] => epochMicrosecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampNanosecond  = <T extends TimestampNanosecond> ({ values }: VectorType<T>, index: number): T['TValue'] => epochNanosecondsLongToMs(values, index * 2);\n/* istanbul ignore next */\n/** @ignore */\nconst getTimestamp            = <T extends Timestamp>(vector: VectorType<T>, index: number): T['TValue'] => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      getTimestampSecond(vector as VectorType<TimestampSecond>, index);\n        case TimeUnit.MILLISECOND: return getTimestampMillisecond(vector as VectorType<TimestampMillisecond>, index);\n        case TimeUnit.MICROSECOND: return getTimestampMicrosecond(vector as VectorType<TimestampMicrosecond>, index);\n        case TimeUnit.NANOSECOND:  return  getTimestampNanosecond(vector as VectorType<TimestampNanosecond>, index);\n    }\n};\n\n/** @ignore */\nconst getTimeSecond      = <T extends TimeSecond>     ({ values, stride }: VectorType<T>, index: number): T['TValue'] => values[stride * index];\n/** @ignore */\nconst getTimeMillisecond = <T extends TimeMillisecond>({ values, stride }: VectorType<T>, index: number): T['TValue'] => values[stride * index];\n/** @ignore */\nconst getTimeMicrosecond = <T extends TimeMicrosecond>({ values         }: VectorType<T>, index: number): T['TValue'] => BN.signed(values.subarray(2 * index, 2 * (index + 1)));\n/** @ignore */\nconst getTimeNanosecond  = <T extends TimeNanosecond> ({ values         }: VectorType<T>, index: number): T['TValue'] => BN.signed(values.subarray(2 * index, 2 * (index + 1)));\n/* istanbul ignore next */\n/** @ignore */\nconst getTime            = <T extends Time>(vector: VectorType<T>, index: number): T['TValue'] => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      getTimeSecond(vector as VectorType<TimeSecond>, index);\n        case TimeUnit.MILLISECOND: return getTimeMillisecond(vector as VectorType<TimeMillisecond>, index);\n        case TimeUnit.MICROSECOND: return getTimeMicrosecond(vector as VectorType<TimeMicrosecond>, index);\n        case TimeUnit.NANOSECOND:  return  getTimeNanosecond(vector as VectorType<TimeNanosecond>, index);\n    }\n};\n\n/** @ignore */\nconst getDecimal = <T extends Decimal>({ values }: VectorType<T>, index: number): T['TValue'] => BN.decimal(values.subarray(4 * index, 4 * (index + 1)));\n\n/** @ignore */\nconst getList = <T extends List>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const child = vector.getChildAt(0)!, { valueOffsets, stride } = vector;\n    return child.slice(valueOffsets[index * stride], valueOffsets[(index * stride) + 1]) as T['TValue'];\n};\n\n/** @ignore */\nconst getMap = <T extends Map_>(vector: VectorType<T>, index: number): T['TValue'] => {\n    return vector.bind(index) as T['TValue'];\n};\n\n/** @ignore */\nconst getStruct = <T extends Struct>(vector: VectorType<T>, index: number): T['TValue'] => {\n    return vector.bind(index) as T['TValue'];\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getUnion = <\n    V extends VectorType<Union> | VectorType<DenseUnion> | VectorType<SparseUnion>\n>(vector: V, index: number): V['TValue'] => {\n    return vector.type.mode === UnionMode.Dense ?\n        getDenseUnion(vector as VectorType<DenseUnion>, index) :\n        getSparseUnion(vector as VectorType<SparseUnion>, index);\n};\n\n/** @ignore */\nconst getDenseUnion = <T extends DenseUnion>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    return child ? child.get(vector.valueOffsets[index]) : null;\n};\n\n/** @ignore */\nconst getSparseUnion = <T extends SparseUnion>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    return child ? child.get(index) : null;\n};\n\n/** @ignore */\nconst getDictionary = <T extends Dictionary>(vector: VectorType<T>, index: number): T['TValue'] => {\n    return vector.getValue(vector.getKey(index)!);\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getInterval = <T extends Interval>(vector: VectorType<T>, index: number): T['TValue'] =>\n    (vector.type.unit === IntervalUnit.DAY_TIME)\n        ? getIntervalDayTime(vector as VectorType<IntervalDayTime>, index)\n        : getIntervalYearMonth(vector as VectorType<IntervalYearMonth>, index);\n\n/** @ignore */\nconst getIntervalDayTime = <T extends IntervalDayTime>({ values }: VectorType<T>, index: number): T['TValue'] => values.subarray(2 * index, 2 * (index + 1));\n\n/** @ignore */\nconst getIntervalYearMonth = <T extends IntervalYearMonth>({ values }: VectorType<T>, index: number): T['TValue'] => {\n    const interval = values[index];\n    const int32s = new Int32Array(2);\n    int32s[0] = interval / 12 | 0; /* years */\n    int32s[1] = interval % 12 | 0; /* months */\n    return int32s;\n};\n\n/** @ignore */\nconst getFixedSizeList = <T extends FixedSizeList>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const child = vector.getChildAt(0)!, { stride } = vector;\n    return child.slice(index * stride, (index + 1) * stride) as T['TValue'];\n};\n\nGetVisitor.prototype.visitNull                 =                 getNull;\nGetVisitor.prototype.visitBool                 =                 getBool;\nGetVisitor.prototype.visitInt                  =                  getInt;\nGetVisitor.prototype.visitInt8                 =              getNumeric;\nGetVisitor.prototype.visitInt16                =              getNumeric;\nGetVisitor.prototype.visitInt32                =              getNumeric;\nGetVisitor.prototype.visitInt64                =              getBigInts;\nGetVisitor.prototype.visitUint8                =              getNumeric;\nGetVisitor.prototype.visitUint16               =              getNumeric;\nGetVisitor.prototype.visitUint32               =              getNumeric;\nGetVisitor.prototype.visitUint64               =              getBigInts;\nGetVisitor.prototype.visitFloat                =                getFloat;\nGetVisitor.prototype.visitFloat16              =              getFloat16;\nGetVisitor.prototype.visitFloat32              =              getNumeric;\nGetVisitor.prototype.visitFloat64              =              getNumeric;\nGetVisitor.prototype.visitUtf8                 =                 getUtf8;\nGetVisitor.prototype.visitBinary               =               getBinary;\nGetVisitor.prototype.visitFixedSizeBinary      =      getFixedSizeBinary;\nGetVisitor.prototype.visitDate                 =                 getDate;\nGetVisitor.prototype.visitDateDay              =              getDateDay;\nGetVisitor.prototype.visitDateMillisecond      =      getDateMillisecond;\nGetVisitor.prototype.visitTimestamp            =            getTimestamp;\nGetVisitor.prototype.visitTimestampSecond      =      getTimestampSecond;\nGetVisitor.prototype.visitTimestampMillisecond = getTimestampMillisecond;\nGetVisitor.prototype.visitTimestampMicrosecond = getTimestampMicrosecond;\nGetVisitor.prototype.visitTimestampNanosecond  =  getTimestampNanosecond;\nGetVisitor.prototype.visitTime                 =                 getTime;\nGetVisitor.prototype.visitTimeSecond           =           getTimeSecond;\nGetVisitor.prototype.visitTimeMillisecond      =      getTimeMillisecond;\nGetVisitor.prototype.visitTimeMicrosecond      =      getTimeMicrosecond;\nGetVisitor.prototype.visitTimeNanosecond       =       getTimeNanosecond;\nGetVisitor.prototype.visitDecimal              =              getDecimal;\nGetVisitor.prototype.visitList                 =                 getList;\nGetVisitor.prototype.visitStruct               =               getStruct;\nGetVisitor.prototype.visitUnion                =                getUnion;\nGetVisitor.prototype.visitDenseUnion           =           getDenseUnion;\nGetVisitor.prototype.visitSparseUnion          =          getSparseUnion;\nGetVisitor.prototype.visitDictionary           =           getDictionary;\nGetVisitor.prototype.visitInterval             =             getInterval;\nGetVisitor.prototype.visitIntervalDayTime      =      getIntervalDayTime;\nGetVisitor.prototype.visitIntervalYearMonth    =    getIntervalYearMonth;\nGetVisitor.prototype.visitFixedSizeList        =        getFixedSizeList;\nGetVisitor.prototype.visitMap                  =                  getMap;\n\n/** @ignore */\nexport const instance = new GetVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { getBool, iterateBits } from '../util/bit';\nimport { createElementComparator } from '../util/vector';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface IndexOfVisitor extends Visitor {\n    visit<T extends VectorType>  (node: T, value: T['TValue'] | null, index?: number): number;\n    visitMany <T extends VectorType>  (nodes: T[], values: (T['TValue'] | null)[], indices: (number | undefined)[]): number[];\n    getVisitFn<T extends Type>    (node: T): (vector: VectorType<T>, value: VectorType<T>['TValue'] | null, index?: number) => number;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>, value:         T['TValue'] | null, index?: number) => number;\n    visitNull                 <T extends Null>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitBool                 <T extends Bool>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt                  <T extends Int>                 (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt8                 <T extends Int8>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt16                <T extends Int16>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt32                <T extends Int32>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt64                <T extends Int64>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint8                <T extends Uint8>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint16               <T extends Uint16>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint32               <T extends Uint32>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint64               <T extends Uint64>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat                <T extends Float>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat16              <T extends Float16>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat32              <T extends Float32>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat64              <T extends Float64>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUtf8                 <T extends Utf8>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitBinary               <T extends Binary>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDate                 <T extends Date_>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDateDay              <T extends DateDay>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDateMillisecond      <T extends DateMillisecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestamp            <T extends Timestamp>           (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampSecond      <T extends TimestampSecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampMillisecond <T extends TimestampMillisecond>(vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond>(vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampNanosecond  <T extends TimestampNanosecond> (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTime                 <T extends Time>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeSecond           <T extends TimeSecond>          (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeMillisecond      <T extends TimeMillisecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeNanosecond       <T extends TimeNanosecond>      (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDecimal              <T extends Decimal>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitList                 <T extends List>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitStruct               <T extends Struct>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUnion                <T extends Union>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDenseUnion           <T extends DenseUnion>          (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitSparseUnion          <T extends SparseUnion>         (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDictionary           <T extends Dictionary>          (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInterval             <T extends Interval>            (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitIntervalDayTime      <T extends IntervalDayTime>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>   (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFixedSizeList        <T extends FixedSizeList>       (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitMap                  <T extends Map_>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n}\n\n/** @ignore */\nexport class IndexOfVisitor extends Visitor {}\n\n/** @ignore */\nfunction nullIndexOf(vector: VectorType<Null>, searchElement?: null) {\n    // if you're looking for nulls and the vector isn't empty, we've got 'em!\n    return searchElement === null && vector.length > 0 ? 0 : -1;\n}\n\n/** @ignore */\nfunction indexOfNull<T extends DataType>(vector: VectorType<T>, fromIndex?: number): number {\n    const { nullBitmap } = vector;\n    if (!nullBitmap || vector.nullCount <= 0) {\n        return -1;\n    }\n    let i = 0;\n    for (const isValid of iterateBits(nullBitmap, vector.data.offset + (fromIndex || 0), vector.length, nullBitmap, getBool)) {\n        if (!isValid) { return i; }\n        ++i;\n    }\n    return -1;\n}\n\n/** @ignore */\nfunction indexOfValue<T extends DataType>(vector: VectorType<T>, searchElement?: T['TValue'] | null, fromIndex?: number): number {\n    if (searchElement === undefined) { return -1; }\n    if (searchElement === null) { return indexOfNull(vector, fromIndex); }\n    const compare = createElementComparator(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = vector.length; ++i < n;) {\n        if (compare(vector.get(i))) {\n            return i;\n        }\n    }\n    return -1;\n}\n\n/** @ignore */\nfunction indexOfUnion<T extends DataType>(vector: VectorType<T>, searchElement?: T['TValue'] | null, fromIndex?: number): number {\n    // Unions are special -- they do have a nullBitmap, but so can their children.\n    // If the searchElement is null, we don't know whether it came from the Union's\n    // bitmap or one of its childrens'. So we don't interrogate the Union's bitmap,\n    // since that will report the wrong index if a child has a null before the Union.\n    const compare = createElementComparator(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = vector.length; ++i < n;) {\n        if (compare(vector.get(i))) {\n            return i;\n        }\n    }\n    return -1;\n}\n\nIndexOfVisitor.prototype.visitNull                 =  nullIndexOf;\nIndexOfVisitor.prototype.visitBool                 = indexOfValue;\nIndexOfVisitor.prototype.visitInt                  = indexOfValue;\nIndexOfVisitor.prototype.visitInt8                 = indexOfValue;\nIndexOfVisitor.prototype.visitInt16                = indexOfValue;\nIndexOfVisitor.prototype.visitInt32                = indexOfValue;\nIndexOfVisitor.prototype.visitInt64                = indexOfValue;\nIndexOfVisitor.prototype.visitUint8                = indexOfValue;\nIndexOfVisitor.prototype.visitUint16               = indexOfValue;\nIndexOfVisitor.prototype.visitUint32               = indexOfValue;\nIndexOfVisitor.prototype.visitUint64               = indexOfValue;\nIndexOfVisitor.prototype.visitFloat                = indexOfValue;\nIndexOfVisitor.prototype.visitFloat16              = indexOfValue;\nIndexOfVisitor.prototype.visitFloat32              = indexOfValue;\nIndexOfVisitor.prototype.visitFloat64              = indexOfValue;\nIndexOfVisitor.prototype.visitUtf8                 = indexOfValue;\nIndexOfVisitor.prototype.visitBinary               = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeBinary      = indexOfValue;\nIndexOfVisitor.prototype.visitDate                 = indexOfValue;\nIndexOfVisitor.prototype.visitDateDay              = indexOfValue;\nIndexOfVisitor.prototype.visitDateMillisecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimestamp            = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampSecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMillisecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMicrosecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampNanosecond  = indexOfValue;\nIndexOfVisitor.prototype.visitTime                 = indexOfValue;\nIndexOfVisitor.prototype.visitTimeSecond           = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMillisecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMicrosecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimeNanosecond       = indexOfValue;\nIndexOfVisitor.prototype.visitDecimal              = indexOfValue;\nIndexOfVisitor.prototype.visitList                 = indexOfValue;\nIndexOfVisitor.prototype.visitStruct               = indexOfValue;\nIndexOfVisitor.prototype.visitUnion                = indexOfValue;\nIndexOfVisitor.prototype.visitDenseUnion           = indexOfUnion;\nIndexOfVisitor.prototype.visitSparseUnion          = indexOfUnion;\nIndexOfVisitor.prototype.visitDictionary           = indexOfValue;\nIndexOfVisitor.prototype.visitInterval             = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalDayTime      = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalYearMonth    = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeList        = indexOfValue;\nIndexOfVisitor.prototype.visitMap                  = indexOfValue;\n\n/** @ignore */\nexport const instance = new IndexOfVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { iterateBits } from '../util/bit';\nimport { instance as getVisitor } from './get';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface IteratorVisitor extends Visitor {\n    visit<T extends VectorType>(node: T): IterableIterator<T['TValue'] | null>;\n    visitMany <T extends VectorType>(nodes: T[]): IterableIterator<T['TValue'] | null>[];\n    getVisitFn<T extends Type>(node: T): (vector: VectorType<T>) => IterableIterator<VectorType<T>['TValue'] | null>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>) => IterableIterator<VectorType<T>['TValue'] | null>;\n    visitNull                 <T extends Null>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitBool                 <T extends Bool>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt                  <T extends Int>                  (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt8                 <T extends Int8>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt16                <T extends Int16>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt32                <T extends Int32>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt64                <T extends Int64>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint8                <T extends Uint8>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint16               <T extends Uint16>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint32               <T extends Uint32>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint64               <T extends Uint64>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat                <T extends Float>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat16              <T extends Float16>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat32              <T extends Float32>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat64              <T extends Float64>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUtf8                 <T extends Utf8>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitBinary               <T extends Binary>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDate                 <T extends Date_>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDateDay              <T extends DateDay>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDateMillisecond      <T extends DateMillisecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestamp            <T extends Timestamp>            (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampSecond      <T extends TimestampSecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampMillisecond <T extends TimestampMillisecond> (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond> (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampNanosecond  <T extends TimestampNanosecond>  (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTime                 <T extends Time>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeSecond           <T extends TimeSecond>           (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeMillisecond      <T extends TimeMillisecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeNanosecond       <T extends TimeNanosecond>       (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDecimal              <T extends Decimal>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitList                 <T extends List>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitStruct               <T extends Struct>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUnion                <T extends Union>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDenseUnion           <T extends DenseUnion>           (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitSparseUnion          <T extends SparseUnion>          (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDictionary           <T extends Dictionary>           (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInterval             <T extends Interval>             (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitIntervalDayTime      <T extends IntervalDayTime>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>    (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFixedSizeList        <T extends FixedSizeList>        (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitMap                  <T extends Map_>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n}\n\n/** @ignore */\nexport class IteratorVisitor extends Visitor {}\n\n/** @ignore */\nfunction nullableIterator<T extends DataType>(vector: VectorType<T>): IterableIterator<T['TValue'] | null> {\n    const getFn = getVisitor.getVisitFn(vector);\n    return iterateBits<T['TValue'] | null>(\n        vector.nullBitmap, vector.offset, vector.length, vector,\n        (vec: VectorType<T>, idx: number, nullByte: number, nullBit: number) =>\n            ((nullByte & 1 << nullBit) !== 0) ? getFn(vec, idx) : null\n    );\n}\n\n/** @ignore */\nfunction vectorIterator<T extends DataType>(vector: VectorType<T>): IterableIterator<T['TValue'] | null> {\n\n    // If nullable, iterate manually\n    if (vector.nullCount > 0) {\n        return nullableIterator<T>(vector);\n    }\n\n    const { type, typeId, length } = vector;\n\n    // Fast case, defer to native iterators if possible\n    if (vector.stride === 1 && (\n        (typeId === Type.Timestamp) ||\n        (typeId === Type.Int && (type as Int).bitWidth !== 64) ||\n        (typeId === Type.Time && (type as Time).bitWidth !== 64) ||\n        (typeId === Type.Float && (type as Float).precision > 0 /* Precision.HALF */)\n    )) {\n        return vector.values.subarray(0, length)[Symbol.iterator]();\n    }\n\n    // Otherwise, iterate manually\n    return (function* (getFn) {\n        for (let index = -1; ++index < length;) {\n            yield getFn(vector, index);\n        }\n    })(getVisitor.getVisitFn(vector));\n}\n\nIteratorVisitor.prototype.visitNull                 = vectorIterator;\nIteratorVisitor.prototype.visitBool                 = vectorIterator;\nIteratorVisitor.prototype.visitInt                  = vectorIterator;\nIteratorVisitor.prototype.visitInt8                 = vectorIterator;\nIteratorVisitor.prototype.visitInt16                = vectorIterator;\nIteratorVisitor.prototype.visitInt32                = vectorIterator;\nIteratorVisitor.prototype.visitInt64                = vectorIterator;\nIteratorVisitor.prototype.visitUint8                = vectorIterator;\nIteratorVisitor.prototype.visitUint16               = vectorIterator;\nIteratorVisitor.prototype.visitUint32               = vectorIterator;\nIteratorVisitor.prototype.visitUint64               = vectorIterator;\nIteratorVisitor.prototype.visitFloat                = vectorIterator;\nIteratorVisitor.prototype.visitFloat16              = vectorIterator;\nIteratorVisitor.prototype.visitFloat32              = vectorIterator;\nIteratorVisitor.prototype.visitFloat64              = vectorIterator;\nIteratorVisitor.prototype.visitUtf8                 = vectorIterator;\nIteratorVisitor.prototype.visitBinary               = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeBinary      = vectorIterator;\nIteratorVisitor.prototype.visitDate                 = vectorIterator;\nIteratorVisitor.prototype.visitDateDay              = vectorIterator;\nIteratorVisitor.prototype.visitDateMillisecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimestamp            = vectorIterator;\nIteratorVisitor.prototype.visitTimestampSecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMicrosecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampNanosecond  = vectorIterator;\nIteratorVisitor.prototype.visitTime                 = vectorIterator;\nIteratorVisitor.prototype.visitTimeSecond           = vectorIterator;\nIteratorVisitor.prototype.visitTimeMillisecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimeMicrosecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimeNanosecond       = vectorIterator;\nIteratorVisitor.prototype.visitDecimal              = vectorIterator;\nIteratorVisitor.prototype.visitList                 = vectorIterator;\nIteratorVisitor.prototype.visitStruct               = vectorIterator;\nIteratorVisitor.prototype.visitUnion                = vectorIterator;\nIteratorVisitor.prototype.visitDenseUnion           = vectorIterator;\nIteratorVisitor.prototype.visitSparseUnion          = vectorIterator;\nIteratorVisitor.prototype.visitDictionary           = vectorIterator;\nIteratorVisitor.prototype.visitInterval             = vectorIterator;\nIteratorVisitor.prototype.visitIntervalDayTime      = vectorIterator;\nIteratorVisitor.prototype.visitIntervalYearMonth    = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeList        = vectorIterator;\nIteratorVisitor.prototype.visitMap                  = vectorIterator;\n\n/** @ignore */\nexport const instance = new IteratorVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { instance as iteratorVisitor } from './iterator';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface ToArrayVisitor extends Visitor {\n    visit<T extends VectorType>(node: T): T['TArray'];\n    visitMany<T extends VectorType>(nodes: T[]): T['TArray'][];\n    getVisitFn<T extends Type>(node: T): (vector: VectorType<T>) => VectorType<T>['TArray'];\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>) => VectorType<T>['TArray'];\n    visitNull                                    <T extends Null>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitBool                                    <T extends Bool>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt                                     <T extends Int>                 (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt8                                    <T extends Int8>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt16                                   <T extends Int16>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt32                                   <T extends Int32>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt64                                   <T extends Int64>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint8                                   <T extends Uint8>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint16                                  <T extends Uint16>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint32                                  <T extends Uint32>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint64                                  <T extends Uint64>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat                                   <T extends Float>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat16                                 <T extends Float16>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat32                                 <T extends Float32>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat64                                 <T extends Float64>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUtf8                                    <T extends Utf8>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitBinary                                  <T extends Binary>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFixedSizeBinary                         <T extends FixedSizeBinary>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDate                                    <T extends Date_>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDateDay                                 <T extends DateDay>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDateMillisecond                         <T extends DateMillisecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestamp                               <T extends Timestamp>           (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampSecond                         <T extends TimestampSecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampMillisecond                    <T extends TimestampMillisecond>(vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampMicrosecond                    <T extends TimestampMicrosecond>(vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampNanosecond                     <T extends TimestampNanosecond> (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTime                                    <T extends Time>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeSecond                              <T extends TimeSecond>          (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeMillisecond                         <T extends TimeMillisecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeMicrosecond                         <T extends TimeMicrosecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeNanosecond                          <T extends TimeNanosecond>      (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDecimal                                 <T extends Decimal>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitList                <R extends DataType, T extends List<R>>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitStruct                                  <T extends Struct>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUnion                                   <T extends Union>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDenseUnion                              <T extends DenseUnion>          (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitSparseUnion                             <T extends SparseUnion>         (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDictionary          <R extends DataType, T extends Dictionary<R>>       (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInterval                                <T extends Interval>            (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitIntervalDayTime                         <T extends IntervalDayTime>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitIntervalYearMonth                       <T extends IntervalYearMonth>   (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFixedSizeList       <R extends DataType, T extends FixedSizeList<R>>    (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitMap                                     <T extends Map_>                (vector: VectorType<T>): VectorType<T>['TArray'];\n}\n\n/** @ignore */\nexport class ToArrayVisitor extends Visitor {}\n\n/** @ignore */\nfunction arrayOfVector<T extends DataType>(vector: VectorType<T>): T['TArray'] {\n\n    const { type, length, stride } = vector;\n\n    // Fast case, return subarray if possible\n    switch (type.typeId) {\n        case Type.Int:\n        case Type.Float: case Type.Decimal:\n        case Type.Time: case Type.Timestamp:\n            return vector.values.subarray(0, length * stride);\n    }\n\n    // Otherwise if not primitive, slow copy\n    return [...iteratorVisitor.visit(vector)] as T['TArray'];\n}\n\nToArrayVisitor.prototype.visitNull                 = arrayOfVector;\nToArrayVisitor.prototype.visitBool                 = arrayOfVector;\nToArrayVisitor.prototype.visitInt                  = arrayOfVector;\nToArrayVisitor.prototype.visitInt8                 = arrayOfVector;\nToArrayVisitor.prototype.visitInt16                = arrayOfVector;\nToArrayVisitor.prototype.visitInt32                = arrayOfVector;\nToArrayVisitor.prototype.visitInt64                = arrayOfVector;\nToArrayVisitor.prototype.visitUint8                = arrayOfVector;\nToArrayVisitor.prototype.visitUint16               = arrayOfVector;\nToArrayVisitor.prototype.visitUint32               = arrayOfVector;\nToArrayVisitor.prototype.visitUint64               = arrayOfVector;\nToArrayVisitor.prototype.visitFloat                = arrayOfVector;\nToArrayVisitor.prototype.visitFloat16              = arrayOfVector;\nToArrayVisitor.prototype.visitFloat32              = arrayOfVector;\nToArrayVisitor.prototype.visitFloat64              = arrayOfVector;\nToArrayVisitor.prototype.visitUtf8                 = arrayOfVector;\nToArrayVisitor.prototype.visitBinary               = arrayOfVector;\nToArrayVisitor.prototype.visitFixedSizeBinary      = arrayOfVector;\nToArrayVisitor.prototype.visitDate                 = arrayOfVector;\nToArrayVisitor.prototype.visitDateDay              = arrayOfVector;\nToArrayVisitor.prototype.visitDateMillisecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimestamp            = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampSecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampMillisecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampMicrosecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampNanosecond  = arrayOfVector;\nToArrayVisitor.prototype.visitTime                 = arrayOfVector;\nToArrayVisitor.prototype.visitTimeSecond           = arrayOfVector;\nToArrayVisitor.prototype.visitTimeMillisecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimeMicrosecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimeNanosecond       = arrayOfVector;\nToArrayVisitor.prototype.visitDecimal              = arrayOfVector;\nToArrayVisitor.prototype.visitList                 = arrayOfVector;\nToArrayVisitor.prototype.visitStruct               = arrayOfVector;\nToArrayVisitor.prototype.visitUnion                = arrayOfVector;\nToArrayVisitor.prototype.visitDenseUnion           = arrayOfVector;\nToArrayVisitor.prototype.visitSparseUnion          = arrayOfVector;\nToArrayVisitor.prototype.visitDictionary           = arrayOfVector;\nToArrayVisitor.prototype.visitInterval             = arrayOfVector;\nToArrayVisitor.prototype.visitIntervalDayTime      = arrayOfVector;\nToArrayVisitor.prototype.visitIntervalYearMonth    = arrayOfVector;\nToArrayVisitor.prototype.visitFixedSizeList        = arrayOfVector;\nToArrayVisitor.prototype.visitMap                  = arrayOfVector;\n\n/** @ignore */\nexport const instance = new ToArrayVisitor();\n","/* istanbul ignore file */\n\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { Type, TimeUnit } from '../enum';\nimport { Schema, Field } from '../schema';\nimport {\n    DataType, Dictionary,\n    Float, Int, Date_, Interval, Time, Timestamp,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n} from '../type';\n\n/** @ignore */ const sum = (x: number, y: number) => x + y;\n/** @ignore */ const variableWidthColumnErrorMessage = (type: DataType) => `Cannot compute the byte width of variable-width column ${type}`;\n\n/** @ignore */\nexport interface ByteWidthVisitor extends Visitor {\n    visit<T extends DataType>(node: T): number;\n    visitMany<T extends DataType>(nodes: T[]): number[];\n    getVisitFn<T extends Type>    (node: T): (type: DataType<T>) => number;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (type: T) => number;\n}\n\n/** @ignore */\nexport class ByteWidthVisitor extends Visitor {\n    public visitNull            (____: Null            ) { return 0; }\n    public visitInt             (type: Int             ) { return type.bitWidth / 8; }\n    public visitFloat           (type: Float           ) { return type.ArrayType.BYTES_PER_ELEMENT; }\n    public visitBinary          (type: Binary          ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitUtf8            (type: Utf8            ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitBool            (____: Bool            ) { return 1 / 8; }\n    public visitDecimal         (____: Decimal         ) { return 16; }\n    public visitDate            (type: Date_           ) { return (type.unit + 1) * 4; }\n    public visitTime            (type: Time            ) { return type.bitWidth / 8; }\n    public visitTimestamp       (type: Timestamp       ) { return type.unit === TimeUnit.SECOND ? 4 : 8; }\n    public visitInterval        (type: Interval        ) { return (type.unit + 1) * 4; }\n    public visitList            (type: List            ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitStruct          (type: Struct          ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitUnion           (type: Union           ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitFixedSizeBinary (type: FixedSizeBinary ) { return type.byteWidth; }\n    public visitFixedSizeList   (type: FixedSizeList   ) { return type.listSize * this.visitFields(type.children).reduce(sum, 0); }\n    public visitMap             (type: Map_            ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitDictionary      (type: Dictionary      ) { return this.visit(type.indices); }\n    public visitFields          (fields: Field[]       ) { return (fields || []).map((field) => this.visit(field.type)); }\n    public visitSchema          (schema: Schema        ) { return this.visitFields(schema.fields).reduce(sum, 0); }\n}\n\n/** @ignore */\nexport const instance = new ByteWidthVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { VectorType, VectorCtor } from '../interfaces';\n\nimport { BinaryVector } from '../vector/binary';\nimport { BoolVector } from '../vector/bool';\nimport { DateVector, DateDayVector, DateMillisecondVector } from '../vector/date';\nimport { DecimalVector } from '../vector/decimal';\nimport { DictionaryVector } from '../vector/dictionary';\nimport { FixedSizeBinaryVector } from '../vector/fixedsizebinary';\nimport { FixedSizeListVector } from '../vector/fixedsizelist';\nimport { FloatVector, Float16Vector, Float32Vector, Float64Vector } from '../vector/float';\nimport { IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector } from '../vector/interval';\nimport { IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector } from '../vector/int';\nimport { ListVector } from '../vector/list';\nimport { MapVector } from '../vector/map';\nimport { NullVector } from '../vector/null';\nimport { StructVector } from '../vector/struct';\nimport { TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector } from '../vector/timestamp';\nimport { TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector } from '../vector/time';\nimport { UnionVector, DenseUnionVector, SparseUnionVector } from '../vector/union';\nimport { Utf8Vector } from '../vector/utf8';\n\n/** @ignore */\nexport interface GetVectorConstructor extends Visitor {\n    visit<T extends Type>(node: T): VectorCtor<T>;\n    visitMany <T extends Type>(nodes: T[]): VectorCtor<T>[];\n    getVisitFn<T extends Type>(node: T): () => VectorCtor<T>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): () => VectorCtor<T>;\n}\n\n/** @ignore */\nexport class GetVectorConstructor extends Visitor {\n    public visitNull                 () { return NullVector; }\n    public visitBool                 () { return BoolVector; }\n    public visitInt                  () { return IntVector; }\n    public visitInt8                 () { return Int8Vector; }\n    public visitInt16                () { return Int16Vector; }\n    public visitInt32                () { return Int32Vector; }\n    public visitInt64                () { return Int64Vector; }\n    public visitUint8                () { return Uint8Vector; }\n    public visitUint16               () { return Uint16Vector; }\n    public visitUint32               () { return Uint32Vector; }\n    public visitUint64               () { return Uint64Vector; }\n    public visitFloat                () { return FloatVector; }\n    public visitFloat16              () { return Float16Vector; }\n    public visitFloat32              () { return Float32Vector; }\n    public visitFloat64              () { return Float64Vector; }\n    public visitUtf8                 () { return Utf8Vector; }\n    public visitBinary               () { return BinaryVector; }\n    public visitFixedSizeBinary      () { return FixedSizeBinaryVector; }\n    public visitDate                 () { return DateVector; }\n    public visitDateDay              () { return DateDayVector; }\n    public visitDateMillisecond      () { return DateMillisecondVector; }\n    public visitTimestamp            () { return TimestampVector; }\n    public visitTimestampSecond      () { return TimestampSecondVector; }\n    public visitTimestampMillisecond () { return TimestampMillisecondVector; }\n    public visitTimestampMicrosecond () { return TimestampMicrosecondVector; }\n    public visitTimestampNanosecond  () { return TimestampNanosecondVector; }\n    public visitTime                 () { return TimeVector; }\n    public visitTimeSecond           () { return TimeSecondVector; }\n    public visitTimeMillisecond      () { return TimeMillisecondVector; }\n    public visitTimeMicrosecond      () { return TimeMicrosecondVector; }\n    public visitTimeNanosecond       () { return TimeNanosecondVector; }\n    public visitDecimal              () { return DecimalVector; }\n    public visitList                 () { return ListVector; }\n    public visitStruct               () { return StructVector; }\n    public visitUnion                () { return UnionVector; }\n    public visitDenseUnion           () { return DenseUnionVector; }\n    public visitSparseUnion          () { return SparseUnionVector; }\n    public visitDictionary           () { return DictionaryVector; }\n    public visitInterval             () { return IntervalVector; }\n    public visitIntervalDayTime      () { return IntervalDayTimeVector; }\n    public visitIntervalYearMonth    () { return IntervalYearMonthVector; }\n    public visitFixedSizeList        () { return FixedSizeListVector; }\n    public visitMap                  () { return MapVector; }\n}\n\n/** @ignore */\nexport const instance = new GetVectorConstructor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nexport { Vector } from '../vector';\nexport { BaseVector } from './base';\nexport { BinaryVector } from './binary';\nexport { BoolVector } from './bool';\nexport { Chunked } from './chunked';\nexport { DateVector, DateDayVector, DateMillisecondVector } from './date';\nexport { DecimalVector } from './decimal';\nexport { DictionaryVector } from './dictionary';\nexport { FixedSizeBinaryVector } from './fixedsizebinary';\nexport { FixedSizeListVector } from './fixedsizelist';\nexport { FloatVector, Float16Vector, Float32Vector, Float64Vector } from './float';\nexport { IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector } from './interval';\nexport { IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector } from './int';\nexport { ListVector } from './list';\nexport { MapVector } from './map';\nexport { NullVector } from './null';\nexport { StructVector } from './struct';\nexport { TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector } from './timestamp';\nexport { TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector } from './time';\nexport { UnionVector, DenseUnionVector, SparseUnionVector } from './union';\nexport { Utf8Vector } from './utf8';\nexport { MapRow, StructRow } from './row';\n\nimport * as fn from '../util/fn';\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { setBool } from '../util/bit';\nimport { isIterable, isAsyncIterable } from '../util/compat';\nimport { Builder, IterableBuilderOptions } from '../builder';\nimport { VectorType as V, VectorCtorArgs } from '../interfaces';\nimport { instance as getVisitor } from '../visitor/get';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as indexOfVisitor } from '../visitor/indexof';\nimport { instance as toArrayVisitor } from '../visitor/toarray';\nimport { instance as iteratorVisitor } from '../visitor/iterator';\nimport { instance as byteWidthVisitor } from '../visitor/bytewidth';\nimport { instance as getVectorConstructor } from '../visitor/vectorctor';\n\ndeclare module '../vector' {\n    namespace Vector {\n        export { newVector as new };\n        export { vectorFrom as from };\n    }\n}\n\ndeclare module './base' {\n    namespace BaseVector {\n        export { vectorFrom as from };\n    }\n    interface BaseVector<T extends DataType> {\n        get(index: number): T['TValue'] | null;\n        set(index: number, value: T['TValue'] | null): void;\n        indexOf(value: T['TValue'] | null, fromIndex?: number): number;\n        toArray(): T['TArray'];\n        getByteWidth(): number;\n        [Symbol.iterator](): IterableIterator<T['TValue'] | null>;\n    }\n}\n\n/** @nocollapse */\nVector.new = newVector;\n\n/** @nocollapse */\nVector.from = vectorFrom;\n\n/** @ignore */\nfunction newVector<T extends DataType>(data: Data<T>, ...args: VectorCtorArgs<V<T>>): V<T> {\n    return new (getVectorConstructor.getVisitFn<T>(data)())(data, ...args) as V<T>;\n}\n\n/** @ignore */\nexport interface VectorBuilderOptions<T extends DataType, TNull = any> extends IterableBuilderOptions<T, TNull> { values: Iterable<T['TValue'] | TNull>; }\n/** @ignore */\nexport interface VectorBuilderOptionsAsync<T extends DataType, TNull = any> extends IterableBuilderOptions<T, TNull> { values: AsyncIterable<T['TValue'] | TNull>; }\n\n/** @ignore */\nexport function vectorFromValuesWithType<T extends DataType, TNull = any>(newDataType: () => T, input: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull> | VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>) {\n    if (isIterable(input)) {\n        return Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input }) as V<T>;\n    } else if (isAsyncIterable(input)) {\n        return Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input }) as Promise<V<T>>;\n    }\n    const {\n        'values': values = [],\n        'type': type = newDataType(),\n        'nullValues': nullValues = [null, undefined],\n    } = { ...input };\n    return isIterable(values)\n        ? Vector.from({ nullValues, ...input, type } as VectorBuilderOptions<T, TNull>)\n        : Vector.from({ nullValues, ...input, type } as VectorBuilderOptionsAsync<T, TNull>);\n}\n\n/** @ignore */\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptions<T, TNull>): Vector<T>;\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptionsAsync<T, TNull>): Promise<Vector<T>>;\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>) {\n    const { 'values': values = [], ...options } = { 'nullValues': [null, undefined], ...input } as VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>;\n    if (isIterable<T['TValue'] | TNull>(values)) {\n        const chunks = [...Builder.throughIterable(options)(values)];\n        return chunks.length === 1 ? chunks[0] : Chunked.concat<T>(chunks);\n    }\n    return (async (chunks: V<T>[]) => {\n        const transform = Builder.throughAsyncIterable(options);\n        for await (const chunk of transform(values)) {\n            chunks.push(chunk);\n        }\n        return chunks.length === 1 ? chunks[0] : Chunked.concat<T>(chunks);\n    })([]);\n}\n\n//\n// We provide the following method implementations for code navigability purposes only.\n// They're overridden at runtime below with the specific Visitor implementation for each type,\n// short-circuiting the usual Visitor traversal and reducing intermediate lookups and calls.\n// This comment is here to remind you to not set breakpoints in these function bodies, or to inform\n// you why the breakpoints you have already set are not being triggered. Have a great day!\n//\n\nBaseVector.prototype.get = function baseVectorGet<T extends DataType>(this: BaseVector<T>, index: number): T['TValue'] | null {\n    return getVisitor.visit(this, index);\n};\n\nBaseVector.prototype.set = function baseVectorSet<T extends DataType>(this: BaseVector<T>, index: number, value: T['TValue'] | null): void {\n    return setVisitor.visit(this, index, value);\n};\n\nBaseVector.prototype.indexOf = function baseVectorIndexOf<T extends DataType>(this: BaseVector<T>, value: T['TValue'] | null, fromIndex?: number): number {\n    return indexOfVisitor.visit(this, value, fromIndex);\n};\n\nBaseVector.prototype.toArray = function baseVectorToArray<T extends DataType>(this: BaseVector<T>): T['TArray'] {\n    return toArrayVisitor.visit(this);\n};\n\nBaseVector.prototype.getByteWidth = function baseVectorGetByteWidth<T extends DataType>(this: BaseVector<T>): number {\n    return byteWidthVisitor.visit(this.type);\n};\n\nBaseVector.prototype[Symbol.iterator] = function baseVectorSymbolIterator<T extends DataType>(this: BaseVector<T>): IterableIterator<T['TValue'] | null> {\n    return iteratorVisitor.visit(this);\n};\n\n(BaseVector.prototype as any)._bindDataAccessors = bindBaseVectorDataAccessors;\n\n// Perf: bind and assign the operator Visitor methods to each of the Vector subclasses for each Type\n(Object.keys(Type) as any[])\n    .map((T: any) => Type[T] as any)\n    .filter((T: any): T is Type => typeof T === 'number')\n    .filter((typeId) => typeId !== Type.NONE)\n    .forEach((typeId) => {\n        const VectorCtor = getVectorConstructor.visit(typeId);\n        VectorCtor.prototype['get'] = fn.partial1(getVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['set'] = fn.partial2(setVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['indexOf'] = fn.partial2(indexOfVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['toArray'] = fn.partial0(toArrayVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['getByteWidth'] = partialType0(byteWidthVisitor.getVisitFn(typeId));\n        VectorCtor.prototype[Symbol.iterator] = fn.partial0(iteratorVisitor.getVisitFn(typeId));\n    });\n\n/** @ignore */\nfunction partialType0<T extends Vector>(visit: (node: T['type']) => any) {\n    return function(this: T) { return visit(this.type); };\n}\n\n/** @ignore */\nfunction wrapNullableGet<T extends DataType, V extends Vector<T>, F extends (i: number) => any>(fn: F): (...args: Parameters<F>) => ReturnType<F> {\n    return function(this: V, i: number) { return this.isValid(i) ? fn.call(this, i) : null; };\n}\n\n/** @ignore */\nfunction wrapNullableSet<T extends DataType, V extends BaseVector<T>, F extends (i: number, a: any) => void>(fn: F): (...args: Parameters<F>) => void {\n    return function(this: V, i: number, a: any) {\n        if (setBool(this.nullBitmap, this.offset + i, !(a === null || a === undefined))) {\n            fn.call(this, i, a);\n        }\n    };\n}\n\n/** @ignore */\nfunction bindBaseVectorDataAccessors<T extends DataType>(this: BaseVector<T>) {\n    const nullBitmap = this.nullBitmap;\n    if (nullBitmap && nullBitmap.byteLength > 0) {\n        this.get = wrapNullableGet(this.get);\n        this.set = wrapNullableSet(this.set);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Column } from './column';\nimport { Schema, Field } from './schema';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from './recordbatch';\nimport { DataFrame } from './compute/dataframe';\nimport { RecordBatchReader } from './ipc/reader';\nimport { DataType, RowLike, Struct } from './type';\nimport { selectColumnArgs, selectArgs } from './util/args';\nimport { Clonable, Sliceable, Applicative } from './vector';\nimport { isPromise, isIterable, isAsyncIterable } from './util/compat';\nimport { RecordBatchFileWriter, RecordBatchStreamWriter } from './ipc/writer';\nimport { distributeColumnsIntoRecordBatches, distributeVectorsIntoRecordBatches } from './util/recordbatch';\nimport { Vector, Chunked, StructVector, VectorBuilderOptions, VectorBuilderOptionsAsync } from './vector/index';\n\ntype VectorMap = { [key: string]: Vector };\ntype Fields<T extends { [key: string]: DataType }> = (keyof T)[] | Field<T[keyof T]>[];\ntype ChildData<T extends { [key: string]: DataType }> = Data<T[keyof T]>[] | Vector<T[keyof T]>[];\ntype Columns<T extends { [key: string]: DataType }> = Column<T[keyof T]>[] | Column<T[keyof T]>[][];\n\nexport interface Table<T extends { [key: string]: DataType } = any> {\n\n    get(index: number): Struct<T>['TValue'];\n    [Symbol.iterator](): IterableIterator<RowLike<T>>;\n\n    slice(begin?: number, end?: number): Table<T>;\n    concat(...others: Vector<Struct<T>>[]): Table<T>;\n    clone(chunks?: RecordBatch<T>[], offsets?: Uint32Array): Table<T>;\n\n    scan(next: import('./compute/dataframe').NextFunc, bind?: import('./compute/dataframe').BindFunc): void;\n    scanReverse(next: import('./compute/dataframe').NextFunc, bind?: import('./compute/dataframe').BindFunc): void;\n    countBy(name: import('./compute/predicate').Col | string): import('./compute/dataframe').CountByResult;\n    filter(predicate: import('./compute/predicate').Predicate): import('./compute/dataframe').FilteredDataFrame<T>;\n}\n\nexport class Table<T extends { [key: string]: DataType } = any>\n    extends Chunked<Struct<T>>\n    implements DataFrame<T>,\n               Clonable<Table<T>>,\n               Sliceable<Table<T>>,\n               Applicative<Struct<T>, Table<T>> {\n\n    /** @nocollapse */\n    public static empty<T extends { [key: string]: DataType } = {}>(schema = new Schema<T>([])) { return new Table<T>(schema, []); }\n\n    public static from(): Table<{}>;\n    public static from<T extends { [key: string]: DataType } = any>(source: RecordBatchReader<T>): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg0): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg2): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg1): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg3): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg4): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg5): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: PromiseLike<RecordBatchReader<T>>): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptions<Struct<T>, TNull>): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptionsAsync<Struct<T>, TNull>): Promise<Table<T>>;\n    /** @nocollapse */\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(input?: any) {\n\n        if (!input) { return Table.empty(); }\n\n        if (typeof input === 'object') {\n            let table = isIterable(input['values']) ? tableFromIterable<T, TNull>(input)\n                 : isAsyncIterable(input['values']) ? tableFromAsyncIterable<T, TNull>(input)\n                                                    : null;\n            if (table !== null) { return table; }\n        }\n\n        let reader = RecordBatchReader.from<T>(input) as RecordBatchReader<T> | Promise<RecordBatchReader<T>>;\n\n        if (isPromise<RecordBatchReader<T>>(reader)) {\n            return (async () => await Table.from(await reader))();\n        }\n        if (reader.isSync() && (reader = reader.open())) {\n            return !reader.schema ? Table.empty() : new Table<T>(reader.schema, [...reader]);\n        }\n        return (async (opening) => {\n            const reader = await opening;\n            const schema = reader.schema;\n            const batches: RecordBatch[] = [];\n            if (schema) {\n                for await (let batch of reader) {\n                    batches.push(batch);\n                }\n                return new Table<T>(schema, batches);\n            }\n            return Table.empty();\n        })(reader.open());\n    }\n\n    /** @nocollapse */\n    public static async fromAsync<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArgs): Promise<Table<T>> {\n        return await Table.from<T>(source as any);\n    }\n\n    /** @nocollapse */\n    public static fromStruct<T extends { [key: string]: DataType } = any>(vector: Vector<Struct<T>>) {\n        return Table.new<T>(vector.data.childData as Data<T[keyof T]>[], vector.type.children);\n    }\n\n    /**\n     * @summary Create a new Table from a collection of Columns or Vectors,\n     * with an optional list of names or Fields.\n     *\n     *\n     * `Table.new` accepts an Object of\n     * Columns or Vectors, where the keys will be used as the field names\n     * for the Schema:\n     * ```ts\n     * const i32s = Int32Vector.from([1, 2, 3]);\n     * const f32s = Float32Vector.from([.1, .2, .3]);\n     * const table = Table.new({ i32: i32s, f32: f32s });\n     * assert(table.schema.fields[0].name === 'i32');\n     * ```\n     *\n     * It also accepts a a list of Vectors with an optional list of names or\n     * Fields for the resulting Schema. If the list is omitted or a name is\n     * missing, the numeric index of each Vector will be used as the name:\n     * ```ts\n     * const i32s = Int32Vector.from([1, 2, 3]);\n     * const f32s = Float32Vector.from([.1, .2, .3]);\n     * const table = Table.new([i32s, f32s], ['i32']);\n     * assert(table.schema.fields[0].name === 'i32');\n     * assert(table.schema.fields[1].name === '1');\n     * ```\n     *\n     * If the supplied arguments are Columns, `Table.new` will infer the Schema\n     * from the Columns:\n     * ```ts\n     * const i32s = Column.new('i32', Int32Vector.from([1, 2, 3]));\n     * const f32s = Column.new('f32', Float32Vector.from([.1, .2, .3]));\n     * const table = Table.new(i32s, f32s);\n     * assert(table.schema.fields[0].name === 'i32');\n     * assert(table.schema.fields[1].name === 'f32');\n     * ```\n     *\n     * If the supplied Vector or Column lengths are unequal, `Table.new` will\n     * extend the lengths of the shorter Columns, allocating additional bytes\n     * to represent the additional null slots. The memory required to allocate\n     * these additional bitmaps can be computed as:\n     * ```ts\n     * let additionalBytes = 0;\n     * for (let vec in shorter_vectors) {\n     *     additionalBytes += (((longestLength - vec.length) + 63) & ~63) >> 3;\n     * }\n     * ```\n     *\n     * For example, an additional null bitmap for one million null values would require\n     * 125,000 bytes (`((1e6 + 63) & ~63) >> 3`), or approx. `0.11MiB`\n     */\n    public static new<T extends { [key: string]: DataType } = any>(...columns: Columns<T>): Table<T>;\n    public static new<T extends VectorMap = any>(children: T): Table<{ [P in keyof T]: T[P]['type'] }>;\n    public static new<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): Table<T>;\n    /** @nocollapse */\n    public static new(...cols: any[]) {\n        return new Table(...distributeColumnsIntoRecordBatches(selectColumnArgs(cols)));\n    }\n\n    constructor(batches: RecordBatch<T>[]);\n    constructor(...batches: RecordBatch<T>[]);\n    constructor(schema: Schema<T>, batches: RecordBatch<T>[]);\n    constructor(schema: Schema<T>, ...batches: RecordBatch<T>[]);\n    constructor(...args: any[]) {\n\n        let schema: Schema<T> = null!;\n\n        if (args[0] instanceof Schema) { schema = args.shift(); }\n\n        let chunks = selectArgs<RecordBatch<T>>(RecordBatch, args);\n\n        if (!schema && !(schema = chunks[0] && chunks[0].schema)) {\n            throw new TypeError('Table must be initialized with a Schema or at least one RecordBatch');\n        }\n\n        chunks[0] || (chunks[0] = new _InternalEmptyPlaceholderRecordBatch(schema));\n\n        super(new Struct(schema.fields), chunks);\n\n        this._schema = schema;\n        this._chunks = chunks;\n    }\n\n    protected _schema: Schema<T>;\n    // List of inner RecordBatches\n    protected _chunks: RecordBatch<T>[];\n    protected _children?: Column<T[keyof T]>[];\n\n    public get schema() { return this._schema; }\n    public get length() { return this._length; }\n    public get chunks() { return this._chunks; }\n    public get numCols() { return this._numChildren; }\n\n    public clone(chunks = this._chunks) {\n        return new Table<T>(this._schema, chunks);\n    }\n\n    public getColumn<R extends keyof T>(name: R): Column<T[R]> {\n        return this.getColumnAt(this.getColumnIndex(name)) as Column<T[R]>;\n    }\n    public getColumnAt<R extends DataType = any>(index: number): Column<R> | null {\n        return this.getChildAt(index);\n    }\n    public getColumnIndex<R extends keyof T>(name: R) {\n        return this._schema.fields.findIndex((f) => f.name === name);\n    }\n    public getChildAt<R extends DataType = any>(index: number): Column<R> | null {\n        if (index < 0 || index >= this.numChildren) { return null; }\n        let field: Field<R>, child: Column<R>;\n        const fields = (this._schema as Schema<any>).fields;\n        const columns = this._children || (this._children = []) as Column[];\n        if (child = columns[index]) { return child as Column<R>; }\n        if (field = fields[index]) {\n            const chunks = this._chunks\n                .map((chunk) => chunk.getChildAt<R>(index))\n                .filter((vec): vec is Vector<R> => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Column<R>(field, chunks));\n            }\n        }\n        return null;\n    }\n\n    // @ts-ignore\n    public serialize(encoding = 'binary', stream = true) {\n        const Writer = !stream\n            ? RecordBatchFileWriter\n            : RecordBatchStreamWriter;\n        return Writer.writeAll(this).toUint8Array(true);\n    }\n    public count(): number {\n        return this._length;\n    }\n    public select<K extends keyof T = any>(...columnNames: K[]) {\n        const nameToIndex = this._schema.fields.reduce((m, f, i) => m.set(f.name as K, i), new Map<K, number>());\n        return this.selectAt(...columnNames.map((columnName) => nameToIndex.get(columnName)!).filter((x) => x > -1));\n    }\n    public selectAt<K extends T[keyof T] = any>(...columnIndices: number[]) {\n        const schema = this._schema.selectAt<K>(...columnIndices);\n        return new Table(schema, this._chunks.map(({ length, data: { childData } }) => {\n            return new RecordBatch(schema, length, columnIndices.map((i) => childData[i]).filter(Boolean));\n        }));\n    }\n    public assign<R extends { [key: string]: DataType } = any>(other: Table<R>) {\n\n        const fields = this._schema.fields;\n        const [indices, oldToNew] = other.schema.fields.reduce((memo, f2, newIdx) => {\n            const [indices, oldToNew] = memo;\n            const i = fields.findIndex((f) => f.name === f2.name);\n            ~i ? (oldToNew[i] = newIdx) : indices.push(newIdx);\n            return memo;\n        }, [[], []] as number[][]);\n\n        const schema = this._schema.assign(other.schema);\n        const columns = [\n            ...fields.map((_f, i, _fs, j = oldToNew[i]) =>\n                (j === undefined ? this.getColumnAt(i) : other.getColumnAt(j))!),\n            ...indices.map((i) => other.getColumnAt(i)!)\n        ].filter(Boolean) as Column<(T & R)[keyof T | keyof R]>[];\n\n        return new Table<T & R>(...distributeVectorsIntoRecordBatches<any>(schema, columns));\n    }\n}\n\nfunction tableFromIterable<T extends { [key: string]: DataType } = any, TNull = any>(input: VectorBuilderOptions<Struct<T>, TNull>) {\n    const { type } = input;\n    if (type instanceof Struct) {\n        return Table.fromStruct(StructVector.from(input as VectorBuilderOptions<Struct<T>, TNull>));\n    }\n    return null;\n}\n\nfunction tableFromAsyncIterable<T extends { [key: string]: DataType } = any, TNull = any>(input: VectorBuilderOptionsAsync<Struct<T>, TNull>) {\n    const { type } = input;\n    if (type instanceof Struct) {\n        return StructVector.from(input as VectorBuilderOptionsAsync<Struct<T>, TNull>).then((vector) => Table.fromStruct(vector));\n    }\n    return null;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Table } from './table';\nimport { Vector } from './vector';\nimport { Visitor } from './visitor';\nimport { Schema, Field } from './schema';\nimport { isIterable } from './util/compat';\nimport { Chunked } from './vector/chunked';\nimport { selectFieldArgs } from './util/args';\nimport { DataType, Struct, Dictionary } from './type';\nimport { ensureSameLengthData } from './util/recordbatch';\nimport { Clonable, Sliceable, Applicative } from './vector';\nimport { StructVector, VectorBuilderOptions, VectorBuilderOptionsAsync } from './vector/index';\n\ntype VectorMap = { [key: string]: Vector };\ntype Fields<T extends { [key: string]: DataType }> = (keyof T)[] | Field<T[keyof T]>[];\ntype ChildData<T extends { [key: string]: DataType }> = (Data<T[keyof T]> | Vector<T[keyof T]>)[];\n\nexport interface RecordBatch<T extends { [key: string]: DataType } = any> {\n    concat(...others: Vector<Struct<T>>[]): Table<T>;\n    slice(begin?: number, end?: number): RecordBatch<T>;\n    clone(data: Data<Struct<T>>, children?: Vector[]): RecordBatch<T>;\n}\n\nexport class RecordBatch<T extends { [key: string]: DataType } = any>\n    extends StructVector<T>\n    implements Clonable<RecordBatch<T>>,\n               Sliceable<RecordBatch<T>>,\n               Applicative<Struct<T>, Table<T>> {\n\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptions<Struct<T>, TNull>): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptionsAsync<Struct<T>, TNull>): Promise<Table<T>>;\n    /** @nocollapse */\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptions<Struct<T>, TNull> | VectorBuilderOptionsAsync<Struct<T>, TNull>) {\n        if (isIterable<(Struct<T>)['TValue'] | TNull>(options['values'])) {\n            return Table.from(options as VectorBuilderOptions<Struct<T>, TNull>);\n        }\n        return Table.from(options as VectorBuilderOptionsAsync<Struct<T>, TNull>);\n    }\n\n    public static new<T extends VectorMap = any>(children: T): RecordBatch<{ [P in keyof T]: T[P]['type'] }>;\n    public static new<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): RecordBatch<T>;\n    /** @nocollapse */\n    public static new<T extends { [key: string]: DataType } = any>(...args: any[]) {\n        const [fs, xs] = selectFieldArgs<T>(args);\n        const vs = xs.filter((x): x is Vector<T[keyof T]> => x instanceof Vector);\n        return new RecordBatch(...ensureSameLengthData(new Schema<T>(fs), vs.map((x) => x.data)));\n    }\n\n    protected _schema: Schema;\n    protected _dictionaries?: Map<number, Vector>;\n\n    constructor(schema: Schema<T>, length: number, children: (Data | Vector)[]);\n    constructor(schema: Schema<T>, data: Data<Struct<T>>, children?: Vector[]);\n    constructor(...args: any[]) {\n        let data: Data<Struct<T>>;\n        let schema = args[0] as Schema<T>;\n        let children: Vector[] | undefined;\n        if (args[1] instanceof Data) {\n            [, data, children] = (args as [any, Data<Struct<T>>, Vector<T[keyof T]>[]?]);\n        } else {\n            const fields = schema.fields as Field<T[keyof T]>[];\n            const [, length, childData] = args as [any, number, Data<T[keyof T]>[]];\n            data = Data.Struct(new Struct<T>(fields), 0, length, 0, null, childData);\n        }\n        super(data, children);\n        this._schema = schema;\n    }\n\n    public clone(data: Data<Struct<T>>, children = this._children) {\n        return new RecordBatch<T>(this._schema, data, children);\n    }\n\n    public concat(...others: Vector<Struct<T>>[]): Table<T> {\n        const schema = this._schema, chunks = Chunked.flatten(this, ...others);\n        return new Table(schema, chunks.map(({ data }) => new RecordBatch(schema, data)));\n    }\n\n    public get schema() { return this._schema; }\n    public get numCols() { return this._schema.fields.length; }\n    public get dictionaries() {\n        return this._dictionaries || (this._dictionaries = DictionaryCollector.collect(this));\n    }\n\n    public select<K extends keyof T = any>(...columnNames: K[]) {\n        const nameToIndex = this._schema.fields.reduce((m, f, i) => m.set(f.name as K, i), new Map<K, number>());\n        return this.selectAt(...columnNames.map((columnName) => nameToIndex.get(columnName)!).filter((x) => x > -1));\n    }\n    public selectAt<K extends T[keyof T] = any>(...columnIndices: number[]) {\n        const schema = this._schema.selectAt(...columnIndices);\n        const childData = columnIndices.map((i) => this.data.childData[i]).filter(Boolean);\n        return new RecordBatch<{ [key: string]: K }>(schema, this.length, childData);\n    }\n}\n\n/**\n * An internal class used by the `RecordBatchReader` and `RecordBatchWriter`\n * implementations to differentiate between a stream with valid zero-length\n * RecordBatches, and a stream with a Schema message, but no RecordBatches.\n * @see https://github.com/apache/arrow/pull/4373\n * @ignore\n * @private\n */\n/* tslint:disable:class-name */\nexport class _InternalEmptyPlaceholderRecordBatch<T extends { [key: string]: DataType } = any> extends RecordBatch<T> {\n    constructor(schema: Schema<T>) {\n        super(schema, 0, schema.fields.map((f) => Data.new(f.type, 0, 0, 0)));\n    }\n}\n\n/** @ignore */\nclass DictionaryCollector extends Visitor {\n    public dictionaries = new Map<number, Vector>();\n    public static collect<T extends RecordBatch>(batch: T) {\n        return new DictionaryCollector().visit(\n            batch.data, new Struct(batch.schema.fields)\n        ).dictionaries;\n    }\n    public visit(data: Data, type: DataType) {\n        if (DataType.isDictionary(type)) {\n            return this.visitDictionary(data, type);\n        } else {\n            data.childData.forEach((child, i) =>\n                this.visit(child, type.children[i].type));\n        }\n        return this;\n    }\n    public visitDictionary(data: Data, type: Dictionary) {\n        const dictionary = data.dictionary;\n        if (dictionary && dictionary.length > 0) {\n            this.dictionaries.set(type.id, dictionary);\n        }\n        return this;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { MessageHeader } from '../enum';\nimport { Footer } from './metadata/file';\nimport { Schema, Field } from '../schema';\nimport streamAdapters from '../io/adapters';\nimport { Message } from './metadata/message';\nimport * as metadata from './metadata/message';\nimport { ArrayBufferViewInput } from '../util/buffer';\nimport { ByteStream, AsyncByteStream } from '../io/stream';\nimport { RandomAccessFile, AsyncRandomAccessFile } from '../io/file';\nimport { VectorLoader, JSONVectorLoader } from '../visitor/vectorloader';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from '../recordbatch';\nimport {\n    FileHandle,\n    ArrowJSONLike,\n    ITERATOR_DONE,\n    ReadableInterop,\n} from '../io/interfaces';\nimport {\n    MessageReader, AsyncMessageReader, JSONMessageReader,\n    checkForMagicArrowString, magicLength, magicAndPadding, magicX2AndPadding\n} from './message';\nimport {\n    isPromise,\n    isIterable, isAsyncIterable,\n    isIteratorResult, isArrowJSON,\n    isFileHandle, isFetchResponse,\n    isReadableDOMStream, isReadableNodeStream\n} from '../util/compat';\n\n/** @ignore */ export type FromArg0 = ArrowJSONLike;\n/** @ignore */ export type FromArg1 = PromiseLike<ArrowJSONLike>;\n/** @ignore */ export type FromArg2 = Iterable<ArrayBufferViewInput> | ArrayBufferViewInput;\n/** @ignore */ export type FromArg3 = PromiseLike<Iterable<ArrayBufferViewInput> | ArrayBufferViewInput>;\n/** @ignore */ export type FromArg4 = Response | NodeJS.ReadableStream | ReadableStream<ArrayBufferViewInput> | AsyncIterable<ArrayBufferViewInput>;\n/** @ignore */ export type FromArg5 = FileHandle | PromiseLike<FileHandle> | PromiseLike<FromArg4>;\n/** @ignore */ export type FromArgs = FromArg0 | FromArg1 | FromArg2 | FromArg3 | FromArg4 | FromArg5;\n\n/** @ignore */ type OpenOptions = { autoDestroy?: boolean; };\n/** @ignore */ type RecordBatchReaders<T extends { [key: string]: DataType } = any> = RecordBatchFileReader<T> | RecordBatchStreamReader<T>;\n/** @ignore */ type AsyncRecordBatchReaders<T extends { [key: string]: DataType } = any> = AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>;\n/** @ignore */ type RecordBatchFileReaders<T extends { [key: string]: DataType } = any> = RecordBatchFileReader<T> | AsyncRecordBatchFileReader<T>;\n/** @ignore */ type RecordBatchStreamReaders<T extends { [key: string]: DataType } = any> = RecordBatchStreamReader<T> | AsyncRecordBatchStreamReader<T>;\n\nexport class RecordBatchReader<T extends { [key: string]: DataType } = any> extends ReadableInterop<RecordBatch<T>> {\n\n    protected _impl: RecordBatchReaderImpls<T>;\n    protected constructor(impl: RecordBatchReaderImpls<T>) {\n        super();\n        this._impl = impl;\n    }\n\n    public get closed() { return this._impl.closed; }\n    public get schema() { return this._impl.schema; }\n    public get autoDestroy() { return this._impl.autoDestroy; }\n    public get dictionaries() { return this._impl.dictionaries; }\n    public get numDictionaries() { return this._impl.numDictionaries; }\n    public get numRecordBatches() { return this._impl.numRecordBatches; }\n    public get footer() { return this._impl.isFile() ? this._impl.footer : null; }\n\n    public isSync(): this is RecordBatchReaders<T> { return this._impl.isSync(); }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return this._impl.isAsync(); }\n    public isFile(): this is RecordBatchFileReaders<T> { return this._impl.isFile(); }\n    public isStream(): this is RecordBatchStreamReaders<T> { return this._impl.isStream(); }\n\n    public next() {\n        return this._impl.next();\n    }\n    public throw(value?: any) {\n        return this._impl.throw(value);\n    }\n    public return(value?: any) {\n        return this._impl.return(value);\n    }\n    public cancel() {\n        return this._impl.cancel();\n    }\n    public reset(schema?: Schema<T> | null): this {\n        this._impl.reset(schema);\n        this._DOMStream = undefined;\n        this._nodeStream = undefined;\n        return this;\n    }\n    public open(options?: OpenOptions) {\n        const opening = this._impl.open(options);\n        return isPromise(opening) ? opening.then(() => this) : this;\n    }\n    public readRecordBatch(index: number): RecordBatch<T> | null | Promise<RecordBatch<T> | null> {\n        return this._impl.isFile() ? this._impl.readRecordBatch(index) : null;\n    }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> {\n        return (<IterableIterator<RecordBatch<T>>> this._impl)[Symbol.iterator]();\n    }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> {\n        return (<AsyncIterableIterator<RecordBatch<T>>> this._impl)[Symbol.asyncIterator]();\n    }\n    public toDOMStream() {\n        return streamAdapters.toDOMStream<RecordBatch<T>>(\n            (this.isSync()\n                ? { [Symbol.iterator]: () => this } as Iterable<RecordBatch<T>>\n                : { [Symbol.asyncIterator]: () => this } as AsyncIterable<RecordBatch<T>>));\n    }\n    public toNodeStream() {\n        return streamAdapters.toNodeStream<RecordBatch<T>>(\n            (this.isSync()\n                ? { [Symbol.iterator]: () => this } as Iterable<RecordBatch<T>>\n                : { [Symbol.asyncIterator]: () => this } as AsyncIterable<RecordBatch<T>>),\n            { objectMode: true });\n    }\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode(options?: import('stream').DuplexOptions & { autoDestroy: boolean }): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    public static throughDOM<T extends { [key: string]: DataType }>(\n        // @ts-ignore\n        writableStrategy?: ByteLengthQueuingStrategy,\n        // @ts-ignore\n        readableStrategy?: { autoDestroy: boolean }\n    ): { writable: WritableStream<Uint8Array>, readable: ReadableStream<RecordBatch<T>> } {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    public static from<T extends RecordBatchReader>(source: T): T;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg0): RecordBatchStreamReader<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg1): Promise<RecordBatchStreamReader<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg2): RecordBatchFileReader<T> | RecordBatchStreamReader<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg3): Promise<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg4): Promise<RecordBatchFileReader<T> | AsyncRecordBatchReaders<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg5): Promise<AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>>;\n    /** @nocollapse */\n    public static from<T extends { [key: string]: DataType } = any>(source: any) {\n        if (source instanceof RecordBatchReader) {\n            return source;\n        } else if (isArrowJSON(source)) {\n            return fromArrowJSON<T>(source);\n        } else if (isFileHandle(source)) {\n            return fromFileHandle<T>(source);\n        } else if (isPromise<any>(source)) {\n            return (async () => await RecordBatchReader.from<any>(await source))();\n        } else if (isFetchResponse(source) || isReadableDOMStream(source) || isReadableNodeStream(source) || isAsyncIterable(source)) {\n            return fromAsyncByteStream<T>(new AsyncByteStream(source));\n        }\n        return fromByteStream<T>(new ByteStream(source));\n    }\n\n    public static readAll<T extends RecordBatchReader>(source: T): T extends RecordBatchReaders ? IterableIterator<T> : AsyncIterableIterator<T>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg0): IterableIterator<RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg1): AsyncIterableIterator<RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg2): IterableIterator<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg3): AsyncIterableIterator<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg4): AsyncIterableIterator<RecordBatchFileReader<T> | AsyncRecordBatchReaders<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg5): AsyncIterableIterator<AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>>;\n    /** @nocollapse */\n    public static readAll<T extends { [key: string]: DataType } = any>(source: any) {\n        if (source instanceof RecordBatchReader) {\n            return source.isSync() ? readAllSync(source) : readAllAsync(source as AsyncRecordBatchReaders<T>);\n        } else if (isArrowJSON(source) || ArrayBuffer.isView(source) || isIterable<ArrayBufferViewInput>(source) || isIteratorResult(source)) {\n            return readAllSync<T>(source) as IterableIterator<RecordBatchReaders<T>>;\n        }\n        return readAllAsync<T>(source) as AsyncIterableIterator<RecordBatchReaders<T> | AsyncRecordBatchReaders<T>>;\n    }\n}\n\n//\n// Since TS is a structural type system, we define the following subclass stubs\n// so that concrete types exist to associate with with the interfaces below.\n//\n// The implementation for each RecordBatchReader is hidden away in the set of\n// `RecordBatchReaderImpl` classes in the second half of this file. This allows\n// us to export a single RecordBatchReader class, and swap out the impl based\n// on the io primitives or underlying arrow (JSON, file, or stream) at runtime.\n//\n// Async/await makes our job a bit harder, since it forces everything to be\n// either fully sync or fully async. This is why the logic for the reader impls\n// has been duplicated into both sync and async variants. Since the RBR\n// delegates to its impl, an RBR with an AsyncRecordBatchFileReaderImpl for\n// example will return async/await-friendly Promises, but one with a (sync)\n// RecordBatchStreamReaderImpl will always return values. Nothing should be\n// different about their logic, aside from the async handling. This is also why\n// this code looks highly structured, as it should be nearly identical and easy\n// to follow.\n//\n\n/** @ignore */\nexport class RecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    constructor(protected _impl: RecordBatchStreamReaderImpl<T>) { super (_impl); }\n    public [Symbol.iterator]() { return (this._impl as IterableIterator<RecordBatch<T>>)[Symbol.iterator](); }\n    public async *[Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> { yield* this[Symbol.iterator](); }\n}\n/** @ignore */\nexport class AsyncRecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    constructor(protected _impl: AsyncRecordBatchStreamReaderImpl<T>) { super (_impl); }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> { throw new Error(`AsyncRecordBatchStreamReader is not Iterable`); }\n    public [Symbol.asyncIterator]() { return (this._impl as AsyncIterableIterator<RecordBatch<T>>)[Symbol.asyncIterator](); }\n}\n/** @ignore */\nexport class RecordBatchFileReader<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReader<T> {\n    constructor(protected _impl: RecordBatchFileReaderImpl<T>) { super (_impl); }\n}\n/** @ignore */\nexport class AsyncRecordBatchFileReader<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReader<T> {\n    constructor(protected _impl: AsyncRecordBatchFileReaderImpl<T>) { super (_impl); }\n}\n\n//\n// Now override the return types for each sync/async RecordBatchReader variant\n//\n\n/** @ignore */\nexport interface RecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    open(options?: OpenOptions | undefined): this;\n    cancel(): void;\n    throw(value?: any): IteratorResult<any>;\n    return(value?: any): IteratorResult<any>;\n    next(value?: any): IteratorResult<RecordBatch<T>>;\n}\n\n/** @ignore */\nexport interface AsyncRecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    open(options?: OpenOptions | undefined): Promise<this>;\n    cancel(): Promise<void>;\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(value?: any): Promise<IteratorResult<RecordBatch<T>>>;\n}\n\n/** @ignore */\nexport interface RecordBatchFileReader<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReader<T> {\n    footer: Footer;\n    readRecordBatch(index: number): RecordBatch<T> | null;\n}\n\n/** @ignore */\nexport interface AsyncRecordBatchFileReader<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReader<T> {\n    footer: Footer;\n    readRecordBatch(index: number): Promise<RecordBatch<T> | null>;\n}\n\n/** @ignore */\ntype RecordBatchReaderImpls<T extends { [key: string]: DataType } = any> =\n     RecordBatchJSONReaderImpl<T> |\n     RecordBatchFileReaderImpl<T> |\n     RecordBatchStreamReaderImpl<T> |\n     AsyncRecordBatchFileReaderImpl<T> |\n     AsyncRecordBatchStreamReaderImpl<T>;\n\n/** @ignore */\ninterface RecordBatchReaderImpl<T extends { [key: string]: DataType } = any> {\n\n    closed: boolean;\n    schema: Schema<T>;\n    autoDestroy: boolean;\n    dictionaries: Map<number, Vector>;\n\n    isFile(): this is RecordBatchFileReaders<T>;\n    isStream(): this is RecordBatchStreamReaders<T>;\n    isSync(): this is RecordBatchReaders<T>;\n    isAsync(): this is AsyncRecordBatchReaders<T>;\n\n    reset(schema?: Schema<T> | null): this;\n}\n\n/** @ignore */\ninterface RecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> {\n\n    open(options?: OpenOptions): this;\n    cancel(): void;\n\n    throw(value?: any): IteratorResult<any>;\n    return(value?: any): IteratorResult<any>;\n    next(value?: any): IteratorResult<RecordBatch<T>>;\n\n    [Symbol.iterator](): IterableIterator<RecordBatch<T>>;\n}\n\n/** @ignore */\ninterface AsyncRecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> {\n\n    open(options?: OpenOptions): Promise<this>;\n    cancel(): Promise<void>;\n\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(value?: any): Promise<IteratorResult<RecordBatch<T>>>;\n\n    [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>>;\n}\n\n/** @ignore */\ninterface RecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReaderImpl<T> {\n    readRecordBatch(index: number): RecordBatch<T> | null;\n}\n\n/** @ignore */\ninterface AsyncRecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReaderImpl<T> {\n    readRecordBatch(index: number): Promise<RecordBatch<T> | null>;\n}\n\n/** @ignore */\nabstract class RecordBatchReaderImpl<T extends { [key: string]: DataType } = any> implements RecordBatchReaderImpl<T> {\n\n    // @ts-ignore\n    public schema: Schema;\n    public closed = false;\n    public autoDestroy = true;\n    public dictionaries: Map<number, Vector>;\n\n    protected _dictionaryIndex = 0;\n    protected _recordBatchIndex = 0;\n    public get numDictionaries() { return this._dictionaryIndex; }\n    public get numRecordBatches() { return this._recordBatchIndex; }\n\n    constructor(dictionaries = new Map<number, Vector>()) {\n        this.dictionaries = dictionaries;\n    }\n\n    public isSync(): this is RecordBatchReaders<T> { return false; }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return false; }\n    public isFile(): this is RecordBatchFileReaders<T> { return false; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return false; }\n\n    public reset(schema?: Schema<T> | null) {\n        this._dictionaryIndex = 0;\n        this._recordBatchIndex = 0;\n        this.schema = <any> schema;\n        this.dictionaries = new Map();\n        return this;\n    }\n\n    protected _loadRecordBatch(header: metadata.RecordBatch, body: any) {\n        return new RecordBatch<T>(this.schema, header.length, this._loadVectors(header, body, this.schema.fields));\n    }\n    protected _loadDictionaryBatch(header: metadata.DictionaryBatch, body: any) {\n        const { id, isDelta, data } = header;\n        const { dictionaries, schema } = this;\n        const dictionary = dictionaries.get(id);\n        if (isDelta || !dictionary) {\n            const type = schema.dictionaries.get(id)!;\n            return (dictionary && isDelta ? dictionary.concat(\n                Vector.new(this._loadVectors(data, body, [type])[0])) :\n                Vector.new(this._loadVectors(data, body, [type])[0])) as Vector;\n        }\n        return dictionary;\n    }\n    protected _loadVectors(header: metadata.RecordBatch, body: any, types: (Field | DataType)[]) {\n        return new VectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n\n/** @ignore */\nclass RecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> implements IterableIterator<RecordBatch<T>> {\n\n    protected _reader: MessageReader;\n    protected _handle: ByteStream | ArrowJSONLike;\n\n    constructor(source: ByteStream | ArrowJSONLike, dictionaries?: Map<number, Vector>) {\n        super(dictionaries);\n        this._reader = !isArrowJSON(source)\n            ? new MessageReader(this._handle = source)\n            : new JSONMessageReader(this._handle = source);\n    }\n\n    public isSync(): this is RecordBatchReaders<T> { return true; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return true; }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> {\n        return this as IterableIterator<RecordBatch<T>>;\n    }\n    public cancel() {\n        if (!this.closed && (this.closed = true)) {\n            this.reset()._reader.return();\n            this._reader = <any> null;\n            this.dictionaries = <any> null;\n        }\n    }\n    public open(options?: OpenOptions) {\n        if (!this.closed) {\n            this.autoDestroy = shouldAutoDestroy(this, options);\n            if (!(this.schema || (this.schema = this._reader.readSchema()!))) {\n                this.cancel();\n            }\n        }\n        return this;\n    }\n    public throw(value?: any): IteratorResult<any> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.throw(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public return(value?: any): IteratorResult<any> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.return(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public next(): IteratorResult<RecordBatch<T>> {\n        if (this.closed) { return ITERATOR_DONE; }\n        let message: Message | null, { _reader: reader } = this;\n        while (message = this._readNextMessageAndValidate()) {\n            if (message.isSchema()) {\n                this.reset(message.header());\n            } else if (message.isRecordBatch()) {\n                this._recordBatchIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return { done: false, value: recordBatch };\n            } else if (message.isDictionaryBatch()) {\n                this._dictionaryIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n        if (this.schema && this._recordBatchIndex === 0) {\n            this._recordBatchIndex++;\n            return { done: false, value: new _InternalEmptyPlaceholderRecordBatch<T>(this.schema) };\n        }\n        return this.return();\n    }\n    protected _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null) {\n        return this._reader.readMessage<T>(type);\n    }\n}\n\n/** @ignore */\nclass AsyncRecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> implements AsyncIterableIterator<RecordBatch<T>> {\n\n    protected _handle: AsyncByteStream;\n    protected _reader: AsyncMessageReader;\n\n    constructor(source: AsyncByteStream, dictionaries?: Map<number, Vector>) {\n        super(dictionaries);\n        this._reader = new AsyncMessageReader(this._handle = source);\n    }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return true; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return true; }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> {\n        return this as AsyncIterableIterator<RecordBatch<T>>;\n    }\n    public async cancel() {\n        if (!this.closed && (this.closed = true)) {\n            await this.reset()._reader.return();\n            this._reader = <any> null;\n            this.dictionaries = <any> null;\n        }\n    }\n    public async open(options?: OpenOptions) {\n        if (!this.closed) {\n            this.autoDestroy = shouldAutoDestroy(this, options);\n            if (!(this.schema || (this.schema = (await this._reader.readSchema())!))) {\n                await this.cancel();\n            }\n        }\n        return this;\n    }\n    public async throw(value?: any): Promise<IteratorResult<any>> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return await this.reset()._reader.throw(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public async return(value?: any): Promise<IteratorResult<any>> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return await this.reset()._reader.return(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public async next() {\n        if (this.closed) { return ITERATOR_DONE; }\n        let message: Message | null, { _reader: reader } = this;\n        while (message = await this._readNextMessageAndValidate()) {\n            if (message.isSchema()) {\n                await this.reset(message.header());\n            } else if (message.isRecordBatch()) {\n                this._recordBatchIndex++;\n                const header = message.header();\n                const buffer = await reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return { done: false, value: recordBatch };\n            } else if (message.isDictionaryBatch()) {\n                this._dictionaryIndex++;\n                const header = message.header();\n                const buffer = await reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n        if (this.schema && this._recordBatchIndex === 0) {\n            this._recordBatchIndex++;\n            return { done: false, value: new _InternalEmptyPlaceholderRecordBatch<T>(this.schema) };\n        }\n        return await this.return();\n    }\n    protected async _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null) {\n        return await this._reader.readMessage<T>(type);\n    }\n}\n\n/** @ignore */\nclass RecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReaderImpl<T> {\n\n    // @ts-ignore\n    protected _footer?: Footer;\n    // @ts-ignore\n    protected _handle: RandomAccessFile;\n    public get footer() { return this._footer!; }\n    public get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    public get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n\n    constructor(source: RandomAccessFile | ArrayBufferViewInput, dictionaries?: Map<number, Vector>) {\n        super(source instanceof RandomAccessFile ? source : new RandomAccessFile(source), dictionaries);\n    }\n    public isSync(): this is RecordBatchReaders<T> { return true; }\n    public isFile(): this is RecordBatchFileReaders<T> { return true; }\n    public open(options?: OpenOptions) {\n        if (!this.closed && !this._footer) {\n            this.schema = (this._footer = this._readFooter()).schema;\n            for (const block of this._footer.dictionaryBatches()) {\n                block && this._readDictionaryBatch(this._dictionaryIndex++);\n            }\n        }\n        return super.open(options);\n    }\n    public readRecordBatch(index: number) {\n        if (this.closed) { return null; }\n        if (!this._footer) { this.open(); }\n        const block = this._footer && this._footer.getRecordBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(MessageHeader.RecordBatch);\n            if (message && message.isRecordBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return recordBatch;\n            }\n        }\n        return null;\n    }\n    protected _readDictionaryBatch(index: number) {\n        const block = this._footer && this._footer.getDictionaryBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(MessageHeader.DictionaryBatch);\n            if (message && message.isDictionaryBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n    }\n    protected _readFooter() {\n        const { _handle } = this;\n        const offset = _handle.size - magicAndPadding;\n        const length = _handle.readInt32(offset);\n        const buffer = _handle.readAt(offset - length, length);\n        return Footer.decode(buffer);\n    }\n    protected _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null): Message<T> | null {\n        if (!this._footer) { this.open(); }\n        if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n            const block = this._footer && this._footer.getRecordBatch(this._recordBatchIndex);\n            if (block && this._handle.seek(block.offset)) {\n                return this._reader.readMessage(type);\n            }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nclass AsyncRecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReaderImpl<T>\n    implements AsyncRecordBatchFileReaderImpl<T> {\n\n    protected _footer?: Footer;\n    // @ts-ignore\n    protected _handle: AsyncRandomAccessFile;\n    public get footer() { return this._footer!; }\n    public get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    public get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n\n    constructor(source: FileHandle, byteLength?: number, dictionaries?: Map<number, Vector>);\n    constructor(source: FileHandle | AsyncRandomAccessFile, dictionaries?: Map<number, Vector>);\n    constructor(source: FileHandle | AsyncRandomAccessFile, ...rest: any[]) {\n        const byteLength = typeof rest[0] !== 'number' ? <number> rest.shift() : undefined;\n        const dictionaries = rest[0] instanceof Map ? <Map<number, Vector>> rest.shift() : undefined;\n        super(source instanceof AsyncRandomAccessFile ? source : new AsyncRandomAccessFile(source, byteLength), dictionaries);\n    }\n    public isFile(): this is RecordBatchFileReaders<T> { return true; }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return true; }\n    public async open(options?: OpenOptions) {\n        if (!this.closed && !this._footer) {\n            this.schema = (this._footer = await this._readFooter()).schema;\n            for (const block of this._footer.dictionaryBatches()) {\n                block && await this._readDictionaryBatch(this._dictionaryIndex++);\n            }\n        }\n        return await super.open(options);\n    }\n    public async readRecordBatch(index: number) {\n        if (this.closed) { return null; }\n        if (!this._footer) { await this.open(); }\n        const block = this._footer && this._footer.getRecordBatch(index);\n        if (block && (await this._handle.seek(block.offset))) {\n            const message = await this._reader.readMessage(MessageHeader.RecordBatch);\n            if (message && message.isRecordBatch()) {\n                const header = message.header();\n                const buffer = await this._reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return recordBatch;\n            }\n        }\n        return null;\n    }\n    protected async _readDictionaryBatch(index: number) {\n        const block = this._footer && this._footer.getDictionaryBatch(index);\n        if (block && (await this._handle.seek(block.offset))) {\n            const message = await this._reader.readMessage(MessageHeader.DictionaryBatch);\n            if (message && message.isDictionaryBatch()) {\n                const header = message.header();\n                const buffer = await this._reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n    }\n    protected async _readFooter() {\n        const { _handle } = this;\n        _handle._pending && await _handle._pending;\n        const offset = _handle.size - magicAndPadding;\n        const length = await _handle.readInt32(offset);\n        const buffer = await _handle.readAt(offset - length, length);\n        return Footer.decode(buffer);\n    }\n    protected async _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null): Promise<Message<T> | null> {\n        if (!this._footer) { await this.open(); }\n        if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n            const block = this._footer.getRecordBatch(this._recordBatchIndex);\n            if (block && await this._handle.seek(block.offset)) {\n                return await this._reader.readMessage(type);\n            }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nclass RecordBatchJSONReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReaderImpl<T> {\n    constructor(source: ArrowJSONLike, dictionaries?: Map<number, Vector>) {\n        super(source, dictionaries);\n    }\n    protected _loadVectors(header: metadata.RecordBatch, body: any, types: (Field | DataType)[]) {\n        return new JSONVectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n\n//\n// Define some helper functions and static implementations down here. There's\n// a bit of branching in the static methods that can lead to the same routines\n// being executed, so we've broken those out here for readability.\n//\n\n/** @ignore */\nfunction shouldAutoDestroy(self: { autoDestroy: boolean }, options?: OpenOptions) {\n    return options && (typeof options['autoDestroy'] === 'boolean') ? options['autoDestroy'] : self['autoDestroy'];\n}\n\n/** @ignore */\nfunction* readAllSync<T extends { [key: string]: DataType } = any>(source: RecordBatchReaders<T> | FromArg0 | FromArg2) {\n    const reader = RecordBatchReader.from<T>(<any> source) as RecordBatchReaders<T>;\n    try {\n        if (!reader.open({ autoDestroy: false }).closed) {\n            do { yield reader; } while (!(reader.reset().open()).closed);\n        }\n    } finally { reader.cancel(); }\n}\n\n/** @ignore */\nasync function* readAllAsync<T extends { [key: string]: DataType } = any>(source: AsyncRecordBatchReaders<T> | FromArg1 | FromArg3 | FromArg4 | FromArg5) {\n    const reader = await RecordBatchReader.from<T>(<any> source) as RecordBatchReader<T>;\n    try {\n        if (!(await reader.open({ autoDestroy: false })).closed) {\n            do { yield reader; } while (!(await reader.reset().open()).closed);\n        }\n    } finally { await reader.cancel(); }\n}\n\n/** @ignore */\nfunction fromArrowJSON<T extends { [key: string]: DataType }>(source: ArrowJSONLike) {\n    return new RecordBatchStreamReader(new RecordBatchJSONReaderImpl<T>(source));\n}\n\n/** @ignore */\nfunction fromByteStream<T extends { [key: string]: DataType }>(source: ByteStream) {\n    const bytes = source.peek((magicLength + 7) & ~7);\n    return bytes && bytes.byteLength >= 4 ? !checkForMagicArrowString(bytes)\n        ? new RecordBatchStreamReader(new RecordBatchStreamReaderImpl<T>(source))\n        : new RecordBatchFileReader(new RecordBatchFileReaderImpl<T>(source.read()))\n        : new RecordBatchStreamReader(new RecordBatchStreamReaderImpl<T>(function*(): any {}()));\n}\n\n/** @ignore */\nasync function fromAsyncByteStream<T extends { [key: string]: DataType }>(source: AsyncByteStream) {\n    const bytes = await source.peek((magicLength + 7) & ~7);\n    return bytes && bytes.byteLength >= 4 ? !checkForMagicArrowString(bytes)\n        ? new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(source))\n        : new RecordBatchFileReader(new RecordBatchFileReaderImpl<T>(await source.read()))\n        : new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(async function*(): any {}()));\n}\n\n/** @ignore */\nasync function fromFileHandle<T extends { [key: string]: DataType }>(source: FileHandle) {\n    const { size } = await source.stat();\n    const file = new AsyncRandomAccessFile(source, size);\n    if (size >= magicX2AndPadding) {\n        if (checkForMagicArrowString(await file.readAt(0, (magicLength + 7) & ~7))) {\n            return new AsyncRecordBatchFileReader(new AsyncRecordBatchFileReaderImpl<T>(file));\n        }\n    }\n    return new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(file));\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { Vector } from '../../vector';\nimport { VectorType as V } from '../../interfaces';\nimport { Builder, BuilderOptions } from '../../builder/index';\n\n/** @ignore */\nexport interface BuilderTransformOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    queueingStrategy?: 'bytes' | 'count';\n    dictionaryHashFunction?: (value: any) => string | number;\n    readableStrategy?: { highWaterMark?: number, size?: any, type?: 'bytes'; };\n    writableStrategy?: { highWaterMark?: number, size?: any, type?: 'bytes'; };\n    valueToChildTypeId?: (builder: Builder<T, TNull>, value: any, offset: number) => number;\n}\n\n/** @ignore */\nexport function builderThroughDOMStream<T extends DataType = any, TNull = any>(options: BuilderTransformOptions<T, TNull>) {\n    return new BuilderTransform(options);\n}\n\n/** @ignore */\nexport class BuilderTransform<T extends DataType = any, TNull = any> {\n\n    public readable: ReadableStream<V<T>>;\n    public writable: WritableStream<T['TValue'] | TNull>;\n    public _controller: ReadableStreamDefaultController<V<T>> | null;\n\n    private _numChunks = 0;\n    private _finished = false;\n    private _bufferedSize = 0;\n    private _builder: Builder<T, TNull>;\n    private _getSize: (builder: Builder<T, TNull>) => number;\n\n    constructor(options: BuilderTransformOptions<T, TNull>) {\n\n        // Access properties by string indexers to defeat closure compiler\n\n        const {\n            ['readableStrategy']: readableStrategy,\n            ['writableStrategy']: writableStrategy,\n            ['queueingStrategy']: queueingStrategy = 'count',\n            ...builderOptions\n        } = options;\n\n        this._controller = null;\n        this._builder = Builder.new<T, TNull>(builderOptions);\n        this._getSize = queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength;\n\n        const { ['highWaterMark']: readableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...readableStrategy };\n        const { ['highWaterMark']: writableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...writableStrategy };\n\n        this['readable'] = new ReadableStream<V<T>>({\n            ['cancel']: ()  => { this._builder.clear(); },\n            ['pull']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n            ['start']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n        }, {\n            'highWaterMark': readableHighWaterMark,\n            'size': queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength,\n        });\n\n        this['writable'] = new WritableStream({\n            ['abort']: () => { this._builder.clear(); },\n            ['write']: () => { this._maybeFlush(this._builder, this._controller); },\n            ['close']: () => { this._maybeFlush(this._builder.finish(), this._controller); },\n        }, {\n            'highWaterMark': writableHighWaterMark,\n            'size': (value: T['TValue'] | TNull) => this._writeValueAndReturnChunkSize(value),\n        });\n    }\n\n    private _writeValueAndReturnChunkSize(value: T['TValue'] | TNull) {\n        const bufferedSize = this._bufferedSize;\n        this._bufferedSize = this._getSize(this._builder.append(value));\n        return this._bufferedSize - bufferedSize;\n    }\n\n    private _maybeFlush(builder: Builder<T, TNull>, controller: ReadableStreamDefaultController<V<T>> | null) {\n        if (controller === null) { return; }\n        if (this._bufferedSize >= controller.desiredSize!) {\n            ++this._numChunks && this._enqueue(controller, builder.toVector());\n        }\n        if (builder.finished) {\n            if (builder.length > 0 || this._numChunks === 0) {\n                ++this._numChunks && this._enqueue(controller, builder.toVector());\n            }\n            if (!this._finished && (this._finished = true)) {\n                this._enqueue(controller, null);\n            }\n        }\n    }\n\n    private _enqueue(controller: ReadableStreamDefaultController<V<T>>, chunk: V<T> | null) {\n        this._bufferedSize = 0;\n        this._controller = null;\n        chunk === null ? controller.close() : controller.enqueue(chunk);\n    }\n}\n\n/** @ignore */ const chunkLength = <T extends DataType = any>(chunk: Vector<T> | Builder<T>) => chunk.length;\n/** @ignore */ const chunkByteLength = <T extends DataType = any>(chunk: Vector<T> | Builder<T>) => chunk.byteLength;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { RecordBatch } from '../recordbatch';\nimport { DictionaryVector } from '../vector/dictionary';\n\n/** @ignore */\nexport type ValueFunc<T> = (idx: number, cols: RecordBatch) => T | null;\n/** @ignore */\nexport type PredicateFunc = (idx: number, cols: RecordBatch) => boolean;\n\n/** @ignore */\nexport abstract class Value<T> {\n    eq(other: Value<T> | T): Predicate {\n        if (!(other instanceof Value)) { other = new Literal(other); }\n        return new Equals(this, other);\n    }\n    le(other: Value<T> | T): Predicate {\n        if (!(other instanceof Value)) { other = new Literal(other); }\n        return new LTeq(this, other);\n    }\n    ge(other: Value<T> | T): Predicate {\n        if (!(other instanceof Value)) { other = new Literal(other); }\n        return new GTeq(this, other);\n    }\n    lt(other: Value<T> | T): Predicate {\n        return new Not(this.ge(other));\n    }\n    gt(other: Value<T> | T): Predicate {\n        return new Not(this.le(other));\n    }\n    ne(other: Value<T> | T): Predicate {\n        return new Not(this.eq(other));\n    }\n}\n\n/** @ignore */\nexport class Literal<T= any> extends Value<T> {\n    constructor(public v: T) { super(); }\n}\n\n/** @ignore */\nexport class Col<T= any> extends Value<T> {\n    // @ts-ignore\n    public vector: Vector;\n    // @ts-ignore\n    public colidx: number;\n\n    constructor(public name: string) { super(); }\n    bind(batch: RecordBatch): (idx: number, batch?: RecordBatch) => any {\n        if (!this.colidx) {\n            // Assume column index doesn't change between calls to bind\n            //this.colidx = cols.findIndex(v => v.name.indexOf(this.name) != -1);\n            this.colidx = -1;\n            const fields = batch.schema.fields;\n            for (let idx = -1; ++idx < fields.length;) {\n                if (fields[idx].name === this.name) {\n                    this.colidx = idx;\n                    break;\n                }\n            }\n            if (this.colidx < 0) { throw new Error(`Failed to bind Col \"${this.name}\"`); }\n        }\n\n        const vec = this.vector = batch.getChildAt(this.colidx)!;\n        return (idx: number) => vec.get(idx);\n    }\n}\n\n/** @ignore */\nexport abstract class Predicate {\n    abstract bind(batch: RecordBatch): PredicateFunc;\n    and(...expr: Predicate[]): And { return new And(this, ...expr); }\n    or(...expr: Predicate[]): Or { return new Or(this, ...expr); }\n    not(): Predicate { return new Not(this); }\n}\n\n/** @ignore */\nexport abstract class ComparisonPredicate<T= any> extends Predicate {\n    constructor(public readonly left: Value<T>, public readonly right: Value<T>) {\n        super();\n    }\n\n    bind(batch: RecordBatch) {\n        if (this.left instanceof Literal) {\n            if (this.right instanceof Literal) {\n                return this._bindLitLit(batch, this.left, this.right);\n            } else { // right is a Col\n\n                return this._bindLitCol(batch, this.left, this.right as Col);\n            }\n        } else { // left is a Col\n            if (this.right instanceof Literal) {\n                return this._bindColLit(batch, this.left as Col, this.right);\n            } else { // right is a Col\n                return this._bindColCol(batch, this.left as Col, this.right as Col);\n            }\n        }\n    }\n\n    protected abstract _bindLitLit(batch: RecordBatch, left: Literal, right: Literal): PredicateFunc;\n    protected abstract _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc;\n    protected abstract _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc;\n    protected abstract _bindLitCol(batch: RecordBatch, lit: Literal, col: Col): PredicateFunc;\n}\n\n/** @ignore */\nexport abstract class CombinationPredicate extends Predicate {\n    readonly children: Predicate[];\n    constructor(...children: Predicate[]) {\n        super();\n        this.children = children;\n    }\n}\n// add children to prototype so it doesn't get mangled in es2015/umd\n(<any> CombinationPredicate.prototype).children = Object.freeze([]); // freeze for safety\n\n/** @ignore */\nexport class And extends CombinationPredicate {\n    constructor(...children: Predicate[]) {\n        // Flatten any Ands\n        children = children.reduce((accum: Predicate[], p: Predicate): Predicate[] => {\n            return accum.concat(p instanceof And ? p.children : p);\n        }, []);\n        super(...children);\n    }\n    bind(batch: RecordBatch) {\n        const bound = this.children.map((p) => p.bind(batch));\n        return (idx: number, batch: RecordBatch) => bound.every((p) => p(idx, batch));\n    }\n}\n\n/** @ignore */\nexport class Or extends CombinationPredicate {\n    constructor(...children: Predicate[]) {\n        // Flatten any Ors\n        children = children.reduce((accum: Predicate[], p: Predicate): Predicate[] => {\n            return accum.concat(p instanceof Or ? p.children : p);\n        }, []);\n        super(...children);\n    }\n    bind(batch: RecordBatch) {\n        const bound = this.children.map((p) => p.bind(batch));\n        return (idx: number, batch: RecordBatch) => bound.some((p) => p(idx, batch));\n    }\n}\n\n/** @ignore */\nexport class Equals extends ComparisonPredicate {\n    // Helpers used to cache dictionary reverse lookups between calls to bind\n    private lastDictionary: Vector|undefined;\n    private lastKey: number|undefined;\n\n    protected _bindLitLit(_batch: RecordBatch, left: Literal, right: Literal): PredicateFunc {\n        const rtrn: boolean = left.v == right.v;\n        return () => rtrn;\n    }\n\n    protected _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx: number, batch: RecordBatch) => left_func(idx, batch) == right_func(idx, batch);\n    }\n\n    protected _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc {\n        const col_func = col.bind(batch);\n        if (col.vector instanceof DictionaryVector) {\n            let key: any;\n            const vector = col.vector as DictionaryVector;\n            if (vector.dictionary !== this.lastDictionary) {\n                key = vector.reverseLookup(lit.v);\n                this.lastDictionary = vector.dictionary;\n                this.lastKey = key;\n            } else {\n                key = this.lastKey;\n            }\n\n            if (key === -1) {\n                // the value doesn't exist in the dictionary - always return\n                // false\n                // TODO: special-case of PredicateFunc that encapsulates this\n                // \"always false\" behavior. That way filtering operations don't\n                // have to bother checking\n                return () => false;\n            } else {\n                return (idx: number) => {\n                    return vector.getKey(idx) === key;\n                };\n            }\n        } else {\n            return (idx: number, cols: RecordBatch) => col_func(idx, cols) == lit.v;\n        }\n    }\n\n    protected _bindLitCol(batch: RecordBatch, lit: Literal, col: Col) {\n        // Equals is commutative\n        return this._bindColLit(batch, col, lit);\n    }\n}\n\n/** @ignore */\nexport class LTeq extends ComparisonPredicate {\n    protected _bindLitLit(_batch: RecordBatch, left: Literal, right: Literal): PredicateFunc {\n        const rtrn: boolean = left.v <= right.v;\n        return () => rtrn;\n    }\n\n    protected _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx: number, cols: RecordBatch) => left_func(idx, cols) <= right_func(idx, cols);\n    }\n\n    protected _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => col_func(idx, cols) <= lit.v;\n    }\n\n    protected _bindLitCol(batch: RecordBatch, lit: Literal, col: Col) {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => lit.v <= col_func(idx, cols);\n    }\n}\n\n/** @ignore */\nexport class GTeq extends ComparisonPredicate {\n    protected _bindLitLit(_batch: RecordBatch, left: Literal, right: Literal): PredicateFunc {\n        const rtrn: boolean = left.v >= right.v;\n        return () => rtrn;\n    }\n\n    protected _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx: number, cols: RecordBatch) => left_func(idx, cols) >= right_func(idx, cols);\n    }\n\n    protected _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => col_func(idx, cols) >= lit.v;\n    }\n\n    protected _bindLitCol(batch: RecordBatch, lit: Literal, col: Col) {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => lit.v >= col_func(idx, cols);\n    }\n}\n\n/** @ignore */\nexport class Not extends Predicate {\n    constructor(public readonly child: Predicate) {\n        super();\n    }\n\n    bind(batch: RecordBatch) {\n        const func = this.child.bind(batch);\n        return (idx: number, batch: RecordBatch) => !func(idx, batch);\n    }\n}\n\n/** @ignore */\nexport class CustomPredicate extends Predicate {\n    constructor(private next: PredicateFunc, private bind_: (batch: RecordBatch) => void) {\n        super();\n    }\n\n    bind(batch: RecordBatch) {\n        this.bind_(batch);\n        return this.next;\n    }\n}\n\nexport function lit(v: any): Value<any> { return new Literal(v); }\nexport function col(n: string): Col<any> { return new Col(n); }\nexport function and(...p: Predicate[]): And { return new And(...p); }\nexport function or(...p: Predicate[]): Or { return new Or(...p); }\nexport function custom(next: PredicateFunc, bind: (batch: RecordBatch) => void) {\n    return new CustomPredicate(next, bind);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Table } from '../table';\nimport { Vector } from '../vector';\nimport { IntVector } from '../vector/int';\nimport { Field, Schema } from '../schema';\nimport { Predicate, Col } from './predicate';\nimport { RecordBatch } from '../recordbatch';\nimport { VectorType as V } from '../interfaces';\nimport { DataType, Int, Struct, Dictionary } from '../type';\n\n/** @ignore */\nexport type BindFunc = (batch: RecordBatch) => void;\n/** @ignore */\nexport type NextFunc = (idx: number, batch: RecordBatch) => void;\n\nTable.prototype.countBy = function(this: Table, name: Col | string) { return new DataFrame(this.chunks).countBy(name); };\nTable.prototype.scan = function(this: Table, next: NextFunc, bind?: BindFunc) { return new DataFrame(this.chunks).scan(next, bind); };\nTable.prototype.scanReverse = function(this: Table, next: NextFunc, bind?: BindFunc) { return new DataFrame(this.chunks).scanReverse(next, bind); };\nTable.prototype.filter = function(this: Table, predicate: Predicate): FilteredDataFrame { return new DataFrame(this.chunks).filter(predicate); };\n\nexport class DataFrame<T extends { [key: string]: DataType } = any> extends Table<T> {\n    public filter(predicate: Predicate): FilteredDataFrame<T> {\n        return new FilteredDataFrame<T>(this.chunks, predicate);\n    }\n    public scan(next: NextFunc, bind?: BindFunc) {\n        const batches = this.chunks, numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            if (bind) { bind(batch); }\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                next(index, batch);\n            }\n        }\n    }\n    public scanReverse(next: NextFunc, bind?: BindFunc) {\n        const batches = this.chunks, numBatches = batches.length;\n        for (let batchIndex = numBatches; --batchIndex >= 0;) {\n            // load batches\n            const batch = batches[batchIndex];\n            if (bind) { bind(batch); }\n            // yield all indices\n            for (let index = batch.length; --index >= 0;) {\n                next(index, batch);\n            }\n        }\n    }\n    public countBy(name: Col | string) {\n        const batches = this.chunks, numBatches = batches.length;\n        const count_by = typeof name === 'string' ? new Col(name) : name as Col;\n        // Assume that all dictionary batches are deltas, which means that the\n        // last record batch has the most complete dictionary\n        count_by.bind(batches[numBatches - 1]);\n        const vector = count_by.vector as V<Dictionary>;\n        if (!DataType.isDictionary(vector.type)) {\n            throw new Error('countBy currently only supports dictionary-encoded columns');\n        }\n\n        const countByteLength = Math.ceil(Math.log(vector.length) / Math.log(256));\n        const CountsArrayType = countByteLength == 4 ? Uint32Array :\n                                countByteLength >= 2 ? Uint16Array : Uint8Array;\n\n        const counts = new CountsArrayType(vector.dictionary.length);\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            // rebind the countBy Col\n            count_by.bind(batch);\n            const keys = (count_by.vector as V<Dictionary>).indices;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                let key = keys.get(index);\n                if (key !== null) { counts[key]++; }\n            }\n        }\n        return new CountByResult(vector.dictionary, IntVector.from(counts));\n    }\n}\n\n/** @ignore */\nexport class CountByResult<T extends DataType = any, TCount extends Int = Int> extends Table<{ values: T,  counts: TCount }> {\n    constructor(values: Vector<T>, counts: V<TCount>) {\n        type R = { values: T, counts: TCount };\n        const schema = new Schema<R>([\n            new Field('values', values.type),\n            new Field('counts', counts.type)\n        ]);\n        super(new RecordBatch<R>(schema, counts.length, [values, counts]));\n    }\n    public toJSON(): Object {\n        const values = this.getColumnAt(0)!;\n        const counts = this.getColumnAt(1)!;\n        const result = {} as { [k: string]: number | null };\n        for (let i = -1; ++i < this.length;) {\n            result[values.get(i)] = counts.get(i);\n        }\n        return result;\n    }\n}\n\n/** @ignore */\nexport class FilteredDataFrame<T extends { [key: string]: DataType } = any> extends DataFrame<T> {\n    private _predicate: Predicate;\n    constructor (batches: RecordBatch<T>[], predicate: Predicate) {\n        super(batches);\n        this._predicate = predicate;\n    }\n    public scan(next: NextFunc, bind?: BindFunc) {\n        // inlined version of this:\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) next(idx, columns);\n        // });\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            let isBound = false;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) {\n                    // bind batches lazily - if predicate doesn't match anything\n                    // in the batch we don't need to call bind on the batch\n                    if (bind && !isBound) {\n                        bind(batch);\n                        isBound = true;\n                    }\n                    next(index, batch);\n                }\n            }\n        }\n    }\n    public scanReverse(next: NextFunc, bind?: BindFunc) {\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = numBatches; --batchIndex >= 0;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            let isBound = false;\n            // yield all indices\n            for (let index = batch.length; --index >= 0;) {\n                if (predicate(index, batch)) {\n                    // bind batches lazily - if predicate doesn't match anything\n                    // in the batch we don't need to call bind on the batch\n                    if (bind && !isBound) {\n                        bind(batch);\n                        isBound = true;\n                    }\n                    next(index, batch);\n                }\n            }\n        }\n    }\n    public count(): number {\n        // inlined version of this:\n        // let sum = 0;\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) ++sum;\n        // });\n        // return sum;\n        let sum = 0;\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) { ++sum; }\n            }\n        }\n        return sum;\n    }\n    public *[Symbol.iterator](): IterableIterator<Struct<T>['TValue']> {\n        // inlined version of this:\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) next(idx, columns);\n        // });\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            // TODO: bind batches lazily\n            // If predicate doesn't match anything in the batch we don't need\n            // to bind the callback\n            const predicate = this._predicate.bind(batch);\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) { yield batch.get(index) as any; }\n            }\n        }\n    }\n    public filter(predicate: Predicate): FilteredDataFrame<T> {\n        return new FilteredDataFrame<T>(\n            this._chunks,\n            this._predicate.and(predicate)\n        );\n    }\n    public countBy(name: Col | string) {\n        const batches = this._chunks, numBatches = batches.length;\n        const count_by = typeof name === 'string' ? new Col(name) : name as Col;\n        // Assume that all dictionary batches are deltas, which means that the\n        // last record batch has the most complete dictionary\n        count_by.bind(batches[numBatches - 1]);\n        const vector = count_by.vector as V<Dictionary>;\n        if (!DataType.isDictionary(vector.type)) {\n            throw new Error('countBy currently only supports dictionary-encoded columns');\n        }\n\n        const countByteLength = Math.ceil(Math.log(vector.length) / Math.log(256));\n        const CountsArrayType = countByteLength == 4 ? Uint32Array :\n                                countByteLength >= 2 ? Uint16Array : Uint8Array;\n\n        const counts = new CountsArrayType(vector.dictionary.length);\n\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            // rebind the countBy Col\n            count_by.bind(batch);\n            const keys = (count_by.vector as V<Dictionary>).indices;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                let key = keys.get(index);\n                if (key !== null && predicate(index, batch)) { counts[key]++; }\n            }\n        }\n        return new CountByResult(vector.dictionary, IntVector.from(counts));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './io/adapters';\nimport { Builder } from './builder/index';\nimport { RecordBatchReader } from './ipc/reader';\nimport { RecordBatchWriter } from './ipc/writer';\nimport { toDOMStream } from './io/whatwg/iterable';\nimport { builderThroughDOMStream } from './io/whatwg/builder';\nimport { recordBatchReaderThroughDOMStream } from './io/whatwg/reader';\nimport { recordBatchWriterThroughDOMStream } from './io/whatwg/writer';\n\nstreamAdapters.toDOMStream = toDOMStream;\nBuilder['throughDOM'] = builderThroughDOMStream;\nRecordBatchReader['throughDOM'] = recordBatchReaderThroughDOMStream;\nRecordBatchWriter['throughDOM'] = recordBatchWriterThroughDOMStream;\n\nexport {\n    ArrowType, DateUnit, IntervalUnit, MessageHeader, MetadataVersion, Precision, TimeUnit, Type, UnionMode, BufferType,\n    Data,\n    DataType,\n    Null,\n    Bool,\n    Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64,\n    Float, Float16, Float32, Float64,\n    Utf8,\n    Binary,\n    FixedSizeBinary,\n    Date_, DateDay, DateMillisecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Decimal,\n    List,\n    Struct,\n    Union, DenseUnion, SparseUnion,\n    Dictionary,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    FixedSizeList,\n    Map_,\n    Table,\n    Column,\n    Schema, Field,\n    Visitor,\n    Vector,\n    BaseVector,\n    BinaryVector,\n    BoolVector,\n    Chunked,\n    DateVector, DateDayVector, DateMillisecondVector,\n    DecimalVector,\n    DictionaryVector,\n    FixedSizeBinaryVector,\n    FixedSizeListVector,\n    FloatVector, Float16Vector, Float32Vector, Float64Vector,\n    IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector,\n    IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector,\n    ListVector,\n    MapVector,\n    NullVector,\n    StructVector,\n    TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector,\n    TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector,\n    UnionVector, DenseUnionVector, SparseUnionVector,\n    Utf8Vector,\n    ByteStream, AsyncByteStream, AsyncByteQueue, ReadableSource, WritableSink,\n    RecordBatchReader, RecordBatchFileReader, RecordBatchStreamReader, AsyncRecordBatchFileReader, AsyncRecordBatchStreamReader,\n    RecordBatchWriter, RecordBatchFileWriter, RecordBatchStreamWriter, RecordBatchJSONWriter,\n    MessageReader, AsyncMessageReader, JSONMessageReader,\n    Message,\n    RecordBatch,\n    ArrowJSONLike, FileHandle, Readable, Writable, ReadableWritable, ReadableDOMStreamOptions,\n    DataFrame, FilteredDataFrame, CountByResult, BindFunc, NextFunc,\n    predicate,\n    util,\n    Builder,\n    BinaryBuilder,\n    BoolBuilder,\n    DateBuilder, DateDayBuilder, DateMillisecondBuilder,\n    DecimalBuilder,\n    DictionaryBuilder,\n    FixedSizeBinaryBuilder,\n    FixedSizeListBuilder,\n    FloatBuilder, Float16Builder, Float32Builder, Float64Builder,\n    IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder,\n    IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder,\n    ListBuilder,\n    MapBuilder,\n    NullBuilder,\n    StructBuilder,\n    TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder,\n    TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder,\n    UnionBuilder, DenseUnionBuilder, SparseUnionBuilder,\n    Utf8Builder,\n} from './Arrow';\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { toUint8Array } from '../../util/buffer';\nimport { ReadableDOMStreamOptions } from '../../io/interfaces';\nimport { isIterable, isAsyncIterable } from '../../util/compat';\n\n/** @ignore */\nexport function toDOMStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: ReadableDOMStreamOptions): ReadableStream<T> {\n    if (isAsyncIterable<T>(source)) { return asyncIterableAsReadableDOMStream(source, options); }\n    if (isIterable<T>(source)) { return iterableAsReadableDOMStream(source, options); }\n    /* istanbul ignore next */\n    throw new Error(`toDOMStream() must be called with an Iterable or AsyncIterable`);\n}\n\n/** @ignore */\nfunction iterableAsReadableDOMStream<T>(source: Iterable<T>, options?: ReadableDOMStreamOptions) {\n\n    let it: Iterator<T> | null = null;\n    const bm = (options && options.type === 'bytes') || false;\n    const hwm = options && options.highWaterMark || (2 ** 24);\n\n    return new ReadableStream<T>({\n        ...options as any,\n        start(controller) { next(controller, it || (it = source[Symbol.iterator]())); },\n        pull(controller) { it ? (next(controller, it)) : controller.close(); },\n        cancel() { (it && (it.return && it.return()) || true) && (it = null); }\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\n\n    function next(controller: ReadableStreamDefaultController<T>, it: Iterator<T>) {\n        let buf: Uint8Array;\n        let r: IteratorResult<T> | null = null;\n        let size = controller.desiredSize || null;\n        while (!(r = it.next(bm ? size : null)).done) {\n            if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = <any> buf;\n            }\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n\n/** @ignore */\nfunction asyncIterableAsReadableDOMStream<T>(source: AsyncIterable<T>, options?: ReadableDOMStreamOptions) {\n\n    let it: AsyncIterator<T> | null = null;\n    const bm = (options && options.type === 'bytes') || false;\n    const hwm = options && options.highWaterMark || (2 ** 24);\n\n    return new ReadableStream<T>({\n        ...options as any,\n        async start(controller) { await next(controller, it || (it = source[Symbol.asyncIterator]())); },\n        async pull(controller) { it ? (await next(controller, it)) : controller.close(); },\n        async cancel() { (it && (it.return && await it.return()) || true) && (it = null); },\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\n\n    async function next(controller: ReadableStreamDefaultController<T>, it: AsyncIterator<T>) {\n        let buf: Uint8Array;\n        let r: IteratorResult<T> | null = null;\n        let size = controller.desiredSize || null;\n        while (!(r = await it.next(bm ? size : null)).done) {\n            if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = <any> buf;\n            }\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { RecordBatch } from '../../recordbatch';\nimport { AsyncByteQueue } from '../../io/stream';\nimport { RecordBatchReader } from '../../ipc/reader';\n\n/** @ignore */\nexport function recordBatchReaderThroughDOMStream<T extends { [key: string]: DataType } = any>(writableStrategy?: ByteLengthQueuingStrategy, readableStrategy?: { autoDestroy: boolean }) {\n\n    const queue = new AsyncByteQueue();\n    let reader: RecordBatchReader<T> | null = null;\n\n    const readable = new ReadableStream<RecordBatch<T>>({\n        async cancel() { await queue.close(); },\n        async start(controller) { await next(controller, reader || (reader = await open())); },\n        async pull(controller) { reader ? await next(controller, reader) : controller.close(); }\n    });\n\n    return { writable: new WritableStream(queue, { 'highWaterMark': 2 ** 14, ...writableStrategy }), readable };\n\n    async function open() {\n        return await (await RecordBatchReader.from<T>(queue)).open(readableStrategy);\n    }\n\n    async function next(controller: ReadableStreamDefaultController<RecordBatch<T>>, reader: RecordBatchReader<T>) {\n        let size = controller.desiredSize;\n        let r: IteratorResult<RecordBatch<T>> | null = null;\n        while (!(r = await reader.next()).done) {\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) {\n                return;\n            }\n        }\n        controller.close();\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { RecordBatch } from '../../recordbatch';\nimport { AsyncByteStream } from '../../io/stream';\nimport { RecordBatchWriter } from '../../ipc/writer';\n\n/** @ignore */\nexport function recordBatchWriterThroughDOMStream<T extends { [key: string]: DataType } = any>(\n    this: typeof RecordBatchWriter,\n    writableStrategy?: QueuingStrategy<RecordBatch<T>> & { autoDestroy: boolean },\n    readableStrategy?: { highWaterMark?: number, size?: any }\n) {\n\n    const writer = new this<T>(writableStrategy);\n    const reader = new AsyncByteStream(writer);\n    const readable = new ReadableStream({\n        type: 'bytes',\n        async cancel() { await reader.cancel(); },\n        async pull(controller) { await next(controller); },\n        async start(controller) { await next(controller); },\n    }, { 'highWaterMark': 2 ** 14, ...readableStrategy });\n\n    return { writable: new WritableStream(writer, writableStrategy), readable };\n\n    async function next(controller: ReadableStreamDefaultController<Uint8Array>) {\n        let buf: Uint8Array | null = null;\n        let size = controller.desiredSize;\n        while (buf = await reader.read(size || null)) {\n            controller.enqueue(buf);\n            if (size != null && (size -= buf.byteLength) <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n","/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Table, Type } from \"apache-arrow\";\nvar ArrowTable = /** @class */ (function () {\n    function ArrowTable(dataBuffer, indexBuffer, columnsBuffer, styler) {\n        var _this = this;\n        this.getCell = function (rowIndex, columnIndex) {\n            var isBlankCell = rowIndex < _this.headerRows && columnIndex < _this.headerColumns;\n            var isIndexCell = rowIndex >= _this.headerRows && columnIndex < _this.headerColumns;\n            var isColumnsCell = rowIndex < _this.headerRows && columnIndex >= _this.headerColumns;\n            if (isBlankCell) {\n                var classNames = [\"blank\"];\n                if (columnIndex > 0) {\n                    classNames.push(\"level\" + rowIndex);\n                }\n                return {\n                    type: \"blank\",\n                    classNames: classNames.join(\" \"),\n                    content: \"\"\n                };\n            }\n            else if (isColumnsCell) {\n                var dataColumnIndex = columnIndex - _this.headerColumns;\n                var classNames = [\n                    \"col_heading\",\n                    \"level\" + rowIndex,\n                    \"col\" + dataColumnIndex\n                ];\n                return {\n                    type: \"columns\",\n                    classNames: classNames.join(\" \"),\n                    content: _this.getContent(_this.columnsTable, dataColumnIndex, rowIndex)\n                };\n            }\n            else if (isIndexCell) {\n                var dataRowIndex = rowIndex - _this.headerRows;\n                var classNames = [\n                    \"row_heading\",\n                    \"level\" + columnIndex,\n                    \"row\" + dataRowIndex\n                ];\n                return {\n                    type: \"index\",\n                    id: \"T_\" + _this.uuid + \"level\" + columnIndex + \"_row\" + dataRowIndex,\n                    classNames: classNames.join(\" \"),\n                    content: _this.getContent(_this.indexTable, dataRowIndex, columnIndex)\n                };\n            }\n            else {\n                var dataRowIndex = rowIndex - _this.headerRows;\n                var dataColumnIndex = columnIndex - _this.headerColumns;\n                var classNames = [\n                    \"data\",\n                    \"row\" + dataRowIndex,\n                    \"col\" + dataColumnIndex\n                ];\n                var content = _this.styler\n                    ? _this.getContent(_this.styler.displayValuesTable, dataRowIndex, dataColumnIndex)\n                    : _this.getContent(_this.dataTable, dataRowIndex, dataColumnIndex);\n                return {\n                    type: \"data\",\n                    id: \"T_\" + _this.uuid + \"row\" + dataRowIndex + \"_col\" + dataColumnIndex,\n                    classNames: classNames.join(\" \"),\n                    content: content\n                };\n            }\n        };\n        this.getContent = function (table, rowIndex, columnIndex) {\n            var column = table.getColumnAt(columnIndex);\n            if (column === null) {\n                return \"\";\n            }\n            var columnTypeId = _this.getColumnTypeId(table, columnIndex);\n            switch (columnTypeId) {\n                case Type.Timestamp: {\n                    return _this.nanosToDate(column.get(rowIndex));\n                }\n                default: {\n                    return column.get(rowIndex);\n                }\n            }\n        };\n        this.dataTable = Table.from(dataBuffer);\n        this.indexTable = Table.from(indexBuffer);\n        this.columnsTable = Table.from(columnsBuffer);\n        this.styler = styler\n            ? {\n                caption: styler.caption,\n                displayValuesTable: Table.from(styler.displayValues),\n                styles: styler.styles,\n                uuid: styler.uuid\n            }\n            : undefined;\n    }\n    Object.defineProperty(ArrowTable.prototype, \"rows\", {\n        get: function () {\n            return this.indexTable.length + this.columnsTable.numCols;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"columns\", {\n        get: function () {\n            return this.indexTable.numCols + this.columnsTable.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"headerRows\", {\n        get: function () {\n            return this.rows - this.dataRows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"headerColumns\", {\n        get: function () {\n            return this.columns - this.dataColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"dataRows\", {\n        get: function () {\n            return this.dataTable.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"dataColumns\", {\n        get: function () {\n            return this.dataTable.numCols;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"uuid\", {\n        get: function () {\n            return this.styler && this.styler.uuid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"caption\", {\n        get: function () {\n            return this.styler && this.styler.caption;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"styles\", {\n        get: function () {\n            return this.styler && this.styler.styles;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"table\", {\n        get: function () {\n            return this.dataTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"index\", {\n        get: function () {\n            return this.indexTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"columnTable\", {\n        get: function () {\n            return this.columnsTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Serialize arrow table.\n     */\n    ArrowTable.prototype.serialize = function () {\n        return {\n            data: this.dataTable.serialize(),\n            index: this.indexTable.serialize(),\n            columns: this.columnsTable.serialize()\n        };\n    };\n    /**\n     * Returns apache-arrow specific typeId of column.\n     */\n    ArrowTable.prototype.getColumnTypeId = function (table, columnIndex) {\n        return table.schema.fields[columnIndex].type.typeId;\n    };\n    ArrowTable.prototype.nanosToDate = function (nanos) {\n        return new Date(nanos / 1e6);\n    };\n    return ArrowTable;\n}());\nexport { ArrowTable };\n","/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n// Safari doesn't support the EventTarget class, so we use a shim.\nimport { EventTarget } from \"event-target-shim\";\nimport { ArrowTable } from \"./ArrowTable\";\n/** Messages from Component -> Streamlit */\nvar ComponentMessageType;\n(function (ComponentMessageType) {\n    // A component sends this message when it's ready to receive messages\n    // from Streamlit. Streamlit won't send any messages until it gets this.\n    // Data: { apiVersion: number }\n    ComponentMessageType[\"COMPONENT_READY\"] = \"streamlit:componentReady\";\n    // The component has a new widget value. Send it back to Streamlit, which\n    // will then re-run the app.\n    // Data: { value: any }\n    ComponentMessageType[\"SET_COMPONENT_VALUE\"] = \"streamlit:setComponentValue\";\n    // The component has a new height for its iframe.\n    // Data: { height: number }\n    ComponentMessageType[\"SET_FRAME_HEIGHT\"] = \"streamlit:setFrameHeight\";\n})(ComponentMessageType || (ComponentMessageType = {}));\n/**\n * Streamlit communication API.\n *\n * Components can send data to Streamlit via the functions defined here,\n * and receive data from Streamlit via the `events` property.\n */\nvar Streamlit = /** @class */ (function () {\n    function Streamlit() {\n    }\n    /**\n     * The Streamlit component API version we're targetting.\n     * There's currently only 1!\n     */\n    Streamlit.API_VERSION = 1;\n    Streamlit.RENDER_EVENT = \"streamlit:render\";\n    /** Dispatches events received from Streamlit. */\n    Streamlit.events = new EventTarget();\n    Streamlit.registeredMessageListener = false;\n    /**\n     * Tell Streamlit that the component is ready to start receiving data.\n     * Streamlit will defer emitting RENDER events until it receives the\n     * COMPONENT_READY message.\n     */\n    Streamlit.setComponentReady = function () {\n        if (!Streamlit.registeredMessageListener) {\n            // Register for message events if we haven't already\n            window.addEventListener(\"message\", Streamlit.onMessageEvent);\n            Streamlit.registeredMessageListener = true;\n        }\n        Streamlit.sendBackMsg(ComponentMessageType.COMPONENT_READY, {\n            apiVersion: Streamlit.API_VERSION\n        });\n    };\n    /**\n     * Report the component's height to Streamlit.\n     * This should be called every time the component changes its DOM - that is,\n     * when it's first loaded, and any time it updates.\n     */\n    Streamlit.setFrameHeight = function (height) {\n        if (height === undefined) {\n            // `height` is optional. If undefined, it defaults to scrollHeight,\n            // which is the entire height of the element minus its border,\n            // scrollbar, and margin.\n            height = document.body.scrollHeight;\n        }\n        if (height === Streamlit.lastFrameHeight) {\n            // Don't bother updating if our height hasn't changed.\n            return;\n        }\n        Streamlit.lastFrameHeight = height;\n        Streamlit.sendBackMsg(ComponentMessageType.SET_FRAME_HEIGHT, { height: height });\n    };\n    /**\n     * Set the component's value. This value will be returned to the Python\n     * script, and the script will be re-run.\n     *\n     * For example:\n     *\n     * JavaScript:\n     * Streamlit.setComponentValue(\"ahoy!\")\n     *\n     * Python:\n     * value = st.my_component(...)\n     * st.write(value) # -> \"ahoy!\"\n     *\n     * The value must be an ArrowTable, a typed array, an ArrayBuffer, or be\n     * serializable to JSON.\n     */\n    Streamlit.setComponentValue = function (value) {\n        var dataType;\n        if (value instanceof ArrowTable) {\n            dataType = \"dataframe\";\n            value = value.serialize();\n        }\n        else if (isTypedArray(value)) {\n            // All typed arrays get sent as Uint8Array, because that's what our\n            // protobuf library uses for the \"bytes\" field type.\n            dataType = \"bytes\";\n            value = new Uint8Array(value.buffer);\n        }\n        else if (value instanceof ArrayBuffer) {\n            dataType = \"bytes\";\n            value = new Uint8Array(value);\n        }\n        else {\n            dataType = \"json\";\n        }\n        Streamlit.sendBackMsg(ComponentMessageType.SET_COMPONENT_VALUE, {\n            value: value,\n            dataType: dataType\n        });\n    };\n    /** Receive a ForwardMsg from the Streamlit app */\n    Streamlit.onMessageEvent = function (event) {\n        var type = event.data[\"type\"];\n        switch (type) {\n            case Streamlit.RENDER_EVENT:\n                Streamlit.onRenderMessage(event.data);\n                break;\n        }\n    };\n    /**\n     * Handle an untyped Streamlit render event and redispatch it as a\n     * StreamlitRenderEvent.\n     */\n    Streamlit.onRenderMessage = function (data) {\n        var args = data[\"args\"];\n        if (args == null) {\n            console.error(\"Got null args in onRenderMessage. This should never happen\");\n            args = {};\n        }\n        // Parse our dataframe arguments with arrow, and merge them into our args dict\n        var dataframeArgs = data[\"dfs\"] && data[\"dfs\"].length > 0\n            ? Streamlit.argsDataframeToObject(data[\"dfs\"])\n            : {};\n        args = __assign(__assign({}, args), dataframeArgs);\n        var disabled = Boolean(data[\"disabled\"]);\n        var theme = data[\"theme\"];\n        if (theme) {\n            _injectTheme(theme);\n        }\n        // Dispatch a render event!\n        var eventData = { disabled: disabled, args: args, theme: theme };\n        var event = new CustomEvent(Streamlit.RENDER_EVENT, {\n            detail: eventData\n        });\n        Streamlit.events.dispatchEvent(event);\n    };\n    Streamlit.argsDataframeToObject = function (argsDataframe) {\n        var argsDataframeArrow = argsDataframe.map(function (_a) {\n            var key = _a.key, value = _a.value;\n            return [key, Streamlit.toArrowTable(value)];\n        });\n        return Object.fromEntries(argsDataframeArrow);\n    };\n    Streamlit.toArrowTable = function (df) {\n        var _a = df.data, data = _a.data, index = _a.index, columns = _a.columns, styler = _a.styler;\n        return new ArrowTable(data, index, columns, styler);\n    };\n    /** Post a message to the Streamlit app. */\n    Streamlit.sendBackMsg = function (type, data) {\n        window.parent.postMessage(__assign({ isStreamlitMessage: true, type: type }, data), \"*\");\n    };\n    return Streamlit;\n}());\nexport { Streamlit };\nvar _injectTheme = function (theme) {\n    var style = document.createElement(\"style\");\n    document.head.appendChild(style);\n    style.innerHTML = \"\\n    :root {\\n      --primary-color: \" + theme.primaryColor + \";\\n      --background-color: \" + theme.backgroundColor + \";\\n      --secondary-background-color: \" + theme.secondaryBackgroundColor + \";\\n      --text-color: \" + theme.textColor + \";\\n      --font: \" + theme.font + \";\\n    }\\n\\n    body {\\n      background-color: var(--background-color);\\n      color: var(--text-color);\\n    }\\n  \";\n};\n/** True if the value is a TypedArray. */\nfunction isTypedArray(value) {\n    var isBigIntArray = false;\n    try {\n        isBigIntArray =\n            value instanceof BigInt64Array || value instanceof BigUint64Array;\n    }\n    catch (e) {\n        // Ignore cause Safari does not support this\n        // https://caniuse.com/mdn-javascript_builtins_bigint64array\n    }\n    return (value instanceof Int8Array ||\n        value instanceof Uint8Array ||\n        value instanceof Uint8ClampedArray ||\n        value instanceof Int16Array ||\n        value instanceof Uint16Array ||\n        value instanceof Int32Array ||\n        value instanceof Uint32Array ||\n        value instanceof Float32Array ||\n        value instanceof Float64Array ||\n        isBigIntArray);\n}\n","/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport hoistNonReactStatics from \"hoist-non-react-statics\";\nimport React from \"react\";\nimport { Streamlit } from \"./streamlit\";\n/**\n * Optional Streamlit React-based component base class.\n *\n * You are not required to extend this base class to create a Streamlit\n * component. If you decide not to extend it, you should implement the\n * `componentDidMount` and `componentDidUpdate` functions in your own class,\n * so that your plugin properly resizes.\n */\nvar StreamlitComponentBase = /** @class */ (function (_super) {\n    __extends(StreamlitComponentBase, _super);\n    function StreamlitComponentBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    StreamlitComponentBase.prototype.componentDidMount = function () {\n        // After we're rendered for the first time, tell Streamlit that our height\n        // has changed.\n        Streamlit.setFrameHeight();\n    };\n    StreamlitComponentBase.prototype.componentDidUpdate = function () {\n        // After we're updated, tell Streamlit that our height may have changed.\n        Streamlit.setFrameHeight();\n    };\n    return StreamlitComponentBase;\n}(React.PureComponent));\nexport { StreamlitComponentBase };\n/**\n * Wrapper for React-based Streamlit components.\n *\n * Bootstraps the communication interface between Streamlit and the component.\n */\nexport function withStreamlitConnection(WrappedComponent) {\n    var ComponentWrapper = /** @class */ (function (_super) {\n        __extends(ComponentWrapper, _super);\n        function ComponentWrapper(props) {\n            var _this = _super.call(this, props) || this;\n            _this.componentDidMount = function () {\n                // Set up event listeners, and signal to Streamlit that we're ready.\n                // We won't render the component until we receive the first RENDER_EVENT.\n                Streamlit.events.addEventListener(Streamlit.RENDER_EVENT, _this.onRenderEvent);\n                Streamlit.setComponentReady();\n            };\n            _this.componentDidUpdate = function () {\n                // If our child threw an error, we display it in render(). In this\n                // case, the child won't be mounted and therefore won't call\n                // `setFrameHeight` on its own. We do it here so that the rendered\n                // error will be visible.\n                if (_this.state.componentError != null) {\n                    Streamlit.setFrameHeight();\n                }\n            };\n            _this.componentWillUnmount = function () {\n                Streamlit.events.removeEventListener(Streamlit.RENDER_EVENT, _this.onRenderEvent);\n            };\n            /**\n             * Streamlit is telling this component to redraw.\n             * We save the render data in State, so that it can be passed to the\n             * component in our own render() function.\n             */\n            _this.onRenderEvent = function (event) {\n                // Update our state with the newest render data\n                var renderEvent = event;\n                _this.setState({ renderData: renderEvent.detail });\n            };\n            _this.render = function () {\n                // If our wrapped component threw an error, display it.\n                if (_this.state.componentError != null) {\n                    return (React.createElement(\"div\", null,\n                        React.createElement(\"h1\", null, \"Component Error\"),\n                        React.createElement(\"span\", null, _this.state.componentError.message)));\n                }\n                // Don't render until we've gotten our first RENDER_EVENT from Streamlit.\n                if (_this.state.renderData == null) {\n                    return null;\n                }\n                return (React.createElement(WrappedComponent, { width: window.innerWidth, disabled: _this.state.renderData.disabled, args: _this.state.renderData.args, theme: _this.state.renderData.theme }));\n            };\n            _this.state = {\n                renderData: undefined,\n                componentError: undefined\n            };\n            return _this;\n        }\n        /**\n         * Error boundary function. This will be called if our wrapped\n         * component throws an error. We store the caught error in our state,\n         * and display it in the next render().\n         */\n        ComponentWrapper.getDerivedStateFromError = function (error) {\n            return { componentError: error };\n        };\n        return ComponentWrapper;\n    }(React.PureComponent));\n    return hoistNonReactStatics(ComponentWrapper, WrappedComponent);\n}\n","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","// Some functions take a variable number of arguments, or a few expected\n// arguments at the beginning and then a variable number of values to operate\n// on. This helper accumulates all remaining arguments past the function’s\n// argument length (or an explicit `startIndex`), into an array that becomes\n// the last argument. Similar to ES6’s \"rest parameter\".\nexport default function restArguments(func, startIndex) {\n  startIndex = startIndex == null ? func.length - 1 : +startIndex;\n  return function() {\n    var length = Math.max(arguments.length - startIndex, 0),\n        rest = Array(length),\n        index = 0;\n    for (; index < length; index++) {\n      rest[index] = arguments[index + startIndex];\n    }\n    switch (startIndex) {\n      case 0: return func.call(this, rest);\n      case 1: return func.call(this, arguments[0], rest);\n      case 2: return func.call(this, arguments[0], arguments[1], rest);\n    }\n    var args = Array(startIndex + 1);\n    for (index = 0; index < startIndex; index++) {\n      args[index] = arguments[index];\n    }\n    args[startIndex] = rest;\n    return func.apply(this, args);\n  };\n}\n","// Is a given variable an object?\nexport default function isObject(obj) {\n  var type = typeof obj;\n  return type === 'function' || (type === 'object' && !!obj);\n}\n","// Is a given value equal to null?\nexport default function isNull(obj) {\n  return obj === null;\n}\n","// Is a given variable undefined?\nexport default function isUndefined(obj) {\n  return obj === void 0;\n}\n","import { toString } from './_setup.js';\n\n// Is a given value a boolean?\nexport default function isBoolean(obj) {\n  return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n}\n","// Is a given value a DOM element?\nexport default function isElement(obj) {\n  return !!(obj && obj.nodeType === 1);\n}\n","import { toString } from './_setup.js';\n\n// Internal function for creating a `toString`-based type tester.\nexport default function tagTester(name) {\n  var tag = '[object ' + name + ']';\n  return function(obj) {\n    return toString.call(obj) === tag;\n  };\n}\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('String');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('Number');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('Date');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('RegExp');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('Error');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('Symbol');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('ArrayBuffer');\n","import tagTester from './_tagTester.js';\nimport { root } from './_setup.js';\n\nvar isFunction = tagTester('Function');\n\n// Optimize `isFunction` if appropriate. Work around some `typeof` bugs in old\n// v8, IE 11 (#1621), Safari 8 (#1929), and PhantomJS (#2236).\nvar nodelist = root.document && root.document.childNodes;\nif (typeof /./ != 'function' && typeof Int8Array != 'object' && typeof nodelist != 'function') {\n  isFunction = function(obj) {\n    return typeof obj == 'function' || false;\n  };\n}\n\nexport default isFunction;\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('Object');\n","import { supportsDataView } from './_setup.js';\nimport hasObjectTag from './_hasObjectTag.js';\n\n// In IE 10 - Edge 13, `DataView` has string tag `'[object Object]'`.\n// In IE 11, the most common among them, this problem also applies to\n// `Map`, `WeakMap` and `Set`.\nexport var hasStringTagBug = (\n      supportsDataView && hasObjectTag(new DataView(new ArrayBuffer(8)))\n    ),\n    isIE11 = (typeof Map !== 'undefined' && hasObjectTag(new Map));\n","import tagTester from './_tagTester.js';\nimport isFunction from './isFunction.js';\nimport isArrayBuffer from './isArrayBuffer.js';\nimport { hasStringTagBug } from './_stringTagBug.js';\n\nvar isDataView = tagTester('DataView');\n\n// In IE 10 - Edge 13, we need a different heuristic\n// to determine whether an object is a `DataView`.\nfunction ie10IsDataView(obj) {\n  return obj != null && isFunction(obj.getInt8) && isArrayBuffer(obj.buffer);\n}\n\nexport default (hasStringTagBug ? ie10IsDataView : isDataView);\n","import { nativeIsArray } from './_setup.js';\nimport tagTester from './_tagTester.js';\n\n// Is a given value an array?\n// Delegates to ECMA5's native `Array.isArray`.\nexport default nativeIsArray || tagTester('Array');\n","import { hasOwnProperty } from './_setup.js';\n\n// Internal function to check whether `key` is an own property name of `obj`.\nexport default function has(obj, key) {\n  return obj != null && hasOwnProperty.call(obj, key);\n}\n","import tagTester from './_tagTester.js';\nimport has from './_has.js';\n\nvar isArguments = tagTester('Arguments');\n\n// Define a fallback version of the method in browsers (ahem, IE < 9), where\n// there isn't any inspectable \"Arguments\" type.\n(function() {\n  if (!isArguments(arguments)) {\n    isArguments = function(obj) {\n      return has(obj, 'callee');\n    };\n  }\n}());\n\nexport default isArguments;\n","import { _isFinite } from './_setup.js';\nimport isSymbol from './isSymbol.js';\n\n// Is a given object a finite number?\nexport default function isFinite(obj) {\n  return !isSymbol(obj) && _isFinite(obj) && !isNaN(parseFloat(obj));\n}\n","import { _isNaN } from './_setup.js';\nimport isNumber from './isNumber.js';\n\n// Is the given value `NaN`?\nexport default function isNaN(obj) {\n  return isNumber(obj) && _isNaN(obj);\n}\n","// Predicate-generating function. Often useful outside of Underscore.\nexport default function constant(value) {\n  return function() {\n    return value;\n  };\n}\n","import { MAX_ARRAY_INDEX } from './_setup.js';\n\n// Common internal logic for `isArrayLike` and `isBufferLike`.\nexport default function createSizePropertyCheck(getSizeProperty) {\n  return function(collection) {\n    var sizeProperty = getSizeProperty(collection);\n    return typeof sizeProperty == 'number' && sizeProperty >= 0 && sizeProperty <= MAX_ARRAY_INDEX;\n  }\n}\n","// Internal helper to generate a function to obtain property `key` from `obj`.\nexport default function shallowProperty(key) {\n  return function(obj) {\n    return obj == null ? void 0 : obj[key];\n  };\n}\n","import shallowProperty from './_shallowProperty.js';\n\n// Internal helper to obtain the `byteLength` property of an object.\nexport default shallowProperty('byteLength');\n","import createSizePropertyCheck from './_createSizePropertyCheck.js';\nimport getByteLength from './_getByteLength.js';\n\n// Internal helper to determine whether we should spend extensive checks against\n// `ArrayBuffer` et al.\nexport default createSizePropertyCheck(getByteLength);\n","import { supportsArrayBuffer, nativeIsView, toString } from './_setup.js';\nimport isDataView from './isDataView.js';\nimport constant from './constant.js';\nimport isBufferLike from './_isBufferLike.js';\n\n// Is a given value a typed array?\nvar typedArrayPattern = /\\[object ((I|Ui)nt(8|16|32)|Float(32|64)|Uint8Clamped|Big(I|Ui)nt64)Array\\]/;\nfunction isTypedArray(obj) {\n  // `ArrayBuffer.isView` is the most future-proof, so use it when available.\n  // Otherwise, fall back on the above regular expression.\n  return nativeIsView ? (nativeIsView(obj) && !isDataView(obj)) :\n                isBufferLike(obj) && typedArrayPattern.test(toString.call(obj));\n}\n\nexport default supportsArrayBuffer ? isTypedArray : constant(false);\n","import shallowProperty from './_shallowProperty.js';\n\n// Internal helper to obtain the `length` property of an object.\nexport default shallowProperty('length');\n","import { nonEnumerableProps, ObjProto } from './_setup.js';\nimport isFunction from './isFunction.js';\nimport has from './_has.js';\n\n// Internal helper to create a simple lookup structure.\n// `collectNonEnumProps` used to depend on `_.contains`, but this led to\n// circular imports. `emulatedSet` is a one-off solution that only works for\n// arrays of strings.\nfunction emulatedSet(keys) {\n  var hash = {};\n  for (var l = keys.length, i = 0; i < l; ++i) hash[keys[i]] = true;\n  return {\n    contains: function(key) { return hash[key] === true; },\n    push: function(key) {\n      hash[key] = true;\n      return keys.push(key);\n    }\n  };\n}\n\n// Internal helper. Checks `keys` for the presence of keys in IE < 9 that won't\n// be iterated by `for key in ...` and thus missed. Extends `keys` in place if\n// needed.\nexport default function collectNonEnumProps(obj, keys) {\n  keys = emulatedSet(keys);\n  var nonEnumIdx = nonEnumerableProps.length;\n  var constructor = obj.constructor;\n  var proto = (isFunction(constructor) && constructor.prototype) || ObjProto;\n\n  // Constructor is a special case.\n  var prop = 'constructor';\n  if (has(obj, prop) && !keys.contains(prop)) keys.push(prop);\n\n  while (nonEnumIdx--) {\n    prop = nonEnumerableProps[nonEnumIdx];\n    if (prop in obj && obj[prop] !== proto[prop] && !keys.contains(prop)) {\n      keys.push(prop);\n    }\n  }\n}\n","import isObject from './isObject.js';\nimport { nativeKeys, hasEnumBug } from './_setup.js';\nimport has from './_has.js';\nimport collectNonEnumProps from './_collectNonEnumProps.js';\n\n// Retrieve the names of an object's own properties.\n// Delegates to **ECMAScript 5**'s native `Object.keys`.\nexport default function keys(obj) {\n  if (!isObject(obj)) return [];\n  if (nativeKeys) return nativeKeys(obj);\n  var keys = [];\n  for (var key in obj) if (has(obj, key)) keys.push(key);\n  // Ahem, IE < 9.\n  if (hasEnumBug) collectNonEnumProps(obj, keys);\n  return keys;\n}\n","import getLength from './_getLength.js';\nimport isArray from './isArray.js';\nimport isString from './isString.js';\nimport isArguments from './isArguments.js';\nimport keys from './keys.js';\n\n// Is a given array, string, or object empty?\n// An \"empty\" object has no enumerable own-properties.\nexport default function isEmpty(obj) {\n  if (obj == null) return true;\n  // Skip the more expensive `toString`-based type checks if `obj` has no\n  // `.length`.\n  var length = getLength(obj);\n  if (typeof length == 'number' && (\n    isArray(obj) || isString(obj) || isArguments(obj)\n  )) return length === 0;\n  return getLength(keys(obj)) === 0;\n}\n","import keys from './keys.js';\n\n// Returns whether an object has a given set of `key:value` pairs.\nexport default function isMatch(object, attrs) {\n  var _keys = keys(attrs), length = _keys.length;\n  if (object == null) return !length;\n  var obj = Object(object);\n  for (var i = 0; i < length; i++) {\n    var key = _keys[i];\n    if (attrs[key] !== obj[key] || !(key in obj)) return false;\n  }\n  return true;\n}\n","import { VERSION } from './_setup.js';\n\n// If Underscore is called as a function, it returns a wrapped object that can\n// be used OO-style. This wrapper holds altered versions of all functions added\n// through `_.mixin`. Wrapped objects may be chained.\nexport default function _(obj) {\n  if (obj instanceof _) return obj;\n  if (!(this instanceof _)) return new _(obj);\n  this._wrapped = obj;\n}\n\n_.VERSION = VERSION;\n\n// Extracts the result from a wrapped and chained object.\n_.prototype.value = function() {\n  return this._wrapped;\n};\n\n// Provide unwrapping proxies for some methods used in engine operations\n// such as arithmetic and JSON stringification.\n_.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n_.prototype.toString = function() {\n  return String(this._wrapped);\n};\n","import getByteLength from './_getByteLength.js';\n\n// Internal function to wrap or shallow-copy an ArrayBuffer,\n// typed array or DataView to a new view, reusing the buffer.\nexport default function toBufferView(bufferSource) {\n  return new Uint8Array(\n    bufferSource.buffer || bufferSource,\n    bufferSource.byteOffset || 0,\n    getByteLength(bufferSource)\n  );\n}\n","import _ from './underscore.js';\nimport { toString, SymbolProto } from './_setup.js';\nimport getByteLength from './_getByteLength.js';\nimport isTypedArray from './isTypedArray.js';\nimport isFunction from './isFunction.js';\nimport { hasStringTagBug }  from './_stringTagBug.js';\nimport isDataView from './isDataView.js';\nimport keys from './keys.js';\nimport has from './_has.js';\nimport toBufferView from './_toBufferView.js';\n\n// We use this string twice, so give it a name for minification.\nvar tagDataView = '[object DataView]';\n\n// Internal recursive comparison function for `_.isEqual`.\nfunction eq(a, b, aStack, bStack) {\n  // Identical objects are equal. `0 === -0`, but they aren't identical.\n  // See the [Harmony `egal` proposal](https://wiki.ecmascript.org/doku.php?id=harmony:egal).\n  if (a === b) return a !== 0 || 1 / a === 1 / b;\n  // `null` or `undefined` only equal to itself (strict comparison).\n  if (a == null || b == null) return false;\n  // `NaN`s are equivalent, but non-reflexive.\n  if (a !== a) return b !== b;\n  // Exhaust primitive checks\n  var type = typeof a;\n  if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\n  return deepEq(a, b, aStack, bStack);\n}\n\n// Internal recursive comparison function for `_.isEqual`.\nfunction deepEq(a, b, aStack, bStack) {\n  // Unwrap any wrapped objects.\n  if (a instanceof _) a = a._wrapped;\n  if (b instanceof _) b = b._wrapped;\n  // Compare `[[Class]]` names.\n  var className = toString.call(a);\n  if (className !== toString.call(b)) return false;\n  // Work around a bug in IE 10 - Edge 13.\n  if (hasStringTagBug && className == '[object Object]' && isDataView(a)) {\n    if (!isDataView(b)) return false;\n    className = tagDataView;\n  }\n  switch (className) {\n    // These types are compared by value.\n    case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n    case '[object String]':\n      // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n      // equivalent to `new String(\"5\")`.\n      return '' + a === '' + b;\n    case '[object Number]':\n      // `NaN`s are equivalent, but non-reflexive.\n      // Object(NaN) is equivalent to NaN.\n      if (+a !== +a) return +b !== +b;\n      // An `egal` comparison is performed for other numeric values.\n      return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n    case '[object Date]':\n    case '[object Boolean]':\n      // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n      // millisecond representations. Note that invalid dates with millisecond representations\n      // of `NaN` are not equivalent.\n      return +a === +b;\n    case '[object Symbol]':\n      return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\n    case '[object ArrayBuffer]':\n    case tagDataView:\n      // Coerce to typed array so we can fall through.\n      return deepEq(toBufferView(a), toBufferView(b), aStack, bStack);\n  }\n\n  var areArrays = className === '[object Array]';\n  if (!areArrays && isTypedArray(a)) {\n      var byteLength = getByteLength(a);\n      if (byteLength !== getByteLength(b)) return false;\n      if (a.buffer === b.buffer && a.byteOffset === b.byteOffset) return true;\n      areArrays = true;\n  }\n  if (!areArrays) {\n    if (typeof a != 'object' || typeof b != 'object') return false;\n\n    // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n    // from different frames are.\n    var aCtor = a.constructor, bCtor = b.constructor;\n    if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\n                             isFunction(bCtor) && bCtor instanceof bCtor)\n                        && ('constructor' in a && 'constructor' in b)) {\n      return false;\n    }\n  }\n  // Assume equality for cyclic structures. The algorithm for detecting cyclic\n  // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n  // Initializing stack of traversed objects.\n  // It's done here since we only need them for objects and arrays comparison.\n  aStack = aStack || [];\n  bStack = bStack || [];\n  var length = aStack.length;\n  while (length--) {\n    // Linear search. Performance is inversely proportional to the number of\n    // unique nested structures.\n    if (aStack[length] === a) return bStack[length] === b;\n  }\n\n  // Add the first object to the stack of traversed objects.\n  aStack.push(a);\n  bStack.push(b);\n\n  // Recursively compare objects and arrays.\n  if (areArrays) {\n    // Compare array lengths to determine if a deep comparison is necessary.\n    length = a.length;\n    if (length !== b.length) return false;\n    // Deep compare the contents, ignoring non-numeric properties.\n    while (length--) {\n      if (!eq(a[length], b[length], aStack, bStack)) return false;\n    }\n  } else {\n    // Deep compare objects.\n    var _keys = keys(a), key;\n    length = _keys.length;\n    // Ensure that both objects contain the same number of properties before comparing deep equality.\n    if (keys(b).length !== length) return false;\n    while (length--) {\n      // Deep compare each member\n      key = _keys[length];\n      if (!(has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n    }\n  }\n  // Remove the first object from the stack of traversed objects.\n  aStack.pop();\n  bStack.pop();\n  return true;\n}\n\n// Perform a deep comparison to check if two objects are equal.\nexport default function isEqual(a, b) {\n  return eq(a, b);\n}\n","import isObject from './isObject.js';\nimport { hasEnumBug } from './_setup.js';\nimport collectNonEnumProps from './_collectNonEnumProps.js';\n\n// Retrieve all the enumerable property names of an object.\nexport default function allKeys(obj) {\n  if (!isObject(obj)) return [];\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  // Ahem, IE < 9.\n  if (hasEnumBug) collectNonEnumProps(obj, keys);\n  return keys;\n}\n","import getLength from './_getLength.js';\nimport isFunction from './isFunction.js';\nimport allKeys from './allKeys.js';\n\n// Since the regular `Object.prototype.toString` type tests don't work for\n// some types in IE 11, we use a fingerprinting heuristic instead, based\n// on the methods. It's not great, but it's the best we got.\n// The fingerprint method lists are defined below.\nexport function ie11fingerprint(methods) {\n  var length = getLength(methods);\n  return function(obj) {\n    if (obj == null) return false;\n    // `Map`, `WeakMap` and `Set` have no enumerable keys.\n    var keys = allKeys(obj);\n    if (getLength(keys)) return false;\n    for (var i = 0; i < length; i++) {\n      if (!isFunction(obj[methods[i]])) return false;\n    }\n    // If we are testing against `WeakMap`, we need to ensure that\n    // `obj` doesn't have a `forEach` method in order to distinguish\n    // it from a regular `Map`.\n    return methods !== weakMapMethods || !isFunction(obj[forEachName]);\n  };\n}\n\n// In the interest of compact minification, we write\n// each string in the fingerprints only once.\nvar forEachName = 'forEach',\n    hasName = 'has',\n    commonInit = ['clear', 'delete'],\n    mapTail = ['get', hasName, 'set'];\n\n// `Map`, `WeakMap` and `Set` each have slightly different\n// combinations of the above sublists.\nexport var mapMethods = commonInit.concat(forEachName, mapTail),\n    weakMapMethods = commonInit.concat(mapTail),\n    setMethods = ['add'].concat(commonInit, forEachName, hasName);\n","import tagTester from './_tagTester.js';\nimport { isIE11 } from './_stringTagBug.js';\nimport { ie11fingerprint, mapMethods }  from './_methodFingerprint.js';\n\nexport default isIE11 ? ie11fingerprint(mapMethods) : tagTester('Map');\n","import tagTester from './_tagTester.js';\nimport { isIE11 } from './_stringTagBug.js';\nimport { ie11fingerprint, weakMapMethods }  from './_methodFingerprint.js';\n\nexport default isIE11 ? ie11fingerprint(weakMapMethods) : tagTester('WeakMap');\n","import tagTester from './_tagTester.js';\nimport { isIE11 } from './_stringTagBug.js';\nimport { ie11fingerprint, setMethods }  from './_methodFingerprint.js';\n\nexport default isIE11 ? ie11fingerprint(setMethods) : tagTester('Set');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('WeakSet');\n","import keys from './keys.js';\n\n// Retrieve the values of an object's properties.\nexport default function values(obj) {\n  var _keys = keys(obj);\n  var length = _keys.length;\n  var values = Array(length);\n  for (var i = 0; i < length; i++) {\n    values[i] = obj[_keys[i]];\n  }\n  return values;\n}\n","import keys from './keys.js';\n\n// Convert an object into a list of `[key, value]` pairs.\n// The opposite of `_.object` with one argument.\nexport default function pairs(obj) {\n  var _keys = keys(obj);\n  var length = _keys.length;\n  var pairs = Array(length);\n  for (var i = 0; i < length; i++) {\n    pairs[i] = [_keys[i], obj[_keys[i]]];\n  }\n  return pairs;\n}\n","import keys from './keys.js';\n\n// Invert the keys and values of an object. The values must be serializable.\nexport default function invert(obj) {\n  var result = {};\n  var _keys = keys(obj);\n  for (var i = 0, length = _keys.length; i < length; i++) {\n    result[obj[_keys[i]]] = _keys[i];\n  }\n  return result;\n}\n","import isFunction from './isFunction.js';\n\n// Return a sorted list of the function names available on the object.\nexport default function functions(obj) {\n  var names = [];\n  for (var key in obj) {\n    if (isFunction(obj[key])) names.push(key);\n  }\n  return names.sort();\n}\n","// An internal function for creating assigner functions.\nexport default function createAssigner(keysFunc, defaults) {\n  return function(obj) {\n    var length = arguments.length;\n    if (defaults) obj = Object(obj);\n    if (length < 2 || obj == null) return obj;\n    for (var index = 1; index < length; index++) {\n      var source = arguments[index],\n          keys = keysFunc(source),\n          l = keys.length;\n      for (var i = 0; i < l; i++) {\n        var key = keys[i];\n        if (!defaults || obj[key] === void 0) obj[key] = source[key];\n      }\n    }\n    return obj;\n  };\n}\n","import createAssigner from './_createAssigner.js';\nimport allKeys from './allKeys.js';\n\n// Extend a given object with all the properties in passed-in object(s).\nexport default createAssigner(allKeys);\n","import createAssigner from './_createAssigner.js';\nimport keys from './keys.js';\n\n// Assigns a given object with all the own properties in the passed-in\n// object(s).\n// (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\nexport default createAssigner(keys);\n","import createAssigner from './_createAssigner.js';\nimport allKeys from './allKeys.js';\n\n// Fill in a given object with default properties.\nexport default createAssigner(allKeys, true);\n","import isObject from './isObject.js';\nimport { nativeCreate } from './_setup.js';\n\n// Create a naked function reference for surrogate-prototype-swapping.\nfunction ctor() {\n  return function(){};\n}\n\n// An internal function for creating a new object that inherits from another.\nexport default function baseCreate(prototype) {\n  if (!isObject(prototype)) return {};\n  if (nativeCreate) return nativeCreate(prototype);\n  var Ctor = ctor();\n  Ctor.prototype = prototype;\n  var result = new Ctor;\n  Ctor.prototype = null;\n  return result;\n}\n","import baseCreate from './_baseCreate.js';\nimport extendOwn from './extendOwn.js';\n\n// Creates an object that inherits from the given prototype object.\n// If additional properties are provided then they will be added to the\n// created object.\nexport default function create(prototype, props) {\n  var result = baseCreate(prototype);\n  if (props) extendOwn(result, props);\n  return result;\n}\n","import isObject from './isObject.js';\nimport isArray from './isArray.js';\nimport extend from './extend.js';\n\n// Create a (shallow-cloned) duplicate of an object.\nexport default function clone(obj) {\n  if (!isObject(obj)) return obj;\n  return isArray(obj) ? obj.slice() : extend({}, obj);\n}\n","// Invokes `interceptor` with the `obj` and then returns `obj`.\n// The primary purpose of this method is to \"tap into\" a method chain, in\n// order to perform operations on intermediate results within the chain.\nexport default function tap(obj, interceptor) {\n  interceptor(obj);\n  return obj;\n}\n","import _ from './underscore.js';\nimport isArray from './isArray.js';\n\n// Normalize a (deep) property `path` to array.\n// Like `_.iteratee`, this function can be customized.\nexport default function toPath(path) {\n  return isArray(path) ? path : [path];\n}\n_.toPath = toPath;\n","import _ from './underscore.js';\nimport './toPath.js';\n\n// Internal wrapper for `_.toPath` to enable minification.\n// Similar to `cb` for `_.iteratee`.\nexport default function toPath(path) {\n  return _.toPath(path);\n}\n","// Internal function to obtain a nested property in `obj` along `path`.\nexport default function deepGet(obj, path) {\n  var length = path.length;\n  for (var i = 0; i < length; i++) {\n    if (obj == null) return void 0;\n    obj = obj[path[i]];\n  }\n  return length ? obj : void 0;\n}\n","import toPath from './_toPath.js';\nimport deepGet from './_deepGet.js';\nimport isUndefined from './isUndefined.js';\n\n// Get the value of the (deep) property on `path` from `object`.\n// If any property in `path` does not exist or if the value is\n// `undefined`, return `defaultValue` instead.\n// The `path` is normalized through `_.toPath`.\nexport default function get(object, path, defaultValue) {\n  var value = deepGet(object, toPath(path));\n  return isUndefined(value) ? defaultValue : value;\n}\n","import _has from './_has.js';\nimport toPath from './_toPath.js';\n\n// Shortcut function for checking if an object has a given property directly on\n// itself (in other words, not on a prototype). Unlike the internal `has`\n// function, this public version can also traverse nested properties.\nexport default function has(obj, path) {\n  path = toPath(path);\n  var length = path.length;\n  for (var i = 0; i < length; i++) {\n    var key = path[i];\n    if (!_has(obj, key)) return false;\n    obj = obj[key];\n  }\n  return !!length;\n}\n","// Keep the identity function around for default iteratees.\nexport default function identity(value) {\n  return value;\n}\n","import extendOwn from './extendOwn.js';\nimport isMatch from './isMatch.js';\n\n// Returns a predicate for checking whether an object has a given set of\n// `key:value` pairs.\nexport default function matcher(attrs) {\n  attrs = extendOwn({}, attrs);\n  return function(obj) {\n    return isMatch(obj, attrs);\n  };\n}\n","import deepGet from './_deepGet.js';\nimport toPath from './_toPath.js';\n\n// Creates a function that, when passed an object, will traverse that object’s\n// properties down the given `path`, specified as an array of keys or indices.\nexport default function property(path) {\n  path = toPath(path);\n  return function(obj) {\n    return deepGet(obj, path);\n  };\n}\n","// Internal function that returns an efficient (for current engines) version\n// of the passed-in callback, to be repeatedly applied in other Underscore\n// functions.\nexport default function optimizeCb(func, context, argCount) {\n  if (context === void 0) return func;\n  switch (argCount == null ? 3 : argCount) {\n    case 1: return function(value) {\n      return func.call(context, value);\n    };\n    // The 2-argument case is omitted because we’re not using it.\n    case 3: return function(value, index, collection) {\n      return func.call(context, value, index, collection);\n    };\n    case 4: return function(accumulator, value, index, collection) {\n      return func.call(context, accumulator, value, index, collection);\n    };\n  }\n  return function() {\n    return func.apply(context, arguments);\n  };\n}\n","import identity from './identity.js';\nimport isFunction from './isFunction.js';\nimport isObject from './isObject.js';\nimport isArray from './isArray.js';\nimport matcher from './matcher.js';\nimport property from './property.js';\nimport optimizeCb from './_optimizeCb.js';\n\n// An internal function to generate callbacks that can be applied to each\n// element in a collection, returning the desired result — either `_.identity`,\n// an arbitrary callback, a property matcher, or a property accessor.\nexport default function baseIteratee(value, context, argCount) {\n  if (value == null) return identity;\n  if (isFunction(value)) return optimizeCb(value, context, argCount);\n  if (isObject(value) && !isArray(value)) return matcher(value);\n  return property(value);\n}\n","import _ from './underscore.js';\nimport baseIteratee from './_baseIteratee.js';\n\n// External wrapper for our callback generator. Users may customize\n// `_.iteratee` if they want additional predicate/iteratee shorthand styles.\n// This abstraction hides the internal-only `argCount` argument.\nexport default function iteratee(value, context) {\n  return baseIteratee(value, context, Infinity);\n}\n_.iteratee = iteratee;\n","import _ from './underscore.js';\nimport baseIteratee from './_baseIteratee.js';\nimport iteratee from './iteratee.js';\n\n// The function we call internally to generate a callback. It invokes\n// `_.iteratee` if overridden, otherwise `baseIteratee`.\nexport default function cb(value, context, argCount) {\n  if (_.iteratee !== iteratee) return _.iteratee(value, context);\n  return baseIteratee(value, context, argCount);\n}\n","import cb from './_cb.js';\nimport keys from './keys.js';\n\n// Returns the results of applying the `iteratee` to each element of `obj`.\n// In contrast to `_.map` it returns an object.\nexport default function mapObject(obj, iteratee, context) {\n  iteratee = cb(iteratee, context);\n  var _keys = keys(obj),\n      length = _keys.length,\n      results = {};\n  for (var index = 0; index < length; index++) {\n    var currentKey = _keys[index];\n    results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n  }\n  return results;\n}\n","// Predicate-generating function. Often useful outside of Underscore.\nexport default function noop(){}\n","import noop from './noop.js';\nimport get from './get.js';\n\n// Generates a function for a given object that returns a given property.\nexport default function propertyOf(obj) {\n  if (obj == null) return noop;\n  return function(path) {\n    return get(obj, path);\n  };\n}\n","import optimizeCb from './_optimizeCb.js';\n\n// Run a function **n** times.\nexport default function times(n, iteratee, context) {\n  var accum = Array(Math.max(0, n));\n  iteratee = optimizeCb(iteratee, context, 1);\n  for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n  return accum;\n}\n","// Return a random integer between `min` and `max` (inclusive).\nexport default function random(min, max) {\n  if (max == null) {\n    max = min;\n    min = 0;\n  }\n  return min + Math.floor(Math.random() * (max - min + 1));\n}\n","// A (possibly faster) way to get the current timestamp as an integer.\nexport default Date.now || function() {\n  return new Date().getTime();\n};\n","import keys from './keys.js';\n\n// Internal helper to generate functions for escaping and unescaping strings\n// to/from HTML interpolation.\nexport default function createEscaper(map) {\n  var escaper = function(match) {\n    return map[match];\n  };\n  // Regexes for identifying a key that needs to be escaped.\n  var source = '(?:' + keys(map).join('|') + ')';\n  var testRegexp = RegExp(source);\n  var replaceRegexp = RegExp(source, 'g');\n  return function(string) {\n    string = string == null ? '' : '' + string;\n    return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n  };\n}\n","// Internal list of HTML entities for escaping.\nexport default {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;'\n};\n","import createEscaper from './_createEscaper.js';\nimport escapeMap from './_escapeMap.js';\n\n// Function for escaping strings to HTML interpolation.\nexport default createEscaper(escapeMap);\n","import createEscaper from './_createEscaper.js';\nimport unescapeMap from './_unescapeMap.js';\n\n// Function for unescaping strings from HTML interpolation.\nexport default createEscaper(unescapeMap);\n","import invert from './invert.js';\nimport escapeMap from './_escapeMap.js';\n\n// Internal list of HTML entities for unescaping.\nexport default invert(escapeMap);\n","import _ from './underscore.js';\n\n// By default, Underscore uses ERB-style template delimiters. Change the\n// following template settings to use alternative delimiters.\nexport default _.templateSettings = {\n  evaluate: /<%([\\s\\S]+?)%>/g,\n  interpolate: /<%=([\\s\\S]+?)%>/g,\n  escape: /<%-([\\s\\S]+?)%>/g\n};\n","import defaults from './defaults.js';\nimport _ from './underscore.js';\nimport './templateSettings.js';\n\n// When customizing `_.templateSettings`, if you don't want to define an\n// interpolation, evaluation or escaping regex, we need one that is\n// guaranteed not to match.\nvar noMatch = /(.)^/;\n\n// Certain characters need to be escaped so that they can be put into a\n// string literal.\nvar escapes = {\n  \"'\": \"'\",\n  '\\\\': '\\\\',\n  '\\r': 'r',\n  '\\n': 'n',\n  '\\u2028': 'u2028',\n  '\\u2029': 'u2029'\n};\n\nvar escapeRegExp = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\nfunction escapeChar(match) {\n  return '\\\\' + escapes[match];\n}\n\n// In order to prevent third-party code injection through\n// `_.templateSettings.variable`, we test it against the following regular\n// expression. It is intentionally a bit more liberal than just matching valid\n// identifiers, but still prevents possible loopholes through defaults or\n// destructuring assignment.\nvar bareIdentifier = /^\\s*(\\w|\\$)+\\s*$/;\n\n// JavaScript micro-templating, similar to John Resig's implementation.\n// Underscore templating handles arbitrary delimiters, preserves whitespace,\n// and correctly escapes quotes within interpolated code.\n// NB: `oldSettings` only exists for backwards compatibility.\nexport default function template(text, settings, oldSettings) {\n  if (!settings && oldSettings) settings = oldSettings;\n  settings = defaults({}, settings, _.templateSettings);\n\n  // Combine delimiters into one regular expression via alternation.\n  var matcher = RegExp([\n    (settings.escape || noMatch).source,\n    (settings.interpolate || noMatch).source,\n    (settings.evaluate || noMatch).source\n  ].join('|') + '|$', 'g');\n\n  // Compile the template source, escaping string literals appropriately.\n  var index = 0;\n  var source = \"__p+='\";\n  text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n    source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\n    index = offset + match.length;\n\n    if (escape) {\n      source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n    } else if (interpolate) {\n      source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n    } else if (evaluate) {\n      source += \"';\\n\" + evaluate + \"\\n__p+='\";\n    }\n\n    // Adobe VMs need the match returned to produce the correct offset.\n    return match;\n  });\n  source += \"';\\n\";\n\n  var argument = settings.variable;\n  if (argument) {\n    // Insure against third-party code injection. (CVE-2021-23358)\n    if (!bareIdentifier.test(argument)) throw new Error(\n      'variable is not a bare identifier: ' + argument\n    );\n  } else {\n    // If a variable is not specified, place data values in local scope.\n    source = 'with(obj||{}){\\n' + source + '}\\n';\n    argument = 'obj';\n  }\n\n  source = \"var __t,__p='',__j=Array.prototype.join,\" +\n    \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n    source + 'return __p;\\n';\n\n  var render;\n  try {\n    render = new Function(argument, '_', source);\n  } catch (e) {\n    e.source = source;\n    throw e;\n  }\n\n  var template = function(data) {\n    return render.call(this, data, _);\n  };\n\n  // Provide the compiled source as a convenience for precompilation.\n  template.source = 'function(' + argument + '){\\n' + source + '}';\n\n  return template;\n}\n","import isFunction from './isFunction.js';\nimport toPath from './_toPath.js';\n\n// Traverses the children of `obj` along `path`. If a child is a function, it\n// is invoked with its parent as context. Returns the value of the final\n// child, or `fallback` if any child is undefined.\nexport default function result(obj, path, fallback) {\n  path = toPath(path);\n  var length = path.length;\n  if (!length) {\n    return isFunction(fallback) ? fallback.call(obj) : fallback;\n  }\n  for (var i = 0; i < length; i++) {\n    var prop = obj == null ? void 0 : obj[path[i]];\n    if (prop === void 0) {\n      prop = fallback;\n      i = length; // Ensure we don't continue iterating.\n    }\n    obj = isFunction(prop) ? prop.call(obj) : prop;\n  }\n  return obj;\n}\n","// Generate a unique integer id (unique within the entire client session).\n// Useful for temporary DOM ids.\nvar idCounter = 0;\nexport default function uniqueId(prefix) {\n  var id = ++idCounter + '';\n  return prefix ? prefix + id : id;\n}\n","import _ from './underscore.js';\n\n// Start chaining a wrapped Underscore object.\nexport default function chain(obj) {\n  var instance = _(obj);\n  instance._chain = true;\n  return instance;\n}\n","import baseCreate from './_baseCreate.js';\nimport isObject from './isObject.js';\n\n// Internal function to execute `sourceFunc` bound to `context` with optional\n// `args`. Determines whether to execute a function as a constructor or as a\n// normal function.\nexport default function executeBound(sourceFunc, boundFunc, context, callingContext, args) {\n  if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n  var self = baseCreate(sourceFunc.prototype);\n  var result = sourceFunc.apply(self, args);\n  if (isObject(result)) return result;\n  return self;\n}\n","import restArguments from './restArguments.js';\nimport executeBound from './_executeBound.js';\nimport _ from './underscore.js';\n\n// Partially apply a function by creating a version that has had some of its\n// arguments pre-filled, without changing its dynamic `this` context. `_` acts\n// as a placeholder by default, allowing any combination of arguments to be\n// pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.\nvar partial = restArguments(function(func, boundArgs) {\n  var placeholder = partial.placeholder;\n  var bound = function() {\n    var position = 0, length = boundArgs.length;\n    var args = Array(length);\n    for (var i = 0; i < length; i++) {\n      args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];\n    }\n    while (position < arguments.length) args.push(arguments[position++]);\n    return executeBound(func, bound, this, this, args);\n  };\n  return bound;\n});\n\npartial.placeholder = _;\nexport default partial;\n","import restArguments from './restArguments.js';\nimport isFunction from './isFunction.js';\nimport executeBound from './_executeBound.js';\n\n// Create a function bound to a given object (assigning `this`, and arguments,\n// optionally).\nexport default restArguments(function(func, context, args) {\n  if (!isFunction(func)) throw new TypeError('Bind must be called on a function');\n  var bound = restArguments(function(callArgs) {\n    return executeBound(func, bound, context, this, args.concat(callArgs));\n  });\n  return bound;\n});\n","import createSizePropertyCheck from './_createSizePropertyCheck.js';\nimport getLength from './_getLength.js';\n\n// Internal helper for collection methods to determine whether a collection\n// should be iterated as an array or as an object.\n// Related: https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n// Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\nexport default createSizePropertyCheck(getLength);\n","import getLength from './_getLength.js';\nimport isArrayLike from './_isArrayLike.js';\nimport isArray from './isArray.js';\nimport isArguments from './isArguments.js';\n\n// Internal implementation of a recursive `flatten` function.\nexport default function flatten(input, depth, strict, output) {\n  output = output || [];\n  if (!depth && depth !== 0) {\n    depth = Infinity;\n  } else if (depth <= 0) {\n    return output.concat(input);\n  }\n  var idx = output.length;\n  for (var i = 0, length = getLength(input); i < length; i++) {\n    var value = input[i];\n    if (isArrayLike(value) && (isArray(value) || isArguments(value))) {\n      // Flatten current level of array or arguments object.\n      if (depth > 1) {\n        flatten(value, depth - 1, strict, output);\n        idx = output.length;\n      } else {\n        var j = 0, len = value.length;\n        while (j < len) output[idx++] = value[j++];\n      }\n    } else if (!strict) {\n      output[idx++] = value;\n    }\n  }\n  return output;\n}\n","import restArguments from './restArguments.js';\nimport flatten from './_flatten.js';\nimport bind from './bind.js';\n\n// Bind a number of an object's methods to that object. Remaining arguments\n// are the method names to be bound. Useful for ensuring that all callbacks\n// defined on an object belong to it.\nexport default restArguments(function(obj, keys) {\n  keys = flatten(keys, false, false);\n  var index = keys.length;\n  if (index < 1) throw new Error('bindAll must be passed function names');\n  while (index--) {\n    var key = keys[index];\n    obj[key] = bind(obj[key], obj);\n  }\n  return obj;\n});\n","import has from './_has.js';\n\n// Memoize an expensive function by storing its results.\nexport default function memoize(func, hasher) {\n  var memoize = function(key) {\n    var cache = memoize.cache;\n    var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n    if (!has(cache, address)) cache[address] = func.apply(this, arguments);\n    return cache[address];\n  };\n  memoize.cache = {};\n  return memoize;\n}\n","import restArguments from './restArguments.js';\n\n// Delays a function for the given number of milliseconds, and then calls\n// it with the arguments supplied.\nexport default restArguments(function(func, wait, args) {\n  return setTimeout(function() {\n    return func.apply(null, args);\n  }, wait);\n});\n","import partial from './partial.js';\nimport delay from './delay.js';\nimport _ from './underscore.js';\n\n// Defers a function, scheduling it to run after the current call stack has\n// cleared.\nexport default partial(delay, _, 1);\n","import now from './now.js';\n\n// Returns a function, that, when invoked, will only be triggered at most once\n// during a given window of time. Normally, the throttled function will run\n// as much as it can, without ever going more than once per `wait` duration;\n// but if you'd like to disable the execution on the leading edge, pass\n// `{leading: false}`. To disable execution on the trailing edge, ditto.\nexport default function throttle(func, wait, options) {\n  var timeout, context, args, result;\n  var previous = 0;\n  if (!options) options = {};\n\n  var later = function() {\n    previous = options.leading === false ? 0 : now();\n    timeout = null;\n    result = func.apply(context, args);\n    if (!timeout) context = args = null;\n  };\n\n  var throttled = function() {\n    var _now = now();\n    if (!previous && options.leading === false) previous = _now;\n    var remaining = wait - (_now - previous);\n    context = this;\n    args = arguments;\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n      previous = _now;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n    return result;\n  };\n\n  throttled.cancel = function() {\n    clearTimeout(timeout);\n    previous = 0;\n    timeout = context = args = null;\n  };\n\n  return throttled;\n}\n","import restArguments from './restArguments.js';\nimport now from './now.js';\n\n// When a sequence of calls of the returned function ends, the argument\n// function is triggered. The end of a sequence is defined by the `wait`\n// parameter. If `immediate` is passed, the argument function will be\n// triggered at the beginning of the sequence instead of at the end.\nexport default function debounce(func, wait, immediate) {\n  var timeout, previous, args, result, context;\n\n  var later = function() {\n    var passed = now() - previous;\n    if (wait > passed) {\n      timeout = setTimeout(later, wait - passed);\n    } else {\n      timeout = null;\n      if (!immediate) result = func.apply(context, args);\n      // This check is needed because `func` can recursively invoke `debounced`.\n      if (!timeout) args = context = null;\n    }\n  };\n\n  var debounced = restArguments(function(_args) {\n    context = this;\n    args = _args;\n    previous = now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n      if (immediate) result = func.apply(context, args);\n    }\n    return result;\n  });\n\n  debounced.cancel = function() {\n    clearTimeout(timeout);\n    timeout = args = context = null;\n  };\n\n  return debounced;\n}\n","import partial from './partial.js';\n\n// Returns the first function passed as an argument to the second,\n// allowing you to adjust arguments, run code before and after, and\n// conditionally execute the original function.\nexport default function wrap(func, wrapper) {\n  return partial(wrapper, func);\n}\n","// Returns a negated version of the passed-in predicate.\nexport default function negate(predicate) {\n  return function() {\n    return !predicate.apply(this, arguments);\n  };\n}\n","// Returns a function that is the composition of a list of functions, each\n// consuming the return value of the function that follows.\nexport default function compose() {\n  var args = arguments;\n  var start = args.length - 1;\n  return function() {\n    var i = start;\n    var result = args[start].apply(this, arguments);\n    while (i--) result = args[i].call(this, result);\n    return result;\n  };\n}\n","// Returns a function that will only be executed on and after the Nth call.\nexport default function after(times, func) {\n  return function() {\n    if (--times < 1) {\n      return func.apply(this, arguments);\n    }\n  };\n}\n","// Returns a function that will only be executed up to (but not including) the\n// Nth call.\nexport default function before(times, func) {\n  var memo;\n  return function() {\n    if (--times > 0) {\n      memo = func.apply(this, arguments);\n    }\n    if (times <= 1) func = null;\n    return memo;\n  };\n}\n","import partial from './partial.js';\nimport before from './before.js';\n\n// Returns a function that will be executed at most one time, no matter how\n// often you call it. Useful for lazy initialization.\nexport default partial(before, 2);\n","import cb from './_cb.js';\nimport keys from './keys.js';\n\n// Returns the first key on an object that passes a truth test.\nexport default function findKey(obj, predicate, context) {\n  predicate = cb(predicate, context);\n  var _keys = keys(obj), key;\n  for (var i = 0, length = _keys.length; i < length; i++) {\n    key = _keys[i];\n    if (predicate(obj[key], key, obj)) return key;\n  }\n}\n","import cb from './_cb.js';\nimport getLength from './_getLength.js';\n\n// Internal function to generate `_.findIndex` and `_.findLastIndex`.\nexport default function createPredicateIndexFinder(dir) {\n  return function(array, predicate, context) {\n    predicate = cb(predicate, context);\n    var length = getLength(array);\n    var index = dir > 0 ? 0 : length - 1;\n    for (; index >= 0 && index < length; index += dir) {\n      if (predicate(array[index], index, array)) return index;\n    }\n    return -1;\n  };\n}\n","import createPredicateIndexFinder from './_createPredicateIndexFinder.js';\n\n// Returns the first index on an array-like that passes a truth test.\nexport default createPredicateIndexFinder(1);\n","import createPredicateIndexFinder from './_createPredicateIndexFinder.js';\n\n// Returns the last index on an array-like that passes a truth test.\nexport default createPredicateIndexFinder(-1);\n","import cb from './_cb.js';\nimport getLength from './_getLength.js';\n\n// Use a comparator function to figure out the smallest index at which\n// an object should be inserted so as to maintain order. Uses binary search.\nexport default function sortedIndex(array, obj, iteratee, context) {\n  iteratee = cb(iteratee, context, 1);\n  var value = iteratee(obj);\n  var low = 0, high = getLength(array);\n  while (low < high) {\n    var mid = Math.floor((low + high) / 2);\n    if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n  }\n  return low;\n}\n","import getLength from './_getLength.js';\nimport { slice } from './_setup.js';\nimport isNaN from './isNaN.js';\n\n// Internal function to generate the `_.indexOf` and `_.lastIndexOf` functions.\nexport default function createIndexFinder(dir, predicateFind, sortedIndex) {\n  return function(array, item, idx) {\n    var i = 0, length = getLength(array);\n    if (typeof idx == 'number') {\n      if (dir > 0) {\n        i = idx >= 0 ? idx : Math.max(idx + length, i);\n      } else {\n        length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n      }\n    } else if (sortedIndex && idx && length) {\n      idx = sortedIndex(array, item);\n      return array[idx] === item ? idx : -1;\n    }\n    if (item !== item) {\n      idx = predicateFind(slice.call(array, i, length), isNaN);\n      return idx >= 0 ? idx + i : -1;\n    }\n    for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n      if (array[idx] === item) return idx;\n    }\n    return -1;\n  };\n}\n","import sortedIndex from './sortedIndex.js';\nimport findIndex from './findIndex.js';\nimport createIndexFinder from './_createIndexFinder.js';\n\n// Return the position of the first occurrence of an item in an array,\n// or -1 if the item is not included in the array.\n// If the array is large and already in sort order, pass `true`\n// for **isSorted** to use binary search.\nexport default createIndexFinder(1, findIndex, sortedIndex);\n","import findLastIndex from './findLastIndex.js';\nimport createIndexFinder from './_createIndexFinder.js';\n\n// Return the position of the last occurrence of an item in an array,\n// or -1 if the item is not included in the array.\nexport default createIndexFinder(-1, findLastIndex);\n","import isArrayLike from './_isArrayLike.js';\nimport findIndex from './findIndex.js';\nimport findKey from './findKey.js';\n\n// Return the first value which passes a truth test.\nexport default function find(obj, predicate, context) {\n  var keyFinder = isArrayLike(obj) ? findIndex : findKey;\n  var key = keyFinder(obj, predicate, context);\n  if (key !== void 0 && key !== -1) return obj[key];\n}\n","import find from './find.js';\nimport matcher from './matcher.js';\n\n// Convenience version of a common use case of `_.find`: getting the first\n// object containing specific `key:value` pairs.\nexport default function findWhere(obj, attrs) {\n  return find(obj, matcher(attrs));\n}\n","import optimizeCb from './_optimizeCb.js';\nimport isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\n\n// The cornerstone for collection functions, an `each`\n// implementation, aka `forEach`.\n// Handles raw objects in addition to array-likes. Treats all\n// sparse array-likes as if they were dense.\nexport default function each(obj, iteratee, context) {\n  iteratee = optimizeCb(iteratee, context);\n  var i, length;\n  if (isArrayLike(obj)) {\n    for (i = 0, length = obj.length; i < length; i++) {\n      iteratee(obj[i], i, obj);\n    }\n  } else {\n    var _keys = keys(obj);\n    for (i = 0, length = _keys.length; i < length; i++) {\n      iteratee(obj[_keys[i]], _keys[i], obj);\n    }\n  }\n  return obj;\n}\n","import cb from './_cb.js';\nimport isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\n\n// Return the results of applying the iteratee to each element.\nexport default function map(obj, iteratee, context) {\n  iteratee = cb(iteratee, context);\n  var _keys = !isArrayLike(obj) && keys(obj),\n      length = (_keys || obj).length,\n      results = Array(length);\n  for (var index = 0; index < length; index++) {\n    var currentKey = _keys ? _keys[index] : index;\n    results[index] = iteratee(obj[currentKey], currentKey, obj);\n  }\n  return results;\n}\n","import isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\nimport optimizeCb from './_optimizeCb.js';\n\n// Internal helper to create a reducing function, iterating left or right.\nexport default function createReduce(dir) {\n  // Wrap code that reassigns argument variables in a separate function than\n  // the one that accesses `arguments.length` to avoid a perf hit. (#1991)\n  var reducer = function(obj, iteratee, memo, initial) {\n    var _keys = !isArrayLike(obj) && keys(obj),\n        length = (_keys || obj).length,\n        index = dir > 0 ? 0 : length - 1;\n    if (!initial) {\n      memo = obj[_keys ? _keys[index] : index];\n      index += dir;\n    }\n    for (; index >= 0 && index < length; index += dir) {\n      var currentKey = _keys ? _keys[index] : index;\n      memo = iteratee(memo, obj[currentKey], currentKey, obj);\n    }\n    return memo;\n  };\n\n  return function(obj, iteratee, memo, context) {\n    var initial = arguments.length >= 3;\n    return reducer(obj, optimizeCb(iteratee, context, 4), memo, initial);\n  };\n}\n","import createReduce from './_createReduce.js';\n\n// **Reduce** builds up a single result from a list of values, aka `inject`,\n// or `foldl`.\nexport default createReduce(1);\n","import createReduce from './_createReduce.js';\n\n// The right-associative version of reduce, also known as `foldr`.\nexport default createReduce(-1);\n","import cb from './_cb.js';\nimport each from './each.js';\n\n// Return all the elements that pass a truth test.\nexport default function filter(obj, predicate, context) {\n  var results = [];\n  predicate = cb(predicate, context);\n  each(obj, function(value, index, list) {\n    if (predicate(value, index, list)) results.push(value);\n  });\n  return results;\n}\n","import filter from './filter.js';\nimport negate from './negate.js';\nimport cb from './_cb.js';\n\n// Return all the elements for which a truth test fails.\nexport default function reject(obj, predicate, context) {\n  return filter(obj, negate(cb(predicate)), context);\n}\n","import cb from './_cb.js';\nimport isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\n\n// Determine whether all of the elements pass a truth test.\nexport default function every(obj, predicate, context) {\n  predicate = cb(predicate, context);\n  var _keys = !isArrayLike(obj) && keys(obj),\n      length = (_keys || obj).length;\n  for (var index = 0; index < length; index++) {\n    var currentKey = _keys ? _keys[index] : index;\n    if (!predicate(obj[currentKey], currentKey, obj)) return false;\n  }\n  return true;\n}\n","import cb from './_cb.js';\nimport isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\n\n// Determine if at least one element in the object passes a truth test.\nexport default function some(obj, predicate, context) {\n  predicate = cb(predicate, context);\n  var _keys = !isArrayLike(obj) && keys(obj),\n      length = (_keys || obj).length;\n  for (var index = 0; index < length; index++) {\n    var currentKey = _keys ? _keys[index] : index;\n    if (predicate(obj[currentKey], currentKey, obj)) return true;\n  }\n  return false;\n}\n","import isArrayLike from './_isArrayLike.js';\nimport values from './values.js';\nimport indexOf from './indexOf.js';\n\n// Determine if the array or object contains a given item (using `===`).\nexport default function contains(obj, item, fromIndex, guard) {\n  if (!isArrayLike(obj)) obj = values(obj);\n  if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n  return indexOf(obj, item, fromIndex) >= 0;\n}\n","import restArguments from './restArguments.js';\nimport isFunction from './isFunction.js';\nimport map from './map.js';\nimport deepGet from './_deepGet.js';\nimport toPath from './_toPath.js';\n\n// Invoke a method (with arguments) on every item in a collection.\nexport default restArguments(function(obj, path, args) {\n  var contextPath, func;\n  if (isFunction(path)) {\n    func = path;\n  } else {\n    path = toPath(path);\n    contextPath = path.slice(0, -1);\n    path = path[path.length - 1];\n  }\n  return map(obj, function(context) {\n    var method = func;\n    if (!method) {\n      if (contextPath && contextPath.length) {\n        context = deepGet(context, contextPath);\n      }\n      if (context == null) return void 0;\n      method = context[path];\n    }\n    return method == null ? method : method.apply(context, args);\n  });\n});\n","import map from './map.js';\nimport property from './property.js';\n\n// Convenience version of a common use case of `_.map`: fetching a property.\nexport default function pluck(obj, key) {\n  return map(obj, property(key));\n}\n","import filter from './filter.js';\nimport matcher from './matcher.js';\n\n// Convenience version of a common use case of `_.filter`: selecting only\n// objects containing specific `key:value` pairs.\nexport default function where(obj, attrs) {\n  return filter(obj, matcher(attrs));\n}\n","import isArrayLike from './_isArrayLike.js';\nimport values from './values.js';\nimport cb from './_cb.js';\nimport each from './each.js';\n\n// Return the maximum element (or element-based computation).\nexport default function max(obj, iteratee, context) {\n  var result = -Infinity, lastComputed = -Infinity,\n      value, computed;\n  if (iteratee == null || (typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null)) {\n    obj = isArrayLike(obj) ? obj : values(obj);\n    for (var i = 0, length = obj.length; i < length; i++) {\n      value = obj[i];\n      if (value != null && value > result) {\n        result = value;\n      }\n    }\n  } else {\n    iteratee = cb(iteratee, context);\n    each(obj, function(v, index, list) {\n      computed = iteratee(v, index, list);\n      if (computed > lastComputed || (computed === -Infinity && result === -Infinity)) {\n        result = v;\n        lastComputed = computed;\n      }\n    });\n  }\n  return result;\n}\n","import isArrayLike from './_isArrayLike.js';\nimport values from './values.js';\nimport cb from './_cb.js';\nimport each from './each.js';\n\n// Return the minimum element (or element-based computation).\nexport default function min(obj, iteratee, context) {\n  var result = Infinity, lastComputed = Infinity,\n      value, computed;\n  if (iteratee == null || (typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null)) {\n    obj = isArrayLike(obj) ? obj : values(obj);\n    for (var i = 0, length = obj.length; i < length; i++) {\n      value = obj[i];\n      if (value != null && value < result) {\n        result = value;\n      }\n    }\n  } else {\n    iteratee = cb(iteratee, context);\n    each(obj, function(v, index, list) {\n      computed = iteratee(v, index, list);\n      if (computed < lastComputed || (computed === Infinity && result === Infinity)) {\n        result = v;\n        lastComputed = computed;\n      }\n    });\n  }\n  return result;\n}\n","import isArray from './isArray.js';\nimport { slice } from './_setup.js';\nimport isString from './isString.js';\nimport isArrayLike from './_isArrayLike.js';\nimport map from './map.js';\nimport identity from './identity.js';\nimport values from './values.js';\n\n// Safely create a real, live array from anything iterable.\nvar reStrSymbol = /[^\\ud800-\\udfff]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff]/g;\nexport default function toArray(obj) {\n  if (!obj) return [];\n  if (isArray(obj)) return slice.call(obj);\n  if (isString(obj)) {\n    // Keep surrogate pair characters together.\n    return obj.match(reStrSymbol);\n  }\n  if (isArrayLike(obj)) return map(obj, identity);\n  return values(obj);\n}\n","import isArrayLike from './_isArrayLike.js';\nimport values from './values.js';\nimport getLength from './_getLength.js';\nimport random from './random.js';\nimport toArray from './toArray.js';\n\n// Sample **n** random values from a collection using the modern version of the\n// [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n// If **n** is not specified, returns a single random element.\n// The internal `guard` argument allows it to work with `_.map`.\nexport default function sample(obj, n, guard) {\n  if (n == null || guard) {\n    if (!isArrayLike(obj)) obj = values(obj);\n    return obj[random(obj.length - 1)];\n  }\n  var sample = toArray(obj);\n  var length = getLength(sample);\n  n = Math.max(Math.min(n, length), 0);\n  var last = length - 1;\n  for (var index = 0; index < n; index++) {\n    var rand = random(index, last);\n    var temp = sample[index];\n    sample[index] = sample[rand];\n    sample[rand] = temp;\n  }\n  return sample.slice(0, n);\n}\n","import sample from './sample.js';\n\n// Shuffle a collection.\nexport default function shuffle(obj) {\n  return sample(obj, Infinity);\n}\n","import cb from './_cb.js';\nimport pluck from './pluck.js';\nimport map from './map.js';\n\n// Sort the object's values by a criterion produced by an iteratee.\nexport default function sortBy(obj, iteratee, context) {\n  var index = 0;\n  iteratee = cb(iteratee, context);\n  return pluck(map(obj, function(value, key, list) {\n    return {\n      value: value,\n      index: index++,\n      criteria: iteratee(value, key, list)\n    };\n  }).sort(function(left, right) {\n    var a = left.criteria;\n    var b = right.criteria;\n    if (a !== b) {\n      if (a > b || a === void 0) return 1;\n      if (a < b || b === void 0) return -1;\n    }\n    return left.index - right.index;\n  }), 'value');\n}\n","import cb from './_cb.js';\nimport each from './each.js';\n\n// An internal function used for aggregate \"group by\" operations.\nexport default function group(behavior, partition) {\n  return function(obj, iteratee, context) {\n    var result = partition ? [[], []] : {};\n    iteratee = cb(iteratee, context);\n    each(obj, function(value, index) {\n      var key = iteratee(value, index, obj);\n      behavior(result, value, key);\n    });\n    return result;\n  };\n}\n","import group from './_group.js';\nimport has from './_has.js';\n\n// Groups the object's values by a criterion. Pass either a string attribute\n// to group by, or a function that returns the criterion.\nexport default group(function(result, value, key) {\n  if (has(result, key)) result[key].push(value); else result[key] = [value];\n});\n","import group from './_group.js';\n\n// Indexes the object's values by a criterion, similar to `_.groupBy`, but for\n// when you know that your index values will be unique.\nexport default group(function(result, value, key) {\n  result[key] = value;\n});\n","import group from './_group.js';\nimport has from './_has.js';\n\n// Counts instances of an object that group by a certain criterion. Pass\n// either a string attribute to count by, or a function that returns the\n// criterion.\nexport default group(function(result, value, key) {\n  if (has(result, key)) result[key]++; else result[key] = 1;\n});\n","import group from './_group.js';\n\n// Split a collection into two arrays: one whose elements all pass the given\n// truth test, and one whose elements all do not pass the truth test.\nexport default group(function(result, value, pass) {\n  result[pass ? 0 : 1].push(value);\n}, true);\n","import isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\n\n// Return the number of elements in a collection.\nexport default function size(obj) {\n  if (obj == null) return 0;\n  return isArrayLike(obj) ? obj.length : keys(obj).length;\n}\n","// Internal `_.pick` helper function to determine whether `key` is an enumerable\n// property name of `obj`.\nexport default function keyInObj(value, key, obj) {\n  return key in obj;\n}\n","import restArguments from './restArguments.js';\nimport isFunction from './isFunction.js';\nimport optimizeCb from './_optimizeCb.js';\nimport allKeys from './allKeys.js';\nimport keyInObj from './_keyInObj.js';\nimport flatten from './_flatten.js';\n\n// Return a copy of the object only containing the allowed properties.\nexport default restArguments(function(obj, keys) {\n  var result = {}, iteratee = keys[0];\n  if (obj == null) return result;\n  if (isFunction(iteratee)) {\n    if (keys.length > 1) iteratee = optimizeCb(iteratee, keys[1]);\n    keys = allKeys(obj);\n  } else {\n    iteratee = keyInObj;\n    keys = flatten(keys, false, false);\n    obj = Object(obj);\n  }\n  for (var i = 0, length = keys.length; i < length; i++) {\n    var key = keys[i];\n    var value = obj[key];\n    if (iteratee(value, key, obj)) result[key] = value;\n  }\n  return result;\n});\n","import restArguments from './restArguments.js';\nimport isFunction from './isFunction.js';\nimport negate from './negate.js';\nimport map from './map.js';\nimport flatten from './_flatten.js';\nimport contains from './contains.js';\nimport pick from './pick.js';\n\n// Return a copy of the object without the disallowed properties.\nexport default restArguments(function(obj, keys) {\n  var iteratee = keys[0], context;\n  if (isFunction(iteratee)) {\n    iteratee = negate(iteratee);\n    if (keys.length > 1) context = keys[1];\n  } else {\n    keys = map(flatten(keys, false, false), String);\n    iteratee = function(value, key) {\n      return !contains(keys, key);\n    };\n  }\n  return pick(obj, iteratee, context);\n});\n","import { slice } from './_setup.js';\n\n// Returns everything but the last entry of the array. Especially useful on\n// the arguments object. Passing **n** will return all the values in\n// the array, excluding the last N.\nexport default function initial(array, n, guard) {\n  return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n}\n","import initial from './initial.js';\n\n// Get the first element of an array. Passing **n** will return the first N\n// values in the array. The **guard** check allows it to work with `_.map`.\nexport default function first(array, n, guard) {\n  if (array == null || array.length < 1) return n == null || guard ? void 0 : [];\n  if (n == null || guard) return array[0];\n  return initial(array, array.length - n);\n}\n","import { slice } from './_setup.js';\n\n// Returns everything but the first entry of the `array`. Especially useful on\n// the `arguments` object. Passing an **n** will return the rest N values in the\n// `array`.\nexport default function rest(array, n, guard) {\n  return slice.call(array, n == null || guard ? 1 : n);\n}\n","import rest from './rest.js';\n\n// Get the last element of an array. Passing **n** will return the last N\n// values in the array.\nexport default function last(array, n, guard) {\n  if (array == null || array.length < 1) return n == null || guard ? void 0 : [];\n  if (n == null || guard) return array[array.length - 1];\n  return rest(array, Math.max(0, array.length - n));\n}\n","import filter from './filter.js';\n\n// Trim out all falsy values from an array.\nexport default function compact(array) {\n  return filter(array, Boolean);\n}\n","import _flatten from './_flatten.js';\n\n// Flatten out an array, either recursively (by default), or up to `depth`.\n// Passing `true` or `false` as `depth` means `1` or `Infinity`, respectively.\nexport default function flatten(array, depth) {\n  return _flatten(array, depth, false);\n}\n","import restArguments from './restArguments.js';\nimport flatten from './_flatten.js';\nimport filter from './filter.js';\nimport contains from './contains.js';\n\n// Take the difference between one array and a number of other arrays.\n// Only the elements present in just the first array will remain.\nexport default restArguments(function(array, rest) {\n  rest = flatten(rest, true, true);\n  return filter(array, function(value){\n    return !contains(rest, value);\n  });\n});\n","import restArguments from './restArguments.js';\nimport difference from './difference.js';\n\n// Return a version of the array that does not contain the specified value(s).\nexport default restArguments(function(array, otherArrays) {\n  return difference(array, otherArrays);\n});\n","import isBoolean from './isBoolean.js';\nimport cb from './_cb.js';\nimport getLength from './_getLength.js';\nimport contains from './contains.js';\n\n// Produce a duplicate-free version of the array. If the array has already\n// been sorted, you have the option of using a faster algorithm.\n// The faster algorithm will not work with an iteratee if the iteratee\n// is not a one-to-one function, so providing an iteratee will disable\n// the faster algorithm.\nexport default function uniq(array, isSorted, iteratee, context) {\n  if (!isBoolean(isSorted)) {\n    context = iteratee;\n    iteratee = isSorted;\n    isSorted = false;\n  }\n  if (iteratee != null) iteratee = cb(iteratee, context);\n  var result = [];\n  var seen = [];\n  for (var i = 0, length = getLength(array); i < length; i++) {\n    var value = array[i],\n        computed = iteratee ? iteratee(value, i, array) : value;\n    if (isSorted && !iteratee) {\n      if (!i || seen !== computed) result.push(value);\n      seen = computed;\n    } else if (iteratee) {\n      if (!contains(seen, computed)) {\n        seen.push(computed);\n        result.push(value);\n      }\n    } else if (!contains(result, value)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n","import restArguments from './restArguments.js';\nimport uniq from './uniq.js';\nimport flatten from './_flatten.js';\n\n// Produce an array that contains the union: each distinct element from all of\n// the passed-in arrays.\nexport default restArguments(function(arrays) {\n  return uniq(flatten(arrays, true, true));\n});\n","import getLength from './_getLength.js';\nimport contains from './contains.js';\n\n// Produce an array that contains every item shared between all the\n// passed-in arrays.\nexport default function intersection(array) {\n  var result = [];\n  var argsLength = arguments.length;\n  for (var i = 0, length = getLength(array); i < length; i++) {\n    var item = array[i];\n    if (contains(result, item)) continue;\n    var j;\n    for (j = 1; j < argsLength; j++) {\n      if (!contains(arguments[j], item)) break;\n    }\n    if (j === argsLength) result.push(item);\n  }\n  return result;\n}\n","import max from './max.js';\nimport getLength from './_getLength.js';\nimport pluck from './pluck.js';\n\n// Complement of zip. Unzip accepts an array of arrays and groups\n// each array's elements on shared indices.\nexport default function unzip(array) {\n  var length = (array && max(array, getLength).length) || 0;\n  var result = Array(length);\n\n  for (var index = 0; index < length; index++) {\n    result[index] = pluck(array, index);\n  }\n  return result;\n}\n","import restArguments from './restArguments.js';\nimport unzip from './unzip.js';\n\n// Zip together multiple lists into a single array -- elements that share\n// an index go together.\nexport default restArguments(unzip);\n","import getLength  from './_getLength.js';\n\n// Converts lists into objects. Pass either a single array of `[key, value]`\n// pairs, or two parallel arrays of the same length -- one of keys, and one of\n// the corresponding values. Passing by pairs is the reverse of `_.pairs`.\nexport default function object(list, values) {\n  var result = {};\n  for (var i = 0, length = getLength(list); i < length; i++) {\n    if (values) {\n      result[list[i]] = values[i];\n    } else {\n      result[list[i][0]] = list[i][1];\n    }\n  }\n  return result;\n}\n","// Generate an integer Array containing an arithmetic progression. A port of\n// the native Python `range()` function. See\n// [the Python documentation](https://docs.python.org/library/functions.html#range).\nexport default function range(start, stop, step) {\n  if (stop == null) {\n    stop = start || 0;\n    start = 0;\n  }\n  if (!step) {\n    step = stop < start ? -1 : 1;\n  }\n\n  var length = Math.max(Math.ceil((stop - start) / step), 0);\n  var range = Array(length);\n\n  for (var idx = 0; idx < length; idx++, start += step) {\n    range[idx] = start;\n  }\n\n  return range;\n}\n","import { slice } from './_setup.js';\n\n// Chunk a single array into multiple arrays, each containing `count` or fewer\n// items.\nexport default function chunk(array, count) {\n  if (count == null || count < 1) return [];\n  var result = [];\n  var i = 0, length = array.length;\n  while (i < length) {\n    result.push(slice.call(array, i, i += count));\n  }\n  return result;\n}\n","import _ from './underscore.js';\n\n// Helper function to continue chaining intermediate results.\nexport default function chainResult(instance, obj) {\n  return instance._chain ? _(obj).chain() : obj;\n}\n","import _ from './underscore.js';\nimport each from './each.js';\nimport functions from './functions.js';\nimport { push } from './_setup.js';\nimport chainResult from './_chainResult.js';\n\n// Add your own custom functions to the Underscore object.\nexport default function mixin(obj) {\n  each(functions(obj), function(name) {\n    var func = _[name] = obj[name];\n    _.prototype[name] = function() {\n      var args = [this._wrapped];\n      push.apply(args, arguments);\n      return chainResult(this, func.apply(_, args));\n    };\n  });\n  return _;\n}\n","import _ from './underscore.js';\nimport each from './each.js';\nimport { ArrayProto } from './_setup.js';\nimport chainResult from './_chainResult.js';\n\n// Add all mutator `Array` functions to the wrapper.\neach(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n  var method = ArrayProto[name];\n  _.prototype[name] = function() {\n    var obj = this._wrapped;\n    if (obj != null) {\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) {\n        delete obj[0];\n      }\n    }\n    return chainResult(this, obj);\n  };\n});\n\n// Add all accessor `Array` functions to the wrapper.\neach(['concat', 'join', 'slice'], function(name) {\n  var method = ArrayProto[name];\n  _.prototype[name] = function() {\n    var obj = this._wrapped;\n    if (obj != null) obj = method.apply(obj, arguments);\n    return chainResult(this, obj);\n  };\n});\n\nexport default _;\n","// Default Export\n// ==============\n// In this module, we mix our bundled exports into the `_` object and export\n// the result. This is analogous to setting `module.exports = _` in CommonJS.\n// Hence, this module is also the entry point of our UMD bundle and the package\n// entry point for CommonJS and AMD users. In other words, this is (the source\n// of) the module you are interfacing with when you do any of the following:\n//\n// ```js\n// // CommonJS\n// var _ = require('underscore');\n//\n// // AMD\n// define(['underscore'], function(_) {...});\n//\n// // UMD in the browser\n// // _ is available as a global variable\n// ```\nimport * as allExports from './index.js';\nimport { mixin } from './index.js';\n\n// Add all of the Underscore functions to the wrapper object.\nvar _ = mixin(allExports);\n// Legacy Node.js API.\n_._ = _;\n// Export the Underscore API.\nexport default _;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","/** @license React v16.14.0\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var l=require(\"object-assign\"),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.forward_ref\"):60112,y=n?Symbol.for(\"react.suspense\"):60113,z=n?Symbol.for(\"react.memo\"):60115,A=n?Symbol.for(\"react.lazy\"):\n60116,B=\"function\"===typeof Symbol&&Symbol.iterator;function C(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nvar D={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},E={};function F(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}F.prototype.isReactComponent={};F.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(C(85));this.updater.enqueueSetState(this,a,b,\"setState\")};F.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction G(){}G.prototype=F.prototype;function H(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}var I=H.prototype=new G;I.constructor=H;l(I,F.prototype);I.isPureReactComponent=!0;var J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,c){var e,d={},g=null,k=null;if(null!=b)for(e in void 0!==b.ref&&(k=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,e)&&!L.hasOwnProperty(e)&&(d[e]=b[e]);var f=arguments.length-2;if(1===f)d.children=c;else if(1<f){for(var h=Array(f),m=0;m<f;m++)h[m]=arguments[m+2];d.children=h}if(a&&a.defaultProps)for(e in f=a.defaultProps,f)void 0===d[e]&&(d[e]=f[e]);return{$$typeof:p,type:a,key:g,ref:k,props:d,_owner:J.current}}\nfunction N(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g,Q=[];function R(a,b,c,e){if(Q.length){var d=Q.pop();d.result=a;d.keyPrefix=b;d.func=c;d.context=e;d.count=0;return d}return{result:a,keyPrefix:b,func:c,context:e,count:0}}\nfunction S(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>Q.length&&Q.push(a)}\nfunction T(a,b,c,e){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return c(e,a,\"\"===b?\".\"+U(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var k=0;k<a.length;k++){d=a[k];var f=b+U(d,k);g+=T(d,f,c,e)}else if(null===a||\"object\"!==typeof a?f=null:(f=B&&a[B]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),k=\n0;!(d=a.next()).done;)d=d.value,f=b+U(d,k++),g+=T(d,f,c,e);else if(\"object\"===d)throw c=\"\"+a,Error(C(31,\"[object Object]\"===c?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":c,\"\"));return g}function V(a,b,c){return null==a?0:T(a,\"\",b,c)}function U(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function W(a,b){a.func.call(a.context,b,a.count++)}\nfunction aa(a,b,c){var e=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?X(a,e,c,function(a){return a}):null!=a&&(O(a)&&(a=N(a,d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(P,\"$&/\")+\"/\")+c)),e.push(a))}function X(a,b,c,e,d){var g=\"\";null!=c&&(g=(\"\"+c).replace(P,\"$&/\")+\"/\");b=R(b,g,e,d);V(a,aa,b);S(b)}var Y={current:null};function Z(){var a=Y.current;if(null===a)throw Error(C(321));return a}\nvar ba={ReactCurrentDispatcher:Y,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:J,IsSomeRendererActing:{current:!1},assign:l};exports.Children={map:function(a,b,c){if(null==a)return a;var e=[];X(a,e,null,b,c);return e},forEach:function(a,b,c){if(null==a)return a;b=R(null,null,b,c);V(a,W,b);S(b)},count:function(a){return V(a,function(){return null},null)},toArray:function(a){var b=[];X(a,b,null,function(a){return a});return b},only:function(a){if(!O(a))throw Error(C(143));return a}};\nexports.Component=F;exports.Fragment=r;exports.Profiler=u;exports.PureComponent=H;exports.StrictMode=t;exports.Suspense=y;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ba;\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(C(267,a));var e=l({},a.props),d=a.key,g=a.ref,k=a._owner;if(null!=b){void 0!==b.ref&&(g=b.ref,k=J.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var f=a.type.defaultProps;for(h in b)K.call(b,h)&&!L.hasOwnProperty(h)&&(e[h]=void 0===b[h]&&void 0!==f?f[h]:b[h])}var h=arguments.length-2;if(1===h)e.children=c;else if(1<h){f=Array(h);for(var m=0;m<h;m++)f[m]=arguments[m+2];e.children=f}return{$$typeof:p,type:a.type,\nkey:d,ref:g,props:e,_owner:k}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:x,render:a}};exports.isValidElement=O;\nexports.lazy=function(a){return{$$typeof:A,_ctor:a,_status:-1,_result:null}};exports.memo=function(a,b){return{$$typeof:z,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return Z().useCallback(a,b)};exports.useContext=function(a,b){return Z().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return Z().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return Z().useImperativeHandle(a,b,c)};\nexports.useLayoutEffect=function(a,b){return Z().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return Z().useMemo(a,b)};exports.useReducer=function(a,b,c){return Z().useReducer(a,b,c)};exports.useRef=function(a){return Z().useRef(a)};exports.useState=function(a){return Z().useState(a)};exports.version=\"16.14.0\";\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}